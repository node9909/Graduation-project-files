
ADS1298_READ_ID.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007634  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00087634  00087634  00017634  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000b90  20070000  0008763c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000003b4  20070b90  000881cc  00020b90  2**2
                  ALLOC
  4 .stack        00002004  20070f44  00088580  00020b90  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020b90  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020bb9  2**0
                  CONTENTS, READONLY
  7 .debug_info   00018e9b  00000000  00000000  00020c12  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003615  00000000  00000000  00039aad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000930  00000000  00000000  0003d0c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  0001aba1  00000000  00000000  0003d9f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000f58e  00000000  00000000  00058593  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000729ef  00000000  00000000  00067b21  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00005ae9  00000000  00000000  000da510  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000958  00000000  00000000  000dfff9  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000021cc  00000000  00000000  000e0954  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	48 2f 07 20 89 25 08 00 85 25 08 00 85 25 08 00     H/. .%...%...%..
   80010:	85 25 08 00 85 25 08 00 85 25 08 00 00 00 00 00     .%...%...%......
	...
   8002c:	85 25 08 00 85 25 08 00 00 00 00 00 85 25 08 00     .%...%.......%..
   8003c:	85 25 08 00 85 25 08 00 85 25 08 00 85 25 08 00     .%...%...%...%..
   8004c:	85 25 08 00 85 25 08 00 85 25 08 00 85 25 08 00     .%...%...%...%..
   8005c:	85 25 08 00 85 25 08 00 85 25 08 00 00 00 00 00     .%...%...%......
   8006c:	b9 24 08 00 cd 24 08 00 e1 24 08 00 f5 24 08 00     .$...$...$...$..
	...
   80084:	85 25 08 00 85 25 08 00 85 25 08 00 85 25 08 00     .%...%...%...%..
   80094:	85 25 08 00 85 25 08 00 85 25 08 00 85 25 08 00     .%...%...%...%..
   800a4:	00 00 00 00 85 25 08 00 85 25 08 00 85 25 08 00     .....%...%...%..
   800b4:	85 25 08 00 85 25 08 00 85 25 08 00 85 25 08 00     .%...%...%...%..
   800c4:	85 25 08 00 85 25 08 00 85 25 08 00 85 25 08 00     .%...%...%...%..
   800d4:	85 25 08 00 85 25 08 00 85 25 08 00 d1 14 08 00     .%...%...%......
   800e4:	85 25 08 00 85 25 08 00 85 25 08 00 85 25 08 00     .%...%...%...%..

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070b90 	.word	0x20070b90
   80110:	00000000 	.word	0x00000000
   80114:	0008763c 	.word	0x0008763c

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	0008763c 	.word	0x0008763c
   80154:	20070b94 	.word	0x20070b94
   80158:	0008763c 	.word	0x0008763c
   8015c:	00000000 	.word	0x00000000

00080160 <udi_cdc_comm_enable>:
	uint8_t port;
	uint8_t iface_comm_num;

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
	udi_cdc_nb_comm_enabled = 0;
   80160:	490e      	ldr	r1, [pc, #56]	; (8019c <udi_cdc_comm_enable+0x3c>)
   80162:	2300      	movs	r3, #0
   80164:	700b      	strb	r3, [r1, #0]
	}
	port = udi_cdc_nb_comm_enabled;
#endif

	// Initialize control signal management
	udi_cdc_state[port] = CPU_TO_LE16(0);
   80166:	4a0e      	ldr	r2, [pc, #56]	; (801a0 <udi_cdc_comm_enable+0x40>)
   80168:	8013      	strh	r3, [r2, #0]

	uid_cdc_state_msg[port].header.bmRequestType =
   8016a:	4a0e      	ldr	r2, [pc, #56]	; (801a4 <udi_cdc_comm_enable+0x44>)
   8016c:	20a1      	movs	r0, #161	; 0xa1
   8016e:	7010      	strb	r0, [r2, #0]
			USB_REQ_DIR_IN | USB_REQ_TYPE_CLASS |
			USB_REQ_RECIP_INTERFACE;
	uid_cdc_state_msg[port].header.bNotification = USB_REQ_CDC_NOTIFY_SERIAL_STATE;
   80170:	2020      	movs	r0, #32
   80172:	7050      	strb	r0, [r2, #1]
	uid_cdc_state_msg[port].header.wValue = LE16(0);
   80174:	8053      	strh	r3, [r2, #2]
	default:
		iface_comm_num = UDI_CDC_COMM_IFACE_NUMBER_0;
		break;
	}

	uid_cdc_state_msg[port].header.wIndex = LE16(iface_comm_num);
   80176:	8093      	strh	r3, [r2, #4]
	uid_cdc_state_msg[port].header.wLength = LE16(2);
   80178:	2002      	movs	r0, #2
   8017a:	80d0      	strh	r0, [r2, #6]
	uid_cdc_state_msg[port].value = CPU_TO_LE16(0);
   8017c:	8113      	strh	r3, [r2, #8]

	udi_cdc_line_coding[port].dwDTERate = CPU_TO_LE32(UDI_CDC_DEFAULT_RATE);
   8017e:	4a0a      	ldr	r2, [pc, #40]	; (801a8 <udi_cdc_comm_enable+0x48>)
   80180:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
   80184:	6010      	str	r0, [r2, #0]
	udi_cdc_line_coding[port].bCharFormat = UDI_CDC_DEFAULT_STOPBITS;
   80186:	7113      	strb	r3, [r2, #4]
	udi_cdc_line_coding[port].bParityType = UDI_CDC_DEFAULT_PARITY;
   80188:	7153      	strb	r3, [r2, #5]
	udi_cdc_line_coding[port].bDataBits = UDI_CDC_DEFAULT_DATABITS;
   8018a:	2308      	movs	r3, #8
   8018c:	7193      	strb	r3, [r2, #6]
	// to initialize memories or indicate that interface is enabled
	UDI_CDC_SET_CODING_EXT(port,(&udi_cdc_line_coding[port]));
	if (!UDI_CDC_ENABLE_EXT(port)) {
		return false;
	}
	udi_cdc_nb_comm_enabled++;
   8018e:	780b      	ldrb	r3, [r1, #0]
   80190:	3301      	adds	r3, #1
   80192:	b2db      	uxtb	r3, r3
   80194:	700b      	strb	r3, [r1, #0]
	return true;
}
   80196:	2001      	movs	r0, #1
   80198:	4770      	bx	lr
   8019a:	bf00      	nop
   8019c:	20070bb7 	.word	0x20070bb7
   801a0:	20070c4c 	.word	0x20070c4c
   801a4:	20070ce4 	.word	0x20070ce4
   801a8:	20070bb0 	.word	0x20070bb0

000801ac <udi_cdc_comm_disable>:
}

void udi_cdc_comm_disable(void)
{
	Assert(udi_cdc_nb_comm_enabled != 0);
	udi_cdc_nb_comm_enabled--;
   801ac:	4a02      	ldr	r2, [pc, #8]	; (801b8 <udi_cdc_comm_disable+0xc>)
   801ae:	7813      	ldrb	r3, [r2, #0]
   801b0:	3b01      	subs	r3, #1
   801b2:	b2db      	uxtb	r3, r3
   801b4:	7013      	strb	r3, [r2, #0]
   801b6:	4770      	bx	lr
   801b8:	20070bb7 	.word	0x20070bb7

000801bc <udi_cdc_data_disable>:
void udi_cdc_data_disable(void)
{
	uint8_t port;

	Assert(udi_cdc_nb_data_enabled != 0);
	udi_cdc_nb_data_enabled--;
   801bc:	4a04      	ldr	r2, [pc, #16]	; (801d0 <udi_cdc_data_disable+0x14>)
   801be:	7813      	ldrb	r3, [r2, #0]
   801c0:	3b01      	subs	r3, #1
   801c2:	b2db      	uxtb	r3, r3
   801c4:	7013      	strb	r3, [r2, #0]
	port = udi_cdc_nb_data_enabled;
   801c6:	7813      	ldrb	r3, [r2, #0]
	UDI_CDC_DISABLE_EXT(port);
	udi_cdc_data_running = false;
   801c8:	2200      	movs	r2, #0
   801ca:	4b02      	ldr	r3, [pc, #8]	; (801d4 <udi_cdc_data_disable+0x18>)
   801cc:	701a      	strb	r2, [r3, #0]
   801ce:	4770      	bx	lr
   801d0:	20070bb8 	.word	0x20070bb8
   801d4:	20070bae 	.word	0x20070bae

000801d8 <udi_cdc_data_setup>:
}

bool udi_cdc_data_setup(void)
{
	return false;  // request Not supported
}
   801d8:	2000      	movs	r0, #0
   801da:	4770      	bx	lr

000801dc <udi_cdc_getsetting>:

uint8_t udi_cdc_getsetting(void)
{
	return 0;      // CDC don't have multiple alternate setting
}
   801dc:	2000      	movs	r0, #0
   801de:	4770      	bx	lr

000801e0 <udi_cdc_comm_setup>:
	if (Udd_setup_is_in()) {
   801e0:	4b1d      	ldr	r3, [pc, #116]	; (80258 <udi_cdc_comm_setup+0x78>)
   801e2:	781b      	ldrb	r3, [r3, #0]
   801e4:	f013 0f80 	tst.w	r3, #128	; 0x80
   801e8:	d105      	bne.n	801f6 <udi_cdc_comm_setup+0x16>
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
   801ea:	f003 0360 	and.w	r3, r3, #96	; 0x60
   801ee:	2b20      	cmp	r3, #32
   801f0:	d018      	beq.n	80224 <udi_cdc_comm_setup+0x44>
	return false;  // request Not supported
   801f2:	2000      	movs	r0, #0
   801f4:	4770      	bx	lr
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
   801f6:	f003 0360 	and.w	r3, r3, #96	; 0x60
   801fa:	2b20      	cmp	r3, #32
   801fc:	d001      	beq.n	80202 <udi_cdc_comm_setup+0x22>
	return false;  // request Not supported
   801fe:	2000      	movs	r0, #0
   80200:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
   80202:	4b15      	ldr	r3, [pc, #84]	; (80258 <udi_cdc_comm_setup+0x78>)
   80204:	785b      	ldrb	r3, [r3, #1]
   80206:	2b21      	cmp	r3, #33	; 0x21
   80208:	d124      	bne.n	80254 <udi_cdc_comm_setup+0x74>
						udd_g_ctrlreq.req.wLength)
   8020a:	4b13      	ldr	r3, [pc, #76]	; (80258 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
   8020c:	88db      	ldrh	r3, [r3, #6]
   8020e:	2b07      	cmp	r3, #7
   80210:	d001      	beq.n	80216 <udi_cdc_comm_setup+0x36>
					return false; // Error for USB host
   80212:	2000      	movs	r0, #0
   80214:	4770      	bx	lr
				udd_g_ctrlreq.payload =
   80216:	4b10      	ldr	r3, [pc, #64]	; (80258 <udi_cdc_comm_setup+0x78>)
   80218:	4a10      	ldr	r2, [pc, #64]	; (8025c <udi_cdc_comm_setup+0x7c>)
   8021a:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
   8021c:	2207      	movs	r2, #7
   8021e:	819a      	strh	r2, [r3, #12]
				return true;
   80220:	2001      	movs	r0, #1
   80222:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
   80224:	4b0c      	ldr	r3, [pc, #48]	; (80258 <udi_cdc_comm_setup+0x78>)
   80226:	7858      	ldrb	r0, [r3, #1]
   80228:	2820      	cmp	r0, #32
   8022a:	d004      	beq.n	80236 <udi_cdc_comm_setup+0x56>
	return false;  // request Not supported
   8022c:	2822      	cmp	r0, #34	; 0x22
   8022e:	bf14      	ite	ne
   80230:	2000      	movne	r0, #0
   80232:	2001      	moveq	r0, #1
   80234:	4770      	bx	lr
						udd_g_ctrlreq.req.wLength)
   80236:	4b08      	ldr	r3, [pc, #32]	; (80258 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
   80238:	88db      	ldrh	r3, [r3, #6]
   8023a:	2b07      	cmp	r3, #7
   8023c:	d001      	beq.n	80242 <udi_cdc_comm_setup+0x62>
					return false; // Error for USB host
   8023e:	2000      	movs	r0, #0
}
   80240:	4770      	bx	lr
				udd_g_ctrlreq.callback =
   80242:	4b05      	ldr	r3, [pc, #20]	; (80258 <udi_cdc_comm_setup+0x78>)
   80244:	4a06      	ldr	r2, [pc, #24]	; (80260 <udi_cdc_comm_setup+0x80>)
   80246:	611a      	str	r2, [r3, #16]
				udd_g_ctrlreq.payload =
   80248:	4a04      	ldr	r2, [pc, #16]	; (8025c <udi_cdc_comm_setup+0x7c>)
   8024a:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
   8024c:	2207      	movs	r2, #7
   8024e:	819a      	strh	r2, [r3, #12]
				return true;
   80250:	2001      	movs	r0, #1
   80252:	4770      	bx	lr
	return false;  // request Not supported
   80254:	2000      	movs	r0, #0
   80256:	4770      	bx	lr
   80258:	20070e14 	.word	0x20070e14
   8025c:	20070bb0 	.word	0x20070bb0
   80260:	00080265 	.word	0x00080265

00080264 <udi_cdc_line_coding_received>:
	}
	return port;
}

static void udi_cdc_line_coding_received(void)
{
   80264:	4770      	bx	lr
	...

00080268 <udi_cdc_tx_send>:

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	if (udi_cdc_tx_trans_ongoing[port]) {
   80268:	4b44      	ldr	r3, [pc, #272]	; (8037c <udi_cdc_tx_send+0x114>)
   8026a:	781b      	ldrb	r3, [r3, #0]
   8026c:	b103      	cbz	r3, 80270 <udi_cdc_tx_send+0x8>
   8026e:	4770      	bx	lr
{
   80270:	b570      	push	{r4, r5, r6, lr}
   80272:	b084      	sub	sp, #16
		return; // Already on going or wait next SOF to send next data
	}
	if (udd_is_high_speed()) {
   80274:	4b42      	ldr	r3, [pc, #264]	; (80380 <udi_cdc_tx_send+0x118>)
   80276:	4798      	blx	r3
   80278:	2800      	cmp	r0, #0
   8027a:	d041      	beq.n	80300 <udi_cdc_tx_send+0x98>
		if (udi_cdc_tx_sof_num[port] == udd_get_micro_frame_number()) {
   8027c:	4b41      	ldr	r3, [pc, #260]	; (80384 <udi_cdc_tx_send+0x11c>)
   8027e:	881c      	ldrh	r4, [r3, #0]
   80280:	4b41      	ldr	r3, [pc, #260]	; (80388 <udi_cdc_tx_send+0x120>)
   80282:	4798      	blx	r3
   80284:	4284      	cmp	r4, r0
   80286:	d076      	beq.n	80376 <udi_cdc_tx_send+0x10e>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80288:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
   8028c:	fab3 f383 	clz	r3, r3
   80290:	095b      	lsrs	r3, r3, #5
   80292:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   80294:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
   80296:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8029a:	2200      	movs	r2, #0
   8029c:	4b3b      	ldr	r3, [pc, #236]	; (8038c <udi_cdc_tx_send+0x124>)
   8029e:	701a      	strb	r2, [r3, #0]
	return flags;
   802a0:	9d03      	ldr	r5, [sp, #12]
			return; // Wait next SOF to send next data
		}
	}

	flags = cpu_irq_save(); // to protect udi_cdc_tx_buf_sel
	buf_sel_trans = udi_cdc_tx_buf_sel[port];
   802a2:	4b3b      	ldr	r3, [pc, #236]	; (80390 <udi_cdc_tx_send+0x128>)
   802a4:	781c      	ldrb	r4, [r3, #0]
   802a6:	b2e4      	uxtb	r4, r4
	if (udi_cdc_tx_buf_nb[port][buf_sel_trans] == 0) {
   802a8:	4b3a      	ldr	r3, [pc, #232]	; (80394 <udi_cdc_tx_send+0x12c>)
   802aa:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
   802ae:	2b00      	cmp	r3, #0
   802b0:	d02d      	beq.n	8030e <udi_cdc_tx_send+0xa6>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
			cpu_irq_restore(flags);
			return;
		}
	}
	sof_zlp_counter = 0;
   802b2:	2200      	movs	r2, #0
   802b4:	4b38      	ldr	r3, [pc, #224]	; (80398 <udi_cdc_tx_send+0x130>)
   802b6:	801a      	strh	r2, [r3, #0]

	if (!udi_cdc_tx_both_buf_to_send[port]) {
   802b8:	4b38      	ldr	r3, [pc, #224]	; (8039c <udi_cdc_tx_send+0x134>)
   802ba:	781b      	ldrb	r3, [r3, #0]
   802bc:	2b00      	cmp	r3, #0
   802be:	d142      	bne.n	80346 <udi_cdc_tx_send+0xde>
		// Send current Buffer
		// and switch the current buffer
		udi_cdc_tx_buf_sel[port] = (buf_sel_trans==0)?1:0;
   802c0:	fab4 f384 	clz	r3, r4
   802c4:	095b      	lsrs	r3, r3, #5
   802c6:	4a32      	ldr	r2, [pc, #200]	; (80390 <udi_cdc_tx_send+0x128>)
   802c8:	7013      	strb	r3, [r2, #0]
	}else{
		// Send the other Buffer
		// and no switch the current buffer
		buf_sel_trans = (buf_sel_trans==0)?1:0;
	}
	udi_cdc_tx_trans_ongoing[port] = true;
   802ca:	2201      	movs	r2, #1
   802cc:	4b2b      	ldr	r3, [pc, #172]	; (8037c <udi_cdc_tx_send+0x114>)
   802ce:	701a      	strb	r2, [r3, #0]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
   802d0:	b125      	cbz	r5, 802dc <udi_cdc_tx_send+0x74>
		cpu_irq_enable();
   802d2:	4b2e      	ldr	r3, [pc, #184]	; (8038c <udi_cdc_tx_send+0x124>)
   802d4:	701a      	strb	r2, [r3, #0]
   802d6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   802da:	b662      	cpsie	i
	cpu_irq_restore(flags);

	b_short_packet = (udi_cdc_tx_buf_nb[port][buf_sel_trans] != UDI_CDC_TX_BUFFERS);
   802dc:	4626      	mov	r6, r4
   802de:	4b2d      	ldr	r3, [pc, #180]	; (80394 <udi_cdc_tx_send+0x12c>)
   802e0:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
   802e4:	2b40      	cmp	r3, #64	; 0x40
   802e6:	bf14      	ite	ne
   802e8:	2501      	movne	r5, #1
   802ea:	2500      	moveq	r5, #0
	if (b_short_packet) {
   802ec:	d034      	beq.n	80358 <udi_cdc_tx_send+0xf0>
		if (udd_is_high_speed()) {
   802ee:	4b24      	ldr	r3, [pc, #144]	; (80380 <udi_cdc_tx_send+0x118>)
   802f0:	4798      	blx	r3
   802f2:	2800      	cmp	r0, #0
   802f4:	d02b      	beq.n	8034e <udi_cdc_tx_send+0xe6>
			udi_cdc_tx_sof_num[port] = udd_get_micro_frame_number();
   802f6:	4b24      	ldr	r3, [pc, #144]	; (80388 <udi_cdc_tx_send+0x120>)
   802f8:	4798      	blx	r3
   802fa:	4b22      	ldr	r3, [pc, #136]	; (80384 <udi_cdc_tx_send+0x11c>)
   802fc:	8018      	strh	r0, [r3, #0]
   802fe:	e02e      	b.n	8035e <udi_cdc_tx_send+0xf6>
		if (udi_cdc_tx_sof_num[port] == udd_get_frame_number()) {
   80300:	4b20      	ldr	r3, [pc, #128]	; (80384 <udi_cdc_tx_send+0x11c>)
   80302:	881c      	ldrh	r4, [r3, #0]
   80304:	4b26      	ldr	r3, [pc, #152]	; (803a0 <udi_cdc_tx_send+0x138>)
   80306:	4798      	blx	r3
   80308:	4284      	cmp	r4, r0
   8030a:	d1bd      	bne.n	80288 <udi_cdc_tx_send+0x20>
   8030c:	e033      	b.n	80376 <udi_cdc_tx_send+0x10e>
		sof_zlp_counter++;
   8030e:	4a22      	ldr	r2, [pc, #136]	; (80398 <udi_cdc_tx_send+0x130>)
   80310:	8813      	ldrh	r3, [r2, #0]
   80312:	3301      	adds	r3, #1
   80314:	8013      	strh	r3, [r2, #0]
		if (((!udd_is_high_speed()) && (sof_zlp_counter < 100))
   80316:	4b1a      	ldr	r3, [pc, #104]	; (80380 <udi_cdc_tx_send+0x118>)
   80318:	4798      	blx	r3
   8031a:	b918      	cbnz	r0, 80324 <udi_cdc_tx_send+0xbc>
   8031c:	4b1e      	ldr	r3, [pc, #120]	; (80398 <udi_cdc_tx_send+0x130>)
   8031e:	881b      	ldrh	r3, [r3, #0]
   80320:	2b63      	cmp	r3, #99	; 0x63
   80322:	d908      	bls.n	80336 <udi_cdc_tx_send+0xce>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
   80324:	4b16      	ldr	r3, [pc, #88]	; (80380 <udi_cdc_tx_send+0x118>)
   80326:	4798      	blx	r3
   80328:	2800      	cmp	r0, #0
   8032a:	d0c2      	beq.n	802b2 <udi_cdc_tx_send+0x4a>
   8032c:	4b1a      	ldr	r3, [pc, #104]	; (80398 <udi_cdc_tx_send+0x130>)
   8032e:	881b      	ldrh	r3, [r3, #0]
   80330:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
   80334:	d2bd      	bcs.n	802b2 <udi_cdc_tx_send+0x4a>
	if (cpu_irq_is_enabled_flags(flags))
   80336:	b1f5      	cbz	r5, 80376 <udi_cdc_tx_send+0x10e>
		cpu_irq_enable();
   80338:	2201      	movs	r2, #1
   8033a:	4b14      	ldr	r3, [pc, #80]	; (8038c <udi_cdc_tx_send+0x124>)
   8033c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   8033e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80342:	b662      	cpsie	i
   80344:	e017      	b.n	80376 <udi_cdc_tx_send+0x10e>
		buf_sel_trans = (buf_sel_trans==0)?1:0;
   80346:	fab4 f484 	clz	r4, r4
   8034a:	0964      	lsrs	r4, r4, #5
   8034c:	e7bd      	b.n	802ca <udi_cdc_tx_send+0x62>
		}else{
			udi_cdc_tx_sof_num[port] = udd_get_frame_number();
   8034e:	4b14      	ldr	r3, [pc, #80]	; (803a0 <udi_cdc_tx_send+0x138>)
   80350:	4798      	blx	r3
   80352:	4b0c      	ldr	r3, [pc, #48]	; (80384 <udi_cdc_tx_send+0x11c>)
   80354:	8018      	strh	r0, [r3, #0]
   80356:	e002      	b.n	8035e <udi_cdc_tx_send+0xf6>
		}
	}else{
		udi_cdc_tx_sof_num[port] = 0; // Force next transfer without wait SOF
   80358:	2200      	movs	r2, #0
   8035a:	4b0a      	ldr	r3, [pc, #40]	; (80384 <udi_cdc_tx_send+0x11c>)
   8035c:	801a      	strh	r2, [r3, #0]
		break;
	}
	udd_ep_run( ep,
			b_short_packet,
			udi_cdc_tx_buf[port][buf_sel_trans],
			udi_cdc_tx_buf_nb[port][buf_sel_trans],
   8035e:	4b0d      	ldr	r3, [pc, #52]	; (80394 <udi_cdc_tx_send+0x12c>)
	udd_ep_run( ep,
   80360:	f833 3016 	ldrh.w	r3, [r3, r6, lsl #1]
   80364:	4a0f      	ldr	r2, [pc, #60]	; (803a4 <udi_cdc_tx_send+0x13c>)
   80366:	9200      	str	r2, [sp, #0]
   80368:	4a0f      	ldr	r2, [pc, #60]	; (803a8 <udi_cdc_tx_send+0x140>)
   8036a:	eb02 1284 	add.w	r2, r2, r4, lsl #6
   8036e:	4629      	mov	r1, r5
   80370:	2081      	movs	r0, #129	; 0x81
   80372:	4c0e      	ldr	r4, [pc, #56]	; (803ac <udi_cdc_tx_send+0x144>)
   80374:	47a0      	blx	r4
			udi_cdc_data_sent);
}
   80376:	b004      	add	sp, #16
   80378:	bd70      	pop	{r4, r5, r6, pc}
   8037a:	bf00      	nop
   8037c:	20070ce0 	.word	0x20070ce0
   80380:	00081ae9 	.word	0x00081ae9
   80384:	20070cdc 	.word	0x20070cdc
   80388:	00081b35 	.word	0x00081b35
   8038c:	200701d8 	.word	0x200701d8
   80390:	20070cd8 	.word	0x20070cd8
   80394:	20070cd4 	.word	0x20070cd4
   80398:	20070bac 	.word	0x20070bac
   8039c:	20070c50 	.word	0x20070c50
   803a0:	00081b25 	.word	0x00081b25
   803a4:	000803b1 	.word	0x000803b1
   803a8:	20070c54 	.word	0x20070c54
   803ac:	00081d9d 	.word	0x00081d9d

000803b0 <udi_cdc_data_sent>:
	if (UDD_EP_TRANSFER_OK != status) {
   803b0:	b100      	cbz	r0, 803b4 <udi_cdc_data_sent+0x4>
   803b2:	4770      	bx	lr
{
   803b4:	b508      	push	{r3, lr}
	udi_cdc_tx_buf_nb[port][(udi_cdc_tx_buf_sel[port]==0)?1:0] = 0;
   803b6:	4b07      	ldr	r3, [pc, #28]	; (803d4 <udi_cdc_data_sent+0x24>)
   803b8:	781b      	ldrb	r3, [r3, #0]
   803ba:	fab3 f383 	clz	r3, r3
   803be:	095b      	lsrs	r3, r3, #5
   803c0:	4a05      	ldr	r2, [pc, #20]	; (803d8 <udi_cdc_data_sent+0x28>)
   803c2:	f822 0013 	strh.w	r0, [r2, r3, lsl #1]
	udi_cdc_tx_both_buf_to_send[port] = false;
   803c6:	4b05      	ldr	r3, [pc, #20]	; (803dc <udi_cdc_data_sent+0x2c>)
   803c8:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
   803ca:	4b05      	ldr	r3, [pc, #20]	; (803e0 <udi_cdc_data_sent+0x30>)
   803cc:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_send(port);
   803ce:	4b05      	ldr	r3, [pc, #20]	; (803e4 <udi_cdc_data_sent+0x34>)
   803d0:	4798      	blx	r3
   803d2:	bd08      	pop	{r3, pc}
   803d4:	20070cd8 	.word	0x20070cd8
   803d8:	20070cd4 	.word	0x20070cd4
   803dc:	20070c50 	.word	0x20070c50
   803e0:	20070ce0 	.word	0x20070ce0
   803e4:	00080269 	.word	0x00080269

000803e8 <udi_cdc_data_sof_notify>:
{
   803e8:	b508      	push	{r3, lr}
	udi_cdc_tx_send(port_notify);
   803ea:	2000      	movs	r0, #0
   803ec:	4b01      	ldr	r3, [pc, #4]	; (803f4 <udi_cdc_data_sof_notify+0xc>)
   803ee:	4798      	blx	r3
   803f0:	bd08      	pop	{r3, pc}
   803f2:	bf00      	nop
   803f4:	00080269 	.word	0x00080269

000803f8 <udi_cdc_multi_get_nb_received_data>:
{
	udi_cdc_ctrl_state_change(port, true, CDC_SERIAL_STATE_OVERRUN);
}

iram_size_t udi_cdc_multi_get_nb_received_data(uint8_t port)
{
   803f8:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   803fa:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   803fe:	fab3 f383 	clz	r3, r3
   80402:	095b      	lsrs	r3, r3, #5
   80404:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80406:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80408:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8040c:	2200      	movs	r2, #0
   8040e:	4b0b      	ldr	r3, [pc, #44]	; (8043c <udi_cdc_multi_get_nb_received_data+0x44>)
   80410:	701a      	strb	r2, [r3, #0]
	return flags;
   80412:	9901      	ldr	r1, [sp, #4]

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
   80414:	4b0a      	ldr	r3, [pc, #40]	; (80440 <udi_cdc_multi_get_nb_received_data+0x48>)
   80416:	8818      	ldrh	r0, [r3, #0]
   80418:	b283      	uxth	r3, r0
	nb_received = udi_cdc_rx_buf_nb[port][udi_cdc_rx_buf_sel[port]] - pos;
   8041a:	4a0a      	ldr	r2, [pc, #40]	; (80444 <udi_cdc_multi_get_nb_received_data+0x4c>)
   8041c:	7812      	ldrb	r2, [r2, #0]
   8041e:	b2d2      	uxtb	r2, r2
   80420:	4809      	ldr	r0, [pc, #36]	; (80448 <udi_cdc_multi_get_nb_received_data+0x50>)
   80422:	f830 0012 	ldrh.w	r0, [r0, r2, lsl #1]
   80426:	b280      	uxth	r0, r0
   80428:	1ac0      	subs	r0, r0, r3
	if (cpu_irq_is_enabled_flags(flags))
   8042a:	b129      	cbz	r1, 80438 <udi_cdc_multi_get_nb_received_data+0x40>
		cpu_irq_enable();
   8042c:	2201      	movs	r2, #1
   8042e:	4b03      	ldr	r3, [pc, #12]	; (8043c <udi_cdc_multi_get_nb_received_data+0x44>)
   80430:	701a      	strb	r2, [r3, #0]
   80432:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80436:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return nb_received;
}
   80438:	b002      	add	sp, #8
   8043a:	4770      	bx	lr
   8043c:	200701d8 	.word	0x200701d8
   80440:	20070c44 	.word	0x20070c44
   80444:	20070c40 	.word	0x20070c40
   80448:	20070c3c 	.word	0x20070c3c

0008044c <udi_cdc_multi_is_rx_ready>:
{
	return udi_cdc_multi_get_nb_received_data(0);
}

bool udi_cdc_multi_is_rx_ready(uint8_t port)
{
   8044c:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_nb_received_data(port) > 0);
   8044e:	4b03      	ldr	r3, [pc, #12]	; (8045c <udi_cdc_multi_is_rx_ready+0x10>)
   80450:	4798      	blx	r3
}
   80452:	3000      	adds	r0, #0
   80454:	bf18      	it	ne
   80456:	2001      	movne	r0, #1
   80458:	bd08      	pop	{r3, pc}
   8045a:	bf00      	nop
   8045c:	000803f9 	.word	0x000803f9

00080460 <udi_cdc_rx_start>:
{
   80460:	b510      	push	{r4, lr}
   80462:	b084      	sub	sp, #16
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80464:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80468:	fab3 f383 	clz	r3, r3
   8046c:	095b      	lsrs	r3, r3, #5
   8046e:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   80470:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80472:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80476:	2200      	movs	r2, #0
   80478:	4b1e      	ldr	r3, [pc, #120]	; (804f4 <udi_cdc_rx_start+0x94>)
   8047a:	701a      	strb	r2, [r3, #0]
	return flags;
   8047c:	9b03      	ldr	r3, [sp, #12]
	buf_sel_trans = udi_cdc_rx_buf_sel[port];
   8047e:	4a1e      	ldr	r2, [pc, #120]	; (804f8 <udi_cdc_rx_start+0x98>)
   80480:	7814      	ldrb	r4, [r2, #0]
	if (udi_cdc_rx_trans_ongoing[port] ||
   80482:	4a1e      	ldr	r2, [pc, #120]	; (804fc <udi_cdc_rx_start+0x9c>)
   80484:	7812      	ldrb	r2, [r2, #0]
   80486:	b94a      	cbnz	r2, 8049c <udi_cdc_rx_start+0x3c>
   80488:	b2e4      	uxtb	r4, r4
		(udi_cdc_rx_pos[port] < udi_cdc_rx_buf_nb[port][buf_sel_trans])) {
   8048a:	4a1d      	ldr	r2, [pc, #116]	; (80500 <udi_cdc_rx_start+0xa0>)
   8048c:	8811      	ldrh	r1, [r2, #0]
   8048e:	b289      	uxth	r1, r1
   80490:	4a1c      	ldr	r2, [pc, #112]	; (80504 <udi_cdc_rx_start+0xa4>)
   80492:	f832 2014 	ldrh.w	r2, [r2, r4, lsl #1]
   80496:	b292      	uxth	r2, r2
	if (udi_cdc_rx_trans_ongoing[port] ||
   80498:	4291      	cmp	r1, r2
   8049a:	d209      	bcs.n	804b0 <udi_cdc_rx_start+0x50>
	if (cpu_irq_is_enabled_flags(flags))
   8049c:	b33b      	cbz	r3, 804ee <udi_cdc_rx_start+0x8e>
		cpu_irq_enable();
   8049e:	2201      	movs	r2, #1
   804a0:	4b14      	ldr	r3, [pc, #80]	; (804f4 <udi_cdc_rx_start+0x94>)
   804a2:	701a      	strb	r2, [r3, #0]
   804a4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   804a8:	b662      	cpsie	i
		return false;
   804aa:	2000      	movs	r0, #0
}
   804ac:	b004      	add	sp, #16
   804ae:	bd10      	pop	{r4, pc}
	udi_cdc_rx_pos[port] = 0;
   804b0:	2100      	movs	r1, #0
   804b2:	4a13      	ldr	r2, [pc, #76]	; (80500 <udi_cdc_rx_start+0xa0>)
   804b4:	8011      	strh	r1, [r2, #0]
	udi_cdc_rx_buf_sel[port] = (buf_sel_trans==0)?1:0;
   804b6:	fab4 f284 	clz	r2, r4
   804ba:	0952      	lsrs	r2, r2, #5
   804bc:	490e      	ldr	r1, [pc, #56]	; (804f8 <udi_cdc_rx_start+0x98>)
   804be:	700a      	strb	r2, [r1, #0]
	udi_cdc_rx_trans_ongoing[port] = true;
   804c0:	2101      	movs	r1, #1
   804c2:	4a0e      	ldr	r2, [pc, #56]	; (804fc <udi_cdc_rx_start+0x9c>)
   804c4:	7011      	strb	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   804c6:	b123      	cbz	r3, 804d2 <udi_cdc_rx_start+0x72>
		cpu_irq_enable();
   804c8:	4b0a      	ldr	r3, [pc, #40]	; (804f4 <udi_cdc_rx_start+0x94>)
   804ca:	7019      	strb	r1, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   804cc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   804d0:	b662      	cpsie	i
	if (udi_cdc_multi_is_rx_ready(port)) {
   804d2:	2000      	movs	r0, #0
   804d4:	4b0c      	ldr	r3, [pc, #48]	; (80508 <udi_cdc_rx_start+0xa8>)
   804d6:	4798      	blx	r3
	return udd_ep_run(ep,
   804d8:	4b0c      	ldr	r3, [pc, #48]	; (8050c <udi_cdc_rx_start+0xac>)
   804da:	9300      	str	r3, [sp, #0]
   804dc:	2340      	movs	r3, #64	; 0x40
   804de:	4a0c      	ldr	r2, [pc, #48]	; (80510 <udi_cdc_rx_start+0xb0>)
   804e0:	eb02 1284 	add.w	r2, r2, r4, lsl #6
   804e4:	2101      	movs	r1, #1
   804e6:	2002      	movs	r0, #2
   804e8:	4c0a      	ldr	r4, [pc, #40]	; (80514 <udi_cdc_rx_start+0xb4>)
   804ea:	47a0      	blx	r4
   804ec:	e7de      	b.n	804ac <udi_cdc_rx_start+0x4c>
		return false;
   804ee:	2000      	movs	r0, #0
   804f0:	e7dc      	b.n	804ac <udi_cdc_rx_start+0x4c>
   804f2:	bf00      	nop
   804f4:	200701d8 	.word	0x200701d8
   804f8:	20070c40 	.word	0x20070c40
   804fc:	20070c48 	.word	0x20070c48
   80500:	20070c44 	.word	0x20070c44
   80504:	20070c3c 	.word	0x20070c3c
   80508:	0008044d 	.word	0x0008044d
   8050c:	000805ad 	.word	0x000805ad
   80510:	20070bbc 	.word	0x20070bbc
   80514:	00081d9d 	.word	0x00081d9d

00080518 <udi_cdc_data_enable>:
{
   80518:	b510      	push	{r4, lr}
	udi_cdc_nb_data_enabled = 0;
   8051a:	2400      	movs	r4, #0
   8051c:	4b16      	ldr	r3, [pc, #88]	; (80578 <udi_cdc_data_enable+0x60>)
   8051e:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
   80520:	4b16      	ldr	r3, [pc, #88]	; (8057c <udi_cdc_data_enable+0x64>)
   80522:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_both_buf_to_send[port] = false;
   80524:	4b16      	ldr	r3, [pc, #88]	; (80580 <udi_cdc_data_enable+0x68>)
   80526:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_sel[port] = 0;
   80528:	4b16      	ldr	r3, [pc, #88]	; (80584 <udi_cdc_data_enable+0x6c>)
   8052a:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][0] = 0;
   8052c:	4b16      	ldr	r3, [pc, #88]	; (80588 <udi_cdc_data_enable+0x70>)
   8052e:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][1] = 0;
   80530:	805c      	strh	r4, [r3, #2]
	udi_cdc_tx_sof_num[port] = 0;
   80532:	4b16      	ldr	r3, [pc, #88]	; (8058c <udi_cdc_data_enable+0x74>)
   80534:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_send(port);
   80536:	4620      	mov	r0, r4
   80538:	4b15      	ldr	r3, [pc, #84]	; (80590 <udi_cdc_data_enable+0x78>)
   8053a:	4798      	blx	r3
	udi_cdc_rx_trans_ongoing[port] = false;
   8053c:	4b15      	ldr	r3, [pc, #84]	; (80594 <udi_cdc_data_enable+0x7c>)
   8053e:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_sel[port] = 0;
   80540:	4b15      	ldr	r3, [pc, #84]	; (80598 <udi_cdc_data_enable+0x80>)
   80542:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][0] = 0;
   80544:	4b15      	ldr	r3, [pc, #84]	; (8059c <udi_cdc_data_enable+0x84>)
   80546:	801c      	strh	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][1] = 0;
   80548:	805c      	strh	r4, [r3, #2]
	udi_cdc_rx_pos[port] = 0;
   8054a:	4b15      	ldr	r3, [pc, #84]	; (805a0 <udi_cdc_data_enable+0x88>)
   8054c:	801c      	strh	r4, [r3, #0]
	if (!udi_cdc_rx_start(port)) {
   8054e:	4620      	mov	r0, r4
   80550:	4b14      	ldr	r3, [pc, #80]	; (805a4 <udi_cdc_data_enable+0x8c>)
   80552:	4798      	blx	r3
   80554:	4601      	mov	r1, r0
   80556:	b140      	cbz	r0, 8056a <udi_cdc_data_enable+0x52>
	udi_cdc_nb_data_enabled++;
   80558:	4a07      	ldr	r2, [pc, #28]	; (80578 <udi_cdc_data_enable+0x60>)
   8055a:	7813      	ldrb	r3, [r2, #0]
   8055c:	3301      	adds	r3, #1
   8055e:	b2db      	uxtb	r3, r3
   80560:	7013      	strb	r3, [r2, #0]
	if (udi_cdc_nb_data_enabled == UDI_CDC_PORT_NB) {
   80562:	7813      	ldrb	r3, [r2, #0]
   80564:	b2db      	uxtb	r3, r3
   80566:	2b01      	cmp	r3, #1
   80568:	d001      	beq.n	8056e <udi_cdc_data_enable+0x56>
}
   8056a:	4608      	mov	r0, r1
   8056c:	bd10      	pop	{r4, pc}
		udi_cdc_data_running = true;
   8056e:	2201      	movs	r2, #1
   80570:	4b0d      	ldr	r3, [pc, #52]	; (805a8 <udi_cdc_data_enable+0x90>)
   80572:	701a      	strb	r2, [r3, #0]
   80574:	e7f9      	b.n	8056a <udi_cdc_data_enable+0x52>
   80576:	bf00      	nop
   80578:	20070bb8 	.word	0x20070bb8
   8057c:	20070ce0 	.word	0x20070ce0
   80580:	20070c50 	.word	0x20070c50
   80584:	20070cd8 	.word	0x20070cd8
   80588:	20070cd4 	.word	0x20070cd4
   8058c:	20070cdc 	.word	0x20070cdc
   80590:	00080269 	.word	0x00080269
   80594:	20070c48 	.word	0x20070c48
   80598:	20070c40 	.word	0x20070c40
   8059c:	20070c3c 	.word	0x20070c3c
   805a0:	20070c44 	.word	0x20070c44
   805a4:	00080461 	.word	0x00080461
   805a8:	20070bae 	.word	0x20070bae

000805ac <udi_cdc_data_received>:
	if (UDD_EP_TRANSFER_OK != status) {
   805ac:	b9e8      	cbnz	r0, 805ea <udi_cdc_data_received+0x3e>
{
   805ae:	b510      	push	{r4, lr}
   805b0:	b082      	sub	sp, #8
   805b2:	4610      	mov	r0, r2
	buf_sel_trans = (udi_cdc_rx_buf_sel[port]==0)?1:0;
   805b4:	4b0d      	ldr	r3, [pc, #52]	; (805ec <udi_cdc_data_received+0x40>)
   805b6:	781c      	ldrb	r4, [r3, #0]
   805b8:	fab4 f484 	clz	r4, r4
   805bc:	0964      	lsrs	r4, r4, #5
	if (!n) {
   805be:	b151      	cbz	r1, 805d6 <udi_cdc_data_received+0x2a>
	udi_cdc_rx_buf_nb[port][buf_sel_trans] = n;
   805c0:	b289      	uxth	r1, r1
   805c2:	4b0b      	ldr	r3, [pc, #44]	; (805f0 <udi_cdc_data_received+0x44>)
   805c4:	f823 1014 	strh.w	r1, [r3, r4, lsl #1]
	udi_cdc_rx_trans_ongoing[port] = false;
   805c8:	2000      	movs	r0, #0
   805ca:	4b0a      	ldr	r3, [pc, #40]	; (805f4 <udi_cdc_data_received+0x48>)
   805cc:	7018      	strb	r0, [r3, #0]
	udi_cdc_rx_start(port);
   805ce:	4b0a      	ldr	r3, [pc, #40]	; (805f8 <udi_cdc_data_received+0x4c>)
   805d0:	4798      	blx	r3
}
   805d2:	b002      	add	sp, #8
   805d4:	bd10      	pop	{r4, pc}
		udd_ep_run( ep,
   805d6:	4b09      	ldr	r3, [pc, #36]	; (805fc <udi_cdc_data_received+0x50>)
   805d8:	9300      	str	r3, [sp, #0]
   805da:	2340      	movs	r3, #64	; 0x40
   805dc:	4a08      	ldr	r2, [pc, #32]	; (80600 <udi_cdc_data_received+0x54>)
   805de:	eb02 1284 	add.w	r2, r2, r4, lsl #6
   805e2:	2101      	movs	r1, #1
   805e4:	4c07      	ldr	r4, [pc, #28]	; (80604 <udi_cdc_data_received+0x58>)
   805e6:	47a0      	blx	r4
		return;
   805e8:	e7f3      	b.n	805d2 <udi_cdc_data_received+0x26>
   805ea:	4770      	bx	lr
   805ec:	20070c40 	.word	0x20070c40
   805f0:	20070c3c 	.word	0x20070c3c
   805f4:	20070c48 	.word	0x20070c48
   805f8:	00080461 	.word	0x00080461
   805fc:	000805ad 	.word	0x000805ad
   80600:	20070bbc 	.word	0x20070bbc
   80604:	00081d9d 	.word	0x00081d9d

00080608 <udi_cdc_multi_get_free_tx_buffer>:
{
	return udi_cdc_multi_read_buf(0, buf, size);
}

iram_size_t udi_cdc_multi_get_free_tx_buffer(uint8_t port)
{
   80608:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   8060a:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   8060e:	fab3 f383 	clz	r3, r3
   80612:	095b      	lsrs	r3, r3, #5
   80614:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80616:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80618:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8061c:	2200      	movs	r2, #0
   8061e:	4b14      	ldr	r3, [pc, #80]	; (80670 <udi_cdc_multi_get_free_tx_buffer+0x68>)
   80620:	701a      	strb	r2, [r3, #0]
	return flags;
   80622:	9a01      	ldr	r2, [sp, #4]
#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
   80624:	4b13      	ldr	r3, [pc, #76]	; (80674 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
   80626:	781b      	ldrb	r3, [r3, #0]
   80628:	b2db      	uxtb	r3, r3
	buf_sel_nb = udi_cdc_tx_buf_nb[port][buf_sel];
   8062a:	4913      	ldr	r1, [pc, #76]	; (80678 <udi_cdc_multi_get_free_tx_buffer+0x70>)
   8062c:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
	if (buf_sel_nb == UDI_CDC_TX_BUFFERS) {
   80630:	2840      	cmp	r0, #64	; 0x40
   80632:	d00a      	beq.n	8064a <udi_cdc_multi_get_free_tx_buffer+0x42>
			udi_cdc_tx_both_buf_to_send[port] = true;
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
			buf_sel_nb = 0;
		}
	}
	retval = UDI_CDC_TX_BUFFERS - buf_sel_nb;  
   80634:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
	if (cpu_irq_is_enabled_flags(flags))
   80638:	b12a      	cbz	r2, 80646 <udi_cdc_multi_get_free_tx_buffer+0x3e>
		cpu_irq_enable();
   8063a:	2201      	movs	r2, #1
   8063c:	4b0c      	ldr	r3, [pc, #48]	; (80670 <udi_cdc_multi_get_free_tx_buffer+0x68>)
   8063e:	701a      	strb	r2, [r3, #0]
   80640:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80644:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return retval;
}
   80646:	b002      	add	sp, #8
   80648:	4770      	bx	lr
		if ((!udi_cdc_tx_trans_ongoing[port])
   8064a:	490c      	ldr	r1, [pc, #48]	; (8067c <udi_cdc_multi_get_free_tx_buffer+0x74>)
   8064c:	7809      	ldrb	r1, [r1, #0]
   8064e:	2900      	cmp	r1, #0
   80650:	d1f0      	bne.n	80634 <udi_cdc_multi_get_free_tx_buffer+0x2c>
			&& (!udi_cdc_tx_both_buf_to_send[port])) {
   80652:	490b      	ldr	r1, [pc, #44]	; (80680 <udi_cdc_multi_get_free_tx_buffer+0x78>)
   80654:	7809      	ldrb	r1, [r1, #0]
   80656:	2900      	cmp	r1, #0
   80658:	d1ec      	bne.n	80634 <udi_cdc_multi_get_free_tx_buffer+0x2c>
			udi_cdc_tx_both_buf_to_send[port] = true;
   8065a:	2001      	movs	r0, #1
   8065c:	4908      	ldr	r1, [pc, #32]	; (80680 <udi_cdc_multi_get_free_tx_buffer+0x78>)
   8065e:	7008      	strb	r0, [r1, #0]
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
   80660:	fab3 f383 	clz	r3, r3
   80664:	095b      	lsrs	r3, r3, #5
   80666:	4903      	ldr	r1, [pc, #12]	; (80674 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
   80668:	700b      	strb	r3, [r1, #0]
			buf_sel_nb = 0;
   8066a:	2000      	movs	r0, #0
   8066c:	e7e2      	b.n	80634 <udi_cdc_multi_get_free_tx_buffer+0x2c>
   8066e:	bf00      	nop
   80670:	200701d8 	.word	0x200701d8
   80674:	20070cd8 	.word	0x20070cd8
   80678:	20070cd4 	.word	0x20070cd4
   8067c:	20070ce0 	.word	0x20070ce0
   80680:	20070c50 	.word	0x20070c50

00080684 <udi_cdc_multi_is_tx_ready>:
{
	return udi_cdc_multi_get_free_tx_buffer(0);
}

bool udi_cdc_multi_is_tx_ready(uint8_t port)
{
   80684:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_free_tx_buffer(port) != 0);
   80686:	4b03      	ldr	r3, [pc, #12]	; (80694 <udi_cdc_multi_is_tx_ready+0x10>)
   80688:	4798      	blx	r3
}
   8068a:	3000      	adds	r0, #0
   8068c:	bf18      	it	ne
   8068e:	2001      	movne	r0, #1
   80690:	bd08      	pop	{r3, pc}
   80692:	bf00      	nop
   80694:	00080609 	.word	0x00080609

00080698 <udi_cdc_multi_write_buf>:
{
	return udi_cdc_multi_putc(0, value);
}

iram_size_t udi_cdc_multi_write_buf(uint8_t port, const void* buf, iram_size_t size)
{
   80698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8069c:	b083      	sub	sp, #12
   8069e:	4617      	mov	r7, r2

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	if (9 == udi_cdc_line_coding[port].bDataBits) {
   806a0:	4b22      	ldr	r3, [pc, #136]	; (8072c <udi_cdc_multi_write_buf+0x94>)
   806a2:	799b      	ldrb	r3, [r3, #6]
   806a4:	2b09      	cmp	r3, #9
		size *=2;
   806a6:	bf08      	it	eq
   806a8:	0057      	lsleq	r7, r2, #1
{
   806aa:	4688      	mov	r8, r1
	}

udi_cdc_write_buf_loop_wait:
	// Check available space
	if (!udi_cdc_multi_is_tx_ready(port)) {
   806ac:	f8df a094 	ldr.w	sl, [pc, #148]	; 80744 <udi_cdc_multi_write_buf+0xac>
   806b0:	e030      	b.n	80714 <udi_cdc_multi_write_buf+0x7c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   806b2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   806b6:	fab3 f383 	clz	r3, r3
   806ba:	095b      	lsrs	r3, r3, #5
   806bc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   806be:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   806c0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   806c4:	2300      	movs	r3, #0
   806c6:	4a1a      	ldr	r2, [pc, #104]	; (80730 <udi_cdc_multi_write_buf+0x98>)
   806c8:	7013      	strb	r3, [r2, #0]
	return flags;
   806ca:	f8dd b004 	ldr.w	fp, [sp, #4]
		goto udi_cdc_write_buf_loop_wait;
	}

	// Write values
	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
   806ce:	4b19      	ldr	r3, [pc, #100]	; (80734 <udi_cdc_multi_write_buf+0x9c>)
   806d0:	781d      	ldrb	r5, [r3, #0]
   806d2:	b2ed      	uxtb	r5, r5
	buf_nb = udi_cdc_tx_buf_nb[port][buf_sel];
   806d4:	f8df 9070 	ldr.w	r9, [pc, #112]	; 80748 <udi_cdc_multi_write_buf+0xb0>
   806d8:	f839 6015 	ldrh.w	r6, [r9, r5, lsl #1]
	copy_nb = UDI_CDC_TX_BUFFERS - buf_nb;
   806dc:	f1c6 0440 	rsb	r4, r6, #64	; 0x40
   806e0:	42bc      	cmp	r4, r7
   806e2:	bf28      	it	cs
   806e4:	463c      	movcs	r4, r7
	if (copy_nb > size) {
		copy_nb = size;
	}
	memcpy(&udi_cdc_tx_buf[port][buf_sel][buf_nb], ptr_buf, copy_nb);
   806e6:	eb06 1385 	add.w	r3, r6, r5, lsl #6
   806ea:	4622      	mov	r2, r4
   806ec:	4641      	mov	r1, r8
   806ee:	4812      	ldr	r0, [pc, #72]	; (80738 <udi_cdc_multi_write_buf+0xa0>)
   806f0:	4418      	add	r0, r3
   806f2:	4b12      	ldr	r3, [pc, #72]	; (8073c <udi_cdc_multi_write_buf+0xa4>)
   806f4:	4798      	blx	r3
	udi_cdc_tx_buf_nb[port][buf_sel] = buf_nb + copy_nb;
   806f6:	4426      	add	r6, r4
   806f8:	f829 6015 	strh.w	r6, [r9, r5, lsl #1]
	if (cpu_irq_is_enabled_flags(flags))
   806fc:	f1bb 0f00 	cmp.w	fp, #0
   80700:	d005      	beq.n	8070e <udi_cdc_multi_write_buf+0x76>
		cpu_irq_enable();
   80702:	2301      	movs	r3, #1
   80704:	4a0a      	ldr	r2, [pc, #40]	; (80730 <udi_cdc_multi_write_buf+0x98>)
   80706:	7013      	strb	r3, [r2, #0]
   80708:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   8070c:	b662      	cpsie	i
	cpu_irq_restore(flags);

	// Update buffer pointer
	ptr_buf = ptr_buf + copy_nb;
   8070e:	44a0      	add	r8, r4
	size -= copy_nb;

	if (size) {
   80710:	1b3f      	subs	r7, r7, r4
   80712:	d007      	beq.n	80724 <udi_cdc_multi_write_buf+0x8c>
	if (!udi_cdc_multi_is_tx_ready(port)) {
   80714:	2000      	movs	r0, #0
   80716:	47d0      	blx	sl
   80718:	2800      	cmp	r0, #0
   8071a:	d1ca      	bne.n	806b2 <udi_cdc_multi_write_buf+0x1a>
		if (!udi_cdc_data_running) {
   8071c:	4b08      	ldr	r3, [pc, #32]	; (80740 <udi_cdc_multi_write_buf+0xa8>)
   8071e:	781b      	ldrb	r3, [r3, #0]
   80720:	2b00      	cmp	r3, #0
   80722:	d1f7      	bne.n	80714 <udi_cdc_multi_write_buf+0x7c>
		goto udi_cdc_write_buf_loop_wait;
	}

	return 0;
}
   80724:	4638      	mov	r0, r7
   80726:	b003      	add	sp, #12
   80728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8072c:	20070bb0 	.word	0x20070bb0
   80730:	200701d8 	.word	0x200701d8
   80734:	20070cd8 	.word	0x20070cd8
   80738:	20070c54 	.word	0x20070c54
   8073c:	00082add 	.word	0x00082add
   80740:	20070bae 	.word	0x20070bae
   80744:	00080685 	.word	0x00080685
   80748:	20070cd4 	.word	0x20070cd4

0008074c <udi_cdc_write_buf>:

iram_size_t udi_cdc_write_buf(const void* buf, iram_size_t size)
{
   8074c:	b508      	push	{r3, lr}
	return udi_cdc_multi_write_buf(0, buf, size);
   8074e:	460a      	mov	r2, r1
   80750:	4601      	mov	r1, r0
   80752:	2000      	movs	r0, #0
   80754:	4b01      	ldr	r3, [pc, #4]	; (8075c <udi_cdc_write_buf+0x10>)
   80756:	4798      	blx	r3
}
   80758:	bd08      	pop	{r3, pc}
   8075a:	bf00      	nop
   8075c:	00080699 	.word	0x00080699

00080760 <udc_next_desc_in_iface>:
 * \return address after the last byte of USB Configuration descriptor
 */
static usb_conf_desc_t UDC_DESC_STORAGE *udc_get_eof_conf(void)
{
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
			udc_ptr_conf->desc +
   80760:	4b10      	ldr	r3, [pc, #64]	; (807a4 <udc_next_desc_in_iface+0x44>)
   80762:	681b      	ldr	r3, [r3, #0]
   80764:	681a      	ldr	r2, [r3, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80766:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80768:	441a      	add	r2, r3
	usb_conf_desc_t UDC_DESC_STORAGE *ptr_eof_desc;

	ptr_eof_desc = udc_get_eof_conf();
	// Go to next descriptor
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
			desc->bLength);
   8076a:	7803      	ldrb	r3, [r0, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   8076c:	4418      	add	r0, r3
	// Check the end of configuration descriptor
	while (ptr_eof_desc > desc) {
   8076e:	4290      	cmp	r0, r2
   80770:	d211      	bcs.n	80796 <udc_next_desc_in_iface+0x36>
		// If new interface descriptor is found,
		// then it is the end of the current global interface descriptor
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80772:	7843      	ldrb	r3, [r0, #1]
   80774:	2b04      	cmp	r3, #4
   80776:	d010      	beq.n	8079a <udc_next_desc_in_iface+0x3a>
			break; // End of global interface descriptor
		}
		if (desc_id == desc->bDescriptorType) {
   80778:	428b      	cmp	r3, r1
   8077a:	d009      	beq.n	80790 <udc_next_desc_in_iface+0x30>
			return desc; // Specific descriptor found
		}
		// Go to next descriptor
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
				desc->bLength);
   8077c:	7803      	ldrb	r3, [r0, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   8077e:	4418      	add	r0, r3
	while (ptr_eof_desc > desc) {
   80780:	4290      	cmp	r0, r2
   80782:	d206      	bcs.n	80792 <udc_next_desc_in_iface+0x32>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80784:	7843      	ldrb	r3, [r0, #1]
   80786:	2b04      	cmp	r3, #4
   80788:	d009      	beq.n	8079e <udc_next_desc_in_iface+0x3e>
		if (desc_id == desc->bDescriptorType) {
   8078a:	428b      	cmp	r3, r1
   8078c:	d1f6      	bne.n	8077c <udc_next_desc_in_iface+0x1c>
   8078e:	e007      	b.n	807a0 <udc_next_desc_in_iface+0x40>
   80790:	4770      	bx	lr
	}
	return NULL; // No specific descriptor found
   80792:	2000      	movs	r0, #0
   80794:	4770      	bx	lr
   80796:	2000      	movs	r0, #0
   80798:	4770      	bx	lr
   8079a:	2000      	movs	r0, #0
   8079c:	4770      	bx	lr
   8079e:	2000      	movs	r0, #0
}
   807a0:	4770      	bx	lr
   807a2:	bf00      	nop
   807a4:	20070cfc 	.word	0x20070cfc

000807a8 <udc_valid_address>:
/**
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
   807a8:	b508      	push	{r3, lr}
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
   807aa:	4b03      	ldr	r3, [pc, #12]	; (807b8 <udc_valid_address+0x10>)
   807ac:	7898      	ldrb	r0, [r3, #2]
   807ae:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   807b2:	4b02      	ldr	r3, [pc, #8]	; (807bc <udc_valid_address+0x14>)
   807b4:	4798      	blx	r3
   807b6:	bd08      	pop	{r3, pc}
   807b8:	20070e14 	.word	0x20070e14
   807bc:	00081aed 	.word	0x00081aed

000807c0 <udc_update_iface_desc>:
	if (0 == udc_num_configuration) {
   807c0:	4b19      	ldr	r3, [pc, #100]	; (80828 <udc_update_iface_desc+0x68>)
   807c2:	781b      	ldrb	r3, [r3, #0]
   807c4:	b34b      	cbz	r3, 8081a <udc_update_iface_desc+0x5a>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   807c6:	4b19      	ldr	r3, [pc, #100]	; (8082c <udc_update_iface_desc+0x6c>)
   807c8:	681b      	ldr	r3, [r3, #0]
   807ca:	681b      	ldr	r3, [r3, #0]
   807cc:	791a      	ldrb	r2, [r3, #4]
   807ce:	4282      	cmp	r2, r0
   807d0:	d925      	bls.n	8081e <udc_update_iface_desc+0x5e>
{
   807d2:	b470      	push	{r4, r5, r6}
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   807d4:	4a16      	ldr	r2, [pc, #88]	; (80830 <udc_update_iface_desc+0x70>)
   807d6:	6013      	str	r3, [r2, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   807d8:	885c      	ldrh	r4, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   807da:	441c      	add	r4, r3
	while (ptr_end_desc >
   807dc:	42a3      	cmp	r3, r4
   807de:	d220      	bcs.n	80822 <udc_update_iface_desc+0x62>
   807e0:	2500      	movs	r5, #0
   807e2:	2601      	movs	r6, #1
   807e4:	e007      	b.n	807f6 <udc_update_iface_desc+0x36>
   807e6:	4a12      	ldr	r2, [pc, #72]	; (80830 <udc_update_iface_desc+0x70>)
   807e8:	6013      	str	r3, [r2, #0]
   807ea:	e00f      	b.n	8080c <udc_update_iface_desc+0x4c>
				udc_ptr_iface->bLength);
   807ec:	781a      	ldrb	r2, [r3, #0]
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   807ee:	4413      	add	r3, r2
   807f0:	4635      	mov	r5, r6
	while (ptr_end_desc >
   807f2:	42a3      	cmp	r3, r4
   807f4:	d20c      	bcs.n	80810 <udc_update_iface_desc+0x50>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   807f6:	785a      	ldrb	r2, [r3, #1]
   807f8:	2a04      	cmp	r2, #4
   807fa:	d1f7      	bne.n	807ec <udc_update_iface_desc+0x2c>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   807fc:	789a      	ldrb	r2, [r3, #2]
   807fe:	4282      	cmp	r2, r0
   80800:	d1f4      	bne.n	807ec <udc_update_iface_desc+0x2c>
   80802:	78da      	ldrb	r2, [r3, #3]
   80804:	428a      	cmp	r2, r1
   80806:	d1f1      	bne.n	807ec <udc_update_iface_desc+0x2c>
   80808:	2d00      	cmp	r5, #0
   8080a:	d1ec      	bne.n	807e6 <udc_update_iface_desc+0x26>
				return true; // Interface found
   8080c:	2001      	movs	r0, #1
   8080e:	e002      	b.n	80816 <udc_update_iface_desc+0x56>
   80810:	4a07      	ldr	r2, [pc, #28]	; (80830 <udc_update_iface_desc+0x70>)
   80812:	6013      	str	r3, [r2, #0]
	return false; // Interface not found
   80814:	2000      	movs	r0, #0
}
   80816:	bc70      	pop	{r4, r5, r6}
   80818:	4770      	bx	lr
		return false;
   8081a:	2000      	movs	r0, #0
   8081c:	4770      	bx	lr
		return false;
   8081e:	2000      	movs	r0, #0
   80820:	4770      	bx	lr
	return false; // Interface not found
   80822:	2000      	movs	r0, #0
   80824:	e7f7      	b.n	80816 <udc_update_iface_desc+0x56>
   80826:	bf00      	nop
   80828:	20070cf8 	.word	0x20070cf8
   8082c:	20070cfc 	.word	0x20070cfc
   80830:	20070d00 	.word	0x20070d00

00080834 <udc_iface_disable>:
{
   80834:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   80838:	4604      	mov	r4, r0
	if (!udc_update_iface_desc(iface_num, 0)) {
   8083a:	2100      	movs	r1, #0
   8083c:	4b13      	ldr	r3, [pc, #76]	; (8088c <udc_iface_disable+0x58>)
   8083e:	4798      	blx	r3
   80840:	4680      	mov	r8, r0
   80842:	b910      	cbnz	r0, 8084a <udc_iface_disable+0x16>
}
   80844:	4640      	mov	r0, r8
   80846:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   8084a:	4b11      	ldr	r3, [pc, #68]	; (80890 <udc_iface_disable+0x5c>)
   8084c:	681b      	ldr	r3, [r3, #0]
   8084e:	685b      	ldr	r3, [r3, #4]
   80850:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80854:	f8d9 300c 	ldr.w	r3, [r9, #12]
   80858:	4798      	blx	r3
   8085a:	4601      	mov	r1, r0
   8085c:	4620      	mov	r0, r4
   8085e:	4b0b      	ldr	r3, [pc, #44]	; (8088c <udc_iface_disable+0x58>)
   80860:	4798      	blx	r3
   80862:	4680      	mov	r8, r0
   80864:	2800      	cmp	r0, #0
   80866:	d0ed      	beq.n	80844 <udc_iface_disable+0x10>
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   80868:	4b0a      	ldr	r3, [pc, #40]	; (80894 <udc_iface_disable+0x60>)
   8086a:	681c      	ldr	r4, [r3, #0]
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   8086c:	2605      	movs	r6, #5
   8086e:	4d0a      	ldr	r5, [pc, #40]	; (80898 <udc_iface_disable+0x64>)
			udd_ep_free(ep_desc->bEndpointAddress);
   80870:	4f0a      	ldr	r7, [pc, #40]	; (8089c <udc_iface_disable+0x68>)
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80872:	4631      	mov	r1, r6
   80874:	4620      	mov	r0, r4
   80876:	47a8      	blx	r5
			if (NULL == ep_desc) {
   80878:	4604      	mov	r4, r0
   8087a:	b110      	cbz	r0, 80882 <udc_iface_disable+0x4e>
			udd_ep_free(ep_desc->bEndpointAddress);
   8087c:	7880      	ldrb	r0, [r0, #2]
   8087e:	47b8      	blx	r7
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80880:	e7f7      	b.n	80872 <udc_iface_disable+0x3e>
	udi_api->disable();
   80882:	f8d9 3004 	ldr.w	r3, [r9, #4]
   80886:	4798      	blx	r3
	return true;
   80888:	e7dc      	b.n	80844 <udc_iface_disable+0x10>
   8088a:	bf00      	nop
   8088c:	000807c1 	.word	0x000807c1
   80890:	20070cfc 	.word	0x20070cfc
   80894:	20070d00 	.word	0x20070d00
   80898:	00080761 	.word	0x00080761
   8089c:	00081b51 	.word	0x00081b51

000808a0 <udc_iface_enable>:
{
   808a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   808a4:	4680      	mov	r8, r0
	if (!udc_update_iface_desc(iface_num, setting_num)) {
   808a6:	4b10      	ldr	r3, [pc, #64]	; (808e8 <udc_iface_enable+0x48>)
   808a8:	4798      	blx	r3
   808aa:	4603      	mov	r3, r0
   808ac:	b1c8      	cbz	r0, 808e2 <udc_iface_enable+0x42>
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   808ae:	4b0f      	ldr	r3, [pc, #60]	; (808ec <udc_iface_enable+0x4c>)
   808b0:	681c      	ldr	r4, [r3, #0]
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   808b2:	2605      	movs	r6, #5
   808b4:	4d0e      	ldr	r5, [pc, #56]	; (808f0 <udc_iface_enable+0x50>)
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   808b6:	4f0f      	ldr	r7, [pc, #60]	; (808f4 <udc_iface_enable+0x54>)
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   808b8:	4631      	mov	r1, r6
   808ba:	4620      	mov	r0, r4
   808bc:	47a8      	blx	r5
		if (NULL == ep_desc)
   808be:	4604      	mov	r4, r0
   808c0:	b138      	cbz	r0, 808d2 <udc_iface_enable+0x32>
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   808c2:	8882      	ldrh	r2, [r0, #4]
   808c4:	78c1      	ldrb	r1, [r0, #3]
   808c6:	7880      	ldrb	r0, [r0, #2]
   808c8:	47b8      	blx	r7
   808ca:	4603      	mov	r3, r0
   808cc:	2800      	cmp	r0, #0
   808ce:	d1f3      	bne.n	808b8 <udc_iface_enable+0x18>
   808d0:	e007      	b.n	808e2 <udc_iface_enable+0x42>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
   808d2:	4b09      	ldr	r3, [pc, #36]	; (808f8 <udc_iface_enable+0x58>)
   808d4:	681b      	ldr	r3, [r3, #0]
   808d6:	685b      	ldr	r3, [r3, #4]
   808d8:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
   808dc:	681b      	ldr	r3, [r3, #0]
   808de:	4798      	blx	r3
   808e0:	4603      	mov	r3, r0
}
   808e2:	4618      	mov	r0, r3
   808e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   808e8:	000807c1 	.word	0x000807c1
   808ec:	20070d00 	.word	0x20070d00
   808f0:	00080761 	.word	0x00080761
   808f4:	00081e99 	.word	0x00081e99
   808f8:	20070cfc 	.word	0x20070cfc

000808fc <udc_start>:
{
   808fc:	b508      	push	{r3, lr}
	udd_enable();
   808fe:	4b01      	ldr	r3, [pc, #4]	; (80904 <udc_start+0x8>)
   80900:	4798      	blx	r3
   80902:	bd08      	pop	{r3, pc}
   80904:	00081279 	.word	0x00081279

00080908 <udc_reset>:
{
   80908:	b570      	push	{r4, r5, r6, lr}
	if (udc_num_configuration) {
   8090a:	4b0d      	ldr	r3, [pc, #52]	; (80940 <udc_reset+0x38>)
   8090c:	781b      	ldrb	r3, [r3, #0]
   8090e:	b183      	cbz	r3, 80932 <udc_reset+0x2a>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80910:	4b0c      	ldr	r3, [pc, #48]	; (80944 <udc_reset+0x3c>)
   80912:	681b      	ldr	r3, [r3, #0]
   80914:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   80916:	791b      	ldrb	r3, [r3, #4]
   80918:	b15b      	cbz	r3, 80932 <udc_reset+0x2a>
   8091a:	2400      	movs	r4, #0
			udc_iface_disable(iface_num);
   8091c:	4e0a      	ldr	r6, [pc, #40]	; (80948 <udc_reset+0x40>)
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8091e:	4d09      	ldr	r5, [pc, #36]	; (80944 <udc_reset+0x3c>)
			udc_iface_disable(iface_num);
   80920:	4620      	mov	r0, r4
   80922:	47b0      	blx	r6
				iface_num++) {
   80924:	3401      	adds	r4, #1
   80926:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80928:	682b      	ldr	r3, [r5, #0]
   8092a:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   8092c:	791b      	ldrb	r3, [r3, #4]
   8092e:	42a3      	cmp	r3, r4
   80930:	d8f6      	bhi.n	80920 <udc_reset+0x18>
	udc_num_configuration = 0;
   80932:	2200      	movs	r2, #0
   80934:	4b02      	ldr	r3, [pc, #8]	; (80940 <udc_reset+0x38>)
   80936:	701a      	strb	r2, [r3, #0]
	udc_device_status =
   80938:	2201      	movs	r2, #1
   8093a:	4b04      	ldr	r3, [pc, #16]	; (8094c <udc_reset+0x44>)
   8093c:	801a      	strh	r2, [r3, #0]
   8093e:	bd70      	pop	{r4, r5, r6, pc}
   80940:	20070cf8 	.word	0x20070cf8
   80944:	20070cfc 	.word	0x20070cfc
   80948:	00080835 	.word	0x00080835
   8094c:	20070cee 	.word	0x20070cee

00080950 <udc_sof_notify>:
{
   80950:	b538      	push	{r3, r4, r5, lr}
	if (udc_num_configuration) {
   80952:	4b0d      	ldr	r3, [pc, #52]	; (80988 <udc_sof_notify+0x38>)
   80954:	781b      	ldrb	r3, [r3, #0]
   80956:	b1b3      	cbz	r3, 80986 <udc_sof_notify+0x36>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80958:	4b0c      	ldr	r3, [pc, #48]	; (8098c <udc_sof_notify+0x3c>)
   8095a:	681b      	ldr	r3, [r3, #0]
   8095c:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
   8095e:	7912      	ldrb	r2, [r2, #4]
   80960:	b18a      	cbz	r2, 80986 <udc_sof_notify+0x36>
   80962:	2400      	movs	r4, #0
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80964:	4d09      	ldr	r5, [pc, #36]	; (8098c <udc_sof_notify+0x3c>)
   80966:	e006      	b.n	80976 <udc_sof_notify+0x26>
				iface_num++) {
   80968:	3401      	adds	r4, #1
   8096a:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8096c:	682b      	ldr	r3, [r5, #0]
   8096e:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
   80970:	7912      	ldrb	r2, [r2, #4]
   80972:	42a2      	cmp	r2, r4
   80974:	d907      	bls.n	80986 <udc_sof_notify+0x36>
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
   80976:	685b      	ldr	r3, [r3, #4]
   80978:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   8097c:	691b      	ldr	r3, [r3, #16]
   8097e:	2b00      	cmp	r3, #0
   80980:	d0f2      	beq.n	80968 <udc_sof_notify+0x18>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
   80982:	4798      	blx	r3
   80984:	e7f0      	b.n	80968 <udc_sof_notify+0x18>
   80986:	bd38      	pop	{r3, r4, r5, pc}
   80988:	20070cf8 	.word	0x20070cf8
   8098c:	20070cfc 	.word	0x20070cfc

00080990 <udc_process_setup>:
 * sent to a specific application callback.
 *
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
   80990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
   80992:	4b96      	ldr	r3, [pc, #600]	; (80bec <udc_process_setup+0x25c>)
   80994:	2200      	movs	r2, #0
   80996:	819a      	strh	r2, [r3, #12]
	udd_g_ctrlreq.callback = NULL;
   80998:	611a      	str	r2, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   8099a:	615a      	str	r2, [r3, #20]

	if (Udd_setup_is_in()) {
   8099c:	781b      	ldrb	r3, [r3, #0]
   8099e:	f013 0f80 	tst.w	r3, #128	; 0x80
   809a2:	d114      	bne.n	809ce <udc_process_setup+0x3e>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   809a4:	f013 0f60 	tst.w	r3, #96	; 0x60
   809a8:	f000 80b8 	beq.w	80b1c <udc_process_setup+0x18c>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) {
   809ac:	4b8f      	ldr	r3, [pc, #572]	; (80bec <udc_process_setup+0x25c>)
   809ae:	781b      	ldrb	r3, [r3, #0]
   809b0:	f003 031f 	and.w	r3, r3, #31
   809b4:	2b01      	cmp	r3, #1
   809b6:	f000 818b 	beq.w	80cd0 <udc_process_setup+0x340>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   809ba:	4b8c      	ldr	r3, [pc, #560]	; (80bec <udc_process_setup+0x25c>)
   809bc:	781b      	ldrb	r3, [r3, #0]
   809be:	f003 031f 	and.w	r3, r3, #31
   809c2:	2b02      	cmp	r3, #2
   809c4:	f000 81ac 	beq.w	80d20 <udc_process_setup+0x390>
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
   809c8:	2300      	movs	r3, #0
#endif
}
   809ca:	4618      	mov	r0, r3
   809cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
   809ce:	4a87      	ldr	r2, [pc, #540]	; (80bec <udc_process_setup+0x25c>)
   809d0:	88d2      	ldrh	r2, [r2, #6]
   809d2:	2a00      	cmp	r2, #0
   809d4:	f000 81cd 	beq.w	80d72 <udc_process_setup+0x3e2>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   809d8:	f013 0f60 	tst.w	r3, #96	; 0x60
   809dc:	d1e6      	bne.n	809ac <udc_process_setup+0x1c>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   809de:	f013 031f 	ands.w	r3, r3, #31
   809e2:	d106      	bne.n	809f2 <udc_process_setup+0x62>
			switch (udd_g_ctrlreq.req.bRequest) {
   809e4:	4981      	ldr	r1, [pc, #516]	; (80bec <udc_process_setup+0x25c>)
   809e6:	7849      	ldrb	r1, [r1, #1]
   809e8:	2906      	cmp	r1, #6
   809ea:	d013      	beq.n	80a14 <udc_process_setup+0x84>
   809ec:	2908      	cmp	r1, #8
   809ee:	d058      	beq.n	80aa2 <udc_process_setup+0x112>
   809f0:	b149      	cbz	r1, 80a06 <udc_process_setup+0x76>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   809f2:	2b01      	cmp	r3, #1
   809f4:	d05c      	beq.n	80ab0 <udc_process_setup+0x120>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   809f6:	2b02      	cmp	r3, #2
   809f8:	d1d8      	bne.n	809ac <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
   809fa:	4b7c      	ldr	r3, [pc, #496]	; (80bec <udc_process_setup+0x25c>)
   809fc:	785b      	ldrb	r3, [r3, #1]
   809fe:	2b00      	cmp	r3, #0
   80a00:	d07e      	beq.n	80b00 <udc_process_setup+0x170>
	return false;
   80a02:	2300      	movs	r3, #0
   80a04:	e160      	b.n	80cc8 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
   80a06:	2a02      	cmp	r2, #2
   80a08:	d1d0      	bne.n	809ac <udc_process_setup+0x1c>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
   80a0a:	2102      	movs	r1, #2
   80a0c:	4878      	ldr	r0, [pc, #480]	; (80bf0 <udc_process_setup+0x260>)
   80a0e:	4b79      	ldr	r3, [pc, #484]	; (80bf4 <udc_process_setup+0x264>)
   80a10:	4798      	blx	r3
   80a12:	e09f      	b.n	80b54 <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   80a14:	4b75      	ldr	r3, [pc, #468]	; (80bec <udc_process_setup+0x25c>)
   80a16:	885a      	ldrh	r2, [r3, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
   80a18:	0a13      	lsrs	r3, r2, #8
   80a1a:	3b01      	subs	r3, #1
   80a1c:	2b0e      	cmp	r3, #14
   80a1e:	f200 8150 	bhi.w	80cc2 <udc_process_setup+0x332>
   80a22:	e8df f013 	tbh	[pc, r3, lsl #1]
   80a26:	000f      	.short	0x000f
   80a28:	0036001c 	.word	0x0036001c
   80a2c:	014e014e 	.word	0x014e014e
   80a30:	014e014e 	.word	0x014e014e
   80a34:	014e014e 	.word	0x014e014e
   80a38:	014e014e 	.word	0x014e014e
   80a3c:	014e014e 	.word	0x014e014e
   80a40:	002e014e 	.word	0x002e014e
				(uint8_t *) udc_config.confdev_lsfs,
   80a44:	4b6c      	ldr	r3, [pc, #432]	; (80bf8 <udc_process_setup+0x268>)
   80a46:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
   80a48:	7801      	ldrb	r1, [r0, #0]
   80a4a:	4b6a      	ldr	r3, [pc, #424]	; (80bf4 <udc_process_setup+0x264>)
   80a4c:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
   80a4e:	4b67      	ldr	r3, [pc, #412]	; (80bec <udc_process_setup+0x25c>)
   80a50:	88da      	ldrh	r2, [r3, #6]
   80a52:	899b      	ldrh	r3, [r3, #12]
   80a54:	4293      	cmp	r3, r2
   80a56:	d97d      	bls.n	80b54 <udc_process_setup+0x1c4>
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
   80a58:	4b64      	ldr	r3, [pc, #400]	; (80bec <udc_process_setup+0x25c>)
   80a5a:	819a      	strh	r2, [r3, #12]
   80a5c:	e07a      	b.n	80b54 <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   80a5e:	b2d2      	uxtb	r2, r2
			if (conf_num >= udc_config.confdev_lsfs->
   80a60:	4b65      	ldr	r3, [pc, #404]	; (80bf8 <udc_process_setup+0x268>)
   80a62:	681b      	ldr	r3, [r3, #0]
   80a64:	7c5b      	ldrb	r3, [r3, #17]
   80a66:	4293      	cmp	r3, r2
   80a68:	d9a0      	bls.n	809ac <udc_process_setup+0x1c>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   80a6a:	4b63      	ldr	r3, [pc, #396]	; (80bf8 <udc_process_setup+0x268>)
   80a6c:	685b      	ldr	r3, [r3, #4]
   80a6e:	f853 0032 	ldr.w	r0, [r3, r2, lsl #3]
			udd_set_setup_payload(
   80a72:	8841      	ldrh	r1, [r0, #2]
   80a74:	4b5f      	ldr	r3, [pc, #380]	; (80bf4 <udc_process_setup+0x264>)
   80a76:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
   80a78:	4b5c      	ldr	r3, [pc, #368]	; (80bec <udc_process_setup+0x25c>)
   80a7a:	689b      	ldr	r3, [r3, #8]
   80a7c:	2202      	movs	r2, #2
   80a7e:	705a      	strb	r2, [r3, #1]
   80a80:	e7e5      	b.n	80a4e <udc_process_setup+0xbe>
		if (udc_config.conf_bos == NULL) {
   80a82:	4b5d      	ldr	r3, [pc, #372]	; (80bf8 <udc_process_setup+0x268>)
   80a84:	6898      	ldr	r0, [r3, #8]
   80a86:	2800      	cmp	r0, #0
   80a88:	d090      	beq.n	809ac <udc_process_setup+0x1c>
		udd_set_setup_payload( (uint8_t *) udc_config.conf_bos,
   80a8a:	8841      	ldrh	r1, [r0, #2]
   80a8c:	4b59      	ldr	r3, [pc, #356]	; (80bf4 <udc_process_setup+0x264>)
   80a8e:	4798      	blx	r3
   80a90:	e7dd      	b.n	80a4e <udc_process_setup+0xbe>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   80a92:	f012 0fff 	tst.w	r2, #255	; 0xff
   80a96:	d189      	bne.n	809ac <udc_process_setup+0x1c>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
   80a98:	2104      	movs	r1, #4
   80a9a:	4858      	ldr	r0, [pc, #352]	; (80bfc <udc_process_setup+0x26c>)
   80a9c:	4b55      	ldr	r3, [pc, #340]	; (80bf4 <udc_process_setup+0x264>)
   80a9e:	4798      	blx	r3
   80aa0:	e7d5      	b.n	80a4e <udc_process_setup+0xbe>
	if (udd_g_ctrlreq.req.wLength != 1) {
   80aa2:	2a01      	cmp	r2, #1
   80aa4:	d182      	bne.n	809ac <udc_process_setup+0x1c>
	udd_set_setup_payload(&udc_num_configuration,1);
   80aa6:	2101      	movs	r1, #1
   80aa8:	4855      	ldr	r0, [pc, #340]	; (80c00 <udc_process_setup+0x270>)
   80aaa:	4b52      	ldr	r3, [pc, #328]	; (80bf4 <udc_process_setup+0x264>)
   80aac:	4798      	blx	r3
   80aae:	e051      	b.n	80b54 <udc_process_setup+0x1c4>
			switch (udd_g_ctrlreq.req.bRequest) {
   80ab0:	494e      	ldr	r1, [pc, #312]	; (80bec <udc_process_setup+0x25c>)
   80ab2:	7849      	ldrb	r1, [r1, #1]
   80ab4:	290a      	cmp	r1, #10
   80ab6:	d19e      	bne.n	809f6 <udc_process_setup+0x66>
	if (udd_g_ctrlreq.req.wLength != 1) {
   80ab8:	2a01      	cmp	r2, #1
   80aba:	f47f af77 	bne.w	809ac <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
   80abe:	4b50      	ldr	r3, [pc, #320]	; (80c00 <udc_process_setup+0x270>)
   80ac0:	781b      	ldrb	r3, [r3, #0]
   80ac2:	2b00      	cmp	r3, #0
   80ac4:	f43f af72 	beq.w	809ac <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80ac8:	4b48      	ldr	r3, [pc, #288]	; (80bec <udc_process_setup+0x25c>)
   80aca:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80acc:	4b4d      	ldr	r3, [pc, #308]	; (80c04 <udc_process_setup+0x274>)
   80ace:	681d      	ldr	r5, [r3, #0]
   80ad0:	682b      	ldr	r3, [r5, #0]
   80ad2:	791b      	ldrb	r3, [r3, #4]
   80ad4:	42a3      	cmp	r3, r4
   80ad6:	f67f af69 	bls.w	809ac <udc_process_setup+0x1c>
	if (!udc_update_iface_desc(iface_num, 0)) {
   80ada:	2100      	movs	r1, #0
   80adc:	4620      	mov	r0, r4
   80ade:	4b4a      	ldr	r3, [pc, #296]	; (80c08 <udc_process_setup+0x278>)
   80ae0:	4798      	blx	r3
   80ae2:	2800      	cmp	r0, #0
   80ae4:	f43f af62 	beq.w	809ac <udc_process_setup+0x1c>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80ae8:	686b      	ldr	r3, [r5, #4]
	udc_iface_setting = udi_api->getsetting();
   80aea:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80aee:	68db      	ldr	r3, [r3, #12]
   80af0:	4798      	blx	r3
   80af2:	4b46      	ldr	r3, [pc, #280]	; (80c0c <udc_process_setup+0x27c>)
   80af4:	7018      	strb	r0, [r3, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
   80af6:	2101      	movs	r1, #1
   80af8:	4618      	mov	r0, r3
   80afa:	4b3e      	ldr	r3, [pc, #248]	; (80bf4 <udc_process_setup+0x264>)
   80afc:	4798      	blx	r3
   80afe:	e029      	b.n	80b54 <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
   80b00:	2a02      	cmp	r2, #2
   80b02:	f47f af53 	bne.w	809ac <udc_process_setup+0x1c>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
   80b06:	4b39      	ldr	r3, [pc, #228]	; (80bec <udc_process_setup+0x25c>)
   80b08:	7918      	ldrb	r0, [r3, #4]
   80b0a:	4b41      	ldr	r3, [pc, #260]	; (80c10 <udc_process_setup+0x280>)
   80b0c:	4798      	blx	r3
   80b0e:	4b41      	ldr	r3, [pc, #260]	; (80c14 <udc_process_setup+0x284>)
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
   80b10:	8018      	strh	r0, [r3, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
   80b12:	2102      	movs	r1, #2
   80b14:	4618      	mov	r0, r3
   80b16:	4b37      	ldr	r3, [pc, #220]	; (80bf4 <udc_process_setup+0x264>)
   80b18:	4798      	blx	r3
   80b1a:	e01b      	b.n	80b54 <udc_process_setup+0x1c4>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   80b1c:	f013 031f 	ands.w	r3, r3, #31
   80b20:	f040 8082 	bne.w	80c28 <udc_process_setup+0x298>
			switch (udd_g_ctrlreq.req.bRequest) {
   80b24:	4a31      	ldr	r2, [pc, #196]	; (80bec <udc_process_setup+0x25c>)
   80b26:	7852      	ldrb	r2, [r2, #1]
   80b28:	3a01      	subs	r2, #1
   80b2a:	2a08      	cmp	r2, #8
   80b2c:	d87c      	bhi.n	80c28 <udc_process_setup+0x298>
   80b2e:	e8df f012 	tbh	[pc, r2, lsl #1]
   80b32:	0013      	.short	0x0013
   80b34:	00ca007b 	.word	0x00ca007b
   80b38:	0009007b 	.word	0x0009007b
   80b3c:	007b007b 	.word	0x007b007b
   80b40:	0023007b 	.word	0x0023007b
	if (udd_g_ctrlreq.req.wLength) {
   80b44:	4b29      	ldr	r3, [pc, #164]	; (80bec <udc_process_setup+0x25c>)
   80b46:	88db      	ldrh	r3, [r3, #6]
   80b48:	2b00      	cmp	r3, #0
   80b4a:	f47f af2f 	bne.w	809ac <udc_process_setup+0x1c>
	udd_g_ctrlreq.callback = udc_valid_address;
   80b4e:	4a32      	ldr	r2, [pc, #200]	; (80c18 <udc_process_setup+0x288>)
   80b50:	4b26      	ldr	r3, [pc, #152]	; (80bec <udc_process_setup+0x25c>)
   80b52:	611a      	str	r2, [r3, #16]
			return true;
   80b54:	2301      	movs	r3, #1
   80b56:	e738      	b.n	809ca <udc_process_setup+0x3a>
	if (udd_g_ctrlreq.req.wLength) {
   80b58:	4b24      	ldr	r3, [pc, #144]	; (80bec <udc_process_setup+0x25c>)
   80b5a:	88db      	ldrh	r3, [r3, #6]
   80b5c:	2b00      	cmp	r3, #0
   80b5e:	f47f af25 	bne.w	809ac <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
   80b62:	4b22      	ldr	r3, [pc, #136]	; (80bec <udc_process_setup+0x25c>)
   80b64:	885b      	ldrh	r3, [r3, #2]
   80b66:	2b01      	cmp	r3, #1
   80b68:	f47f af20 	bne.w	809ac <udc_process_setup+0x1c>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
   80b6c:	4a20      	ldr	r2, [pc, #128]	; (80bf0 <udc_process_setup+0x260>)
   80b6e:	8813      	ldrh	r3, [r2, #0]
   80b70:	f023 0302 	bic.w	r3, r3, #2
   80b74:	8013      	strh	r3, [r2, #0]
   80b76:	e7ed      	b.n	80b54 <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength) {
   80b78:	4b1c      	ldr	r3, [pc, #112]	; (80bec <udc_process_setup+0x25c>)
   80b7a:	88db      	ldrh	r3, [r3, #6]
   80b7c:	2b00      	cmp	r3, #0
   80b7e:	f47f af15 	bne.w	809ac <udc_process_setup+0x1c>
	if (!udd_getaddress()) {
   80b82:	4b26      	ldr	r3, [pc, #152]	; (80c1c <udc_process_setup+0x28c>)
   80b84:	4798      	blx	r3
   80b86:	2800      	cmp	r0, #0
   80b88:	f43f af10 	beq.w	809ac <udc_process_setup+0x1c>
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   80b8c:	4b17      	ldr	r3, [pc, #92]	; (80bec <udc_process_setup+0x25c>)
   80b8e:	789a      	ldrb	r2, [r3, #2]
				udc_config.confdev_lsfs->bNumConfigurations) {
   80b90:	4b19      	ldr	r3, [pc, #100]	; (80bf8 <udc_process_setup+0x268>)
   80b92:	681b      	ldr	r3, [r3, #0]
   80b94:	7c5b      	ldrb	r3, [r3, #17]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   80b96:	429a      	cmp	r2, r3
   80b98:	f73f af08 	bgt.w	809ac <udc_process_setup+0x1c>
	udc_reset();
   80b9c:	4b20      	ldr	r3, [pc, #128]	; (80c20 <udc_process_setup+0x290>)
   80b9e:	4798      	blx	r3
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
   80ba0:	4b12      	ldr	r3, [pc, #72]	; (80bec <udc_process_setup+0x25c>)
   80ba2:	789b      	ldrb	r3, [r3, #2]
   80ba4:	4a16      	ldr	r2, [pc, #88]	; (80c00 <udc_process_setup+0x270>)
   80ba6:	7013      	strb	r3, [r2, #0]
	if (udc_num_configuration == 0) {
   80ba8:	2b00      	cmp	r3, #0
   80baa:	d0d3      	beq.n	80b54 <udc_process_setup+0x1c4>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
   80bac:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
   80bb0:	3b01      	subs	r3, #1
   80bb2:	4a11      	ldr	r2, [pc, #68]	; (80bf8 <udc_process_setup+0x268>)
   80bb4:	6852      	ldr	r2, [r2, #4]
   80bb6:	eb02 00c3 	add.w	r0, r2, r3, lsl #3
   80bba:	4912      	ldr	r1, [pc, #72]	; (80c04 <udc_process_setup+0x274>)
   80bbc:	6008      	str	r0, [r1, #0]
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80bbe:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
   80bc2:	791b      	ldrb	r3, [r3, #4]
   80bc4:	2b00      	cmp	r3, #0
   80bc6:	d0c5      	beq.n	80b54 <udc_process_setup+0x1c4>
   80bc8:	2400      	movs	r4, #0
		if (!udc_iface_enable(iface_num, 0)) {
   80bca:	4626      	mov	r6, r4
   80bcc:	4d15      	ldr	r5, [pc, #84]	; (80c24 <udc_process_setup+0x294>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80bce:	460f      	mov	r7, r1
		if (!udc_iface_enable(iface_num, 0)) {
   80bd0:	4631      	mov	r1, r6
   80bd2:	4620      	mov	r0, r4
   80bd4:	47a8      	blx	r5
   80bd6:	2800      	cmp	r0, #0
   80bd8:	f43f aee8 	beq.w	809ac <udc_process_setup+0x1c>
			iface_num++) {
   80bdc:	3401      	adds	r4, #1
   80bde:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80be0:	683b      	ldr	r3, [r7, #0]
   80be2:	681b      	ldr	r3, [r3, #0]
   80be4:	791b      	ldrb	r3, [r3, #4]
   80be6:	42a3      	cmp	r3, r4
   80be8:	d8f2      	bhi.n	80bd0 <udc_process_setup+0x240>
   80bea:	e7b3      	b.n	80b54 <udc_process_setup+0x1c4>
   80bec:	20070e14 	.word	0x20070e14
   80bf0:	20070cee 	.word	0x20070cee
   80bf4:	00081b45 	.word	0x00081b45
   80bf8:	20070160 	.word	0x20070160
   80bfc:	200701d4 	.word	0x200701d4
   80c00:	20070cf8 	.word	0x20070cf8
   80c04:	20070cfc 	.word	0x20070cfc
   80c08:	000807c1 	.word	0x000807c1
   80c0c:	20070cf4 	.word	0x20070cf4
   80c10:	00081bad 	.word	0x00081bad
   80c14:	20070cf0 	.word	0x20070cf0
   80c18:	000807a9 	.word	0x000807a9
   80c1c:	00081b15 	.word	0x00081b15
   80c20:	00080909 	.word	0x00080909
   80c24:	000808a1 	.word	0x000808a1
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   80c28:	2b01      	cmp	r3, #1
   80c2a:	d00a      	beq.n	80c42 <udc_process_setup+0x2b2>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   80c2c:	2b02      	cmp	r3, #2
   80c2e:	f47f aebd 	bne.w	809ac <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
   80c32:	4b52      	ldr	r3, [pc, #328]	; (80d7c <udc_process_setup+0x3ec>)
   80c34:	785b      	ldrb	r3, [r3, #1]
   80c36:	2b01      	cmp	r3, #1
   80c38:	d020      	beq.n	80c7c <udc_process_setup+0x2ec>
   80c3a:	2b03      	cmp	r3, #3
   80c3c:	d02e      	beq.n	80c9c <udc_process_setup+0x30c>
	return false;
   80c3e:	2300      	movs	r3, #0
   80c40:	e042      	b.n	80cc8 <udc_process_setup+0x338>
			switch (udd_g_ctrlreq.req.bRequest) {
   80c42:	4a4e      	ldr	r2, [pc, #312]	; (80d7c <udc_process_setup+0x3ec>)
   80c44:	7852      	ldrb	r2, [r2, #1]
   80c46:	2a0b      	cmp	r2, #11
   80c48:	d1f0      	bne.n	80c2c <udc_process_setup+0x29c>
	if (udd_g_ctrlreq.req.wLength) {
   80c4a:	4b4c      	ldr	r3, [pc, #304]	; (80d7c <udc_process_setup+0x3ec>)
   80c4c:	88db      	ldrh	r3, [r3, #6]
   80c4e:	2b00      	cmp	r3, #0
   80c50:	f47f aeac 	bne.w	809ac <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
   80c54:	4b4a      	ldr	r3, [pc, #296]	; (80d80 <udc_process_setup+0x3f0>)
   80c56:	781b      	ldrb	r3, [r3, #0]
   80c58:	2b00      	cmp	r3, #0
   80c5a:	f43f aea7 	beq.w	809ac <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80c5e:	4b47      	ldr	r3, [pc, #284]	; (80d7c <udc_process_setup+0x3ec>)
   80c60:	791c      	ldrb	r4, [r3, #4]
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
   80c62:	885d      	ldrh	r5, [r3, #2]
	if (!udc_iface_disable(iface_num)) {
   80c64:	4620      	mov	r0, r4
   80c66:	4b47      	ldr	r3, [pc, #284]	; (80d84 <udc_process_setup+0x3f4>)
   80c68:	4798      	blx	r3
   80c6a:	2800      	cmp	r0, #0
   80c6c:	f43f ae9e 	beq.w	809ac <udc_process_setup+0x1c>
	return udc_iface_enable(iface_num, setting_num);
   80c70:	b2e9      	uxtb	r1, r5
   80c72:	4620      	mov	r0, r4
   80c74:	4b44      	ldr	r3, [pc, #272]	; (80d88 <udc_process_setup+0x3f8>)
   80c76:	4798      	blx	r3
   80c78:	4603      	mov	r3, r0
   80c7a:	e025      	b.n	80cc8 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
   80c7c:	4b3f      	ldr	r3, [pc, #252]	; (80d7c <udc_process_setup+0x3ec>)
   80c7e:	88db      	ldrh	r3, [r3, #6]
   80c80:	2b00      	cmp	r3, #0
   80c82:	f47f ae93 	bne.w	809ac <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   80c86:	4b3d      	ldr	r3, [pc, #244]	; (80d7c <udc_process_setup+0x3ec>)
   80c88:	885b      	ldrh	r3, [r3, #2]
   80c8a:	2b00      	cmp	r3, #0
   80c8c:	f47f ae8e 	bne.w	809ac <udc_process_setup+0x1c>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   80c90:	4b3a      	ldr	r3, [pc, #232]	; (80d7c <udc_process_setup+0x3ec>)
   80c92:	7918      	ldrb	r0, [r3, #4]
   80c94:	4b3d      	ldr	r3, [pc, #244]	; (80d8c <udc_process_setup+0x3fc>)
   80c96:	4798      	blx	r3
   80c98:	4603      	mov	r3, r0
   80c9a:	e015      	b.n	80cc8 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
   80c9c:	4b37      	ldr	r3, [pc, #220]	; (80d7c <udc_process_setup+0x3ec>)
   80c9e:	88db      	ldrh	r3, [r3, #6]
   80ca0:	2b00      	cmp	r3, #0
   80ca2:	f47f ae83 	bne.w	809ac <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   80ca6:	4b35      	ldr	r3, [pc, #212]	; (80d7c <udc_process_setup+0x3ec>)
   80ca8:	885b      	ldrh	r3, [r3, #2]
   80caa:	2b00      	cmp	r3, #0
   80cac:	f47f ae7e 	bne.w	809ac <udc_process_setup+0x1c>
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
   80cb0:	4c32      	ldr	r4, [pc, #200]	; (80d7c <udc_process_setup+0x3ec>)
   80cb2:	7920      	ldrb	r0, [r4, #4]
   80cb4:	4b36      	ldr	r3, [pc, #216]	; (80d90 <udc_process_setup+0x400>)
   80cb6:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   80cb8:	7920      	ldrb	r0, [r4, #4]
   80cba:	4b36      	ldr	r3, [pc, #216]	; (80d94 <udc_process_setup+0x404>)
   80cbc:	4798      	blx	r3
   80cbe:	4603      	mov	r3, r0
   80cc0:	e002      	b.n	80cc8 <udc_process_setup+0x338>
		return false;
   80cc2:	2300      	movs	r3, #0
   80cc4:	e000      	b.n	80cc8 <udc_process_setup+0x338>
				return udc_req_std_dev_set_feature();
   80cc6:	2300      	movs	r3, #0
		if (udc_reqstd()) {
   80cc8:	2b00      	cmp	r3, #0
   80cca:	f47f ae7e 	bne.w	809ca <udc_process_setup+0x3a>
   80cce:	e66d      	b.n	809ac <udc_process_setup+0x1c>
	if (0 == udc_num_configuration) {
   80cd0:	4b2b      	ldr	r3, [pc, #172]	; (80d80 <udc_process_setup+0x3f0>)
   80cd2:	781b      	ldrb	r3, [r3, #0]
   80cd4:	2b00      	cmp	r3, #0
   80cd6:	d04e      	beq.n	80d76 <udc_process_setup+0x3e6>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80cd8:	4b28      	ldr	r3, [pc, #160]	; (80d7c <udc_process_setup+0x3ec>)
   80cda:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80cdc:	4b2e      	ldr	r3, [pc, #184]	; (80d98 <udc_process_setup+0x408>)
   80cde:	681d      	ldr	r5, [r3, #0]
   80ce0:	682b      	ldr	r3, [r5, #0]
   80ce2:	791b      	ldrb	r3, [r3, #4]
   80ce4:	42a3      	cmp	r3, r4
   80ce6:	d801      	bhi.n	80cec <udc_process_setup+0x35c>
	return false;
   80ce8:	2300      	movs	r3, #0
   80cea:	e66e      	b.n	809ca <udc_process_setup+0x3a>
	if (!udc_update_iface_desc(iface_num, 0)) {
   80cec:	2100      	movs	r1, #0
   80cee:	4620      	mov	r0, r4
   80cf0:	4b2a      	ldr	r3, [pc, #168]	; (80d9c <udc_process_setup+0x40c>)
   80cf2:	4798      	blx	r3
   80cf4:	2800      	cmp	r0, #0
   80cf6:	f43f ae60 	beq.w	809ba <udc_process_setup+0x2a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80cfa:	686b      	ldr	r3, [r5, #4]
   80cfc:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80d00:	68eb      	ldr	r3, [r5, #12]
   80d02:	4798      	blx	r3
   80d04:	4601      	mov	r1, r0
   80d06:	4620      	mov	r0, r4
   80d08:	4b24      	ldr	r3, [pc, #144]	; (80d9c <udc_process_setup+0x40c>)
   80d0a:	4798      	blx	r3
   80d0c:	2800      	cmp	r0, #0
   80d0e:	f43f ae54 	beq.w	809ba <udc_process_setup+0x2a>
	return udi_api->setup();
   80d12:	68ab      	ldr	r3, [r5, #8]
   80d14:	4798      	blx	r3
		if (udc_req_iface()) {
   80d16:	4603      	mov	r3, r0
   80d18:	2800      	cmp	r0, #0
   80d1a:	f47f ae56 	bne.w	809ca <udc_process_setup+0x3a>
   80d1e:	e64c      	b.n	809ba <udc_process_setup+0x2a>
	if (0 == udc_num_configuration) {
   80d20:	4b17      	ldr	r3, [pc, #92]	; (80d80 <udc_process_setup+0x3f0>)
   80d22:	781b      	ldrb	r3, [r3, #0]
   80d24:	b30b      	cbz	r3, 80d6a <udc_process_setup+0x3da>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d26:	4b1c      	ldr	r3, [pc, #112]	; (80d98 <udc_process_setup+0x408>)
   80d28:	681a      	ldr	r2, [r3, #0]
   80d2a:	6813      	ldr	r3, [r2, #0]
   80d2c:	791b      	ldrb	r3, [r3, #4]
   80d2e:	b1f3      	cbz	r3, 80d6e <udc_process_setup+0x3de>
   80d30:	2400      	movs	r4, #0
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80d32:	4e1a      	ldr	r6, [pc, #104]	; (80d9c <udc_process_setup+0x40c>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d34:	4f18      	ldr	r7, [pc, #96]	; (80d98 <udc_process_setup+0x408>)
		udi_api = udc_ptr_conf->udi_apis[iface_num];
   80d36:	6853      	ldr	r3, [r2, #4]
   80d38:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80d3c:	68eb      	ldr	r3, [r5, #12]
   80d3e:	4798      	blx	r3
   80d40:	4601      	mov	r1, r0
   80d42:	4620      	mov	r0, r4
   80d44:	47b0      	blx	r6
   80d46:	4603      	mov	r3, r0
   80d48:	2800      	cmp	r0, #0
   80d4a:	f43f ae3e 	beq.w	809ca <udc_process_setup+0x3a>
		if (udi_api->setup()) {
   80d4e:	68ab      	ldr	r3, [r5, #8]
   80d50:	4798      	blx	r3
   80d52:	4603      	mov	r3, r0
   80d54:	2800      	cmp	r0, #0
   80d56:	f47f ae38 	bne.w	809ca <udc_process_setup+0x3a>
			iface_num++) {
   80d5a:	3401      	adds	r4, #1
   80d5c:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d5e:	683a      	ldr	r2, [r7, #0]
   80d60:	6811      	ldr	r1, [r2, #0]
   80d62:	7909      	ldrb	r1, [r1, #4]
   80d64:	42a1      	cmp	r1, r4
   80d66:	d8e6      	bhi.n	80d36 <udc_process_setup+0x3a6>
   80d68:	e62f      	b.n	809ca <udc_process_setup+0x3a>
		return false; // The device is not is configured state yet
   80d6a:	2300      	movs	r3, #0
   80d6c:	e62d      	b.n	809ca <udc_process_setup+0x3a>
	return false;
   80d6e:	2300      	movs	r3, #0
   80d70:	e62b      	b.n	809ca <udc_process_setup+0x3a>
			return false; // Error from USB host
   80d72:	2300      	movs	r3, #0
   80d74:	e629      	b.n	809ca <udc_process_setup+0x3a>
	return false;
   80d76:	2300      	movs	r3, #0
   80d78:	e627      	b.n	809ca <udc_process_setup+0x3a>
   80d7a:	bf00      	nop
   80d7c:	20070e14 	.word	0x20070e14
   80d80:	20070cf8 	.word	0x20070cf8
   80d84:	00080835 	.word	0x00080835
   80d88:	000808a1 	.word	0x000808a1
   80d8c:	00081cc1 	.word	0x00081cc1
   80d90:	00082091 	.word	0x00082091
   80d94:	00081bc1 	.word	0x00081bc1
   80d98:	20070cfc 	.word	0x20070cfc
   80d9c:	000807c1 	.word	0x000807c1

00080da0 <udd_ctrl_init>:
	udd_enable_endpoint_interrupt(0);
	cpu_irq_restore(flags);
}

static void udd_ctrl_init(void)
{
   80da0:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80da2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80da6:	fab3 f383 	clz	r3, r3
   80daa:	095b      	lsrs	r3, r3, #5
   80dac:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80dae:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80db0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80db4:	2200      	movs	r2, #0
   80db6:	4b0c      	ldr	r3, [pc, #48]	; (80de8 <udd_ctrl_init+0x48>)
   80db8:	701a      	strb	r2, [r3, #0]
	return flags;
   80dba:	9b01      	ldr	r3, [sp, #4]
	// In case of abort of IN Data Phase:
	// No need to abort IN transfer (rise TXINI),
	// because it is automatically done by hardware when a Setup packet is received.
	// But the interrupt must be disabled to don't generate interrupt TXINI
	// after SETUP reception.
	udd_disable_in_send_interrupt(0);
   80dbc:	2101      	movs	r1, #1
   80dbe:	4a0b      	ldr	r2, [pc, #44]	; (80dec <udd_ctrl_init+0x4c>)
   80dc0:	6011      	str	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80dc2:	b123      	cbz	r3, 80dce <udd_ctrl_init+0x2e>
		cpu_irq_enable();
   80dc4:	4b08      	ldr	r3, [pc, #32]	; (80de8 <udd_ctrl_init+0x48>)
   80dc6:	7019      	strb	r1, [r3, #0]
   80dc8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80dcc:	b662      	cpsie	i
	cpu_irq_restore(flags);

	// In case of OUT ZLP event is no processed before Setup event occurs
	udd_ack_out_received(0);
   80dce:	2202      	movs	r2, #2
   80dd0:	4b07      	ldr	r3, [pc, #28]	; (80df0 <udd_ctrl_init+0x50>)
   80dd2:	601a      	str	r2, [r3, #0]

	udd_g_ctrlreq.callback = NULL;
   80dd4:	4a07      	ldr	r2, [pc, #28]	; (80df4 <udd_ctrl_init+0x54>)
   80dd6:	2300      	movs	r3, #0
   80dd8:	6113      	str	r3, [r2, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   80dda:	6153      	str	r3, [r2, #20]
	udd_g_ctrlreq.payload_size = 0;
   80ddc:	8193      	strh	r3, [r2, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   80dde:	4a06      	ldr	r2, [pc, #24]	; (80df8 <udd_ctrl_init+0x58>)
   80de0:	7013      	strb	r3, [r2, #0]
}
   80de2:	b002      	add	sp, #8
   80de4:	4770      	bx	lr
   80de6:	bf00      	nop
   80de8:	200701d8 	.word	0x200701d8
   80dec:	400ac220 	.word	0x400ac220
   80df0:	400ac160 	.word	0x400ac160
   80df4:	20070e14 	.word	0x20070e14
   80df8:	20070d0c 	.word	0x20070d0c

00080dfc <udd_ctrl_stall_data>:


static void udd_ctrl_stall_data(void)
{
	// Stall all packets on IN & OUT control endpoint
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   80dfc:	2205      	movs	r2, #5
   80dfe:	4b03      	ldr	r3, [pc, #12]	; (80e0c <udd_ctrl_stall_data+0x10>)
   80e00:	701a      	strb	r2, [r3, #0]
	udd_enable_stall_handshake(0);
   80e02:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   80e06:	4b02      	ldr	r3, [pc, #8]	; (80e10 <udd_ctrl_stall_data+0x14>)
   80e08:	601a      	str	r2, [r3, #0]
   80e0a:	4770      	bx	lr
   80e0c:	20070d0c 	.word	0x20070d0c
   80e10:	400ac1f0 	.word	0x400ac1f0

00080e14 <udd_ctrl_send_zlp_in>:
}


static void udd_ctrl_send_zlp_in(void)
{
   80e14:	b082      	sub	sp, #8
	irqflags_t flags;

	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   80e16:	2203      	movs	r2, #3
   80e18:	4b0f      	ldr	r3, [pc, #60]	; (80e58 <udd_ctrl_send_zlp_in+0x44>)
   80e1a:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80e1c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80e20:	fab3 f383 	clz	r3, r3
   80e24:	095b      	lsrs	r3, r3, #5
   80e26:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80e28:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80e2a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80e2e:	2200      	movs	r2, #0
   80e30:	4b0a      	ldr	r3, [pc, #40]	; (80e5c <udd_ctrl_send_zlp_in+0x48>)
   80e32:	701a      	strb	r2, [r3, #0]
	return flags;
   80e34:	9801      	ldr	r0, [sp, #4]

	// Validate and send empty IN packet on control endpoint
	flags = cpu_irq_save();
	// Send ZLP on IN endpoint
	udd_ack_in_send(0);
   80e36:	490a      	ldr	r1, [pc, #40]	; (80e60 <udd_ctrl_send_zlp_in+0x4c>)
   80e38:	2201      	movs	r2, #1
   80e3a:	600a      	str	r2, [r1, #0]
	udd_enable_in_send_interrupt(0);
   80e3c:	4b09      	ldr	r3, [pc, #36]	; (80e64 <udd_ctrl_send_zlp_in+0x50>)
   80e3e:	601a      	str	r2, [r3, #0]
	// To detect a protocol error, enable nak interrupt on data OUT phase
	udd_ack_nak_out(0);
   80e40:	2208      	movs	r2, #8
   80e42:	600a      	str	r2, [r1, #0]
	udd_enable_nak_out_interrupt(0);
   80e44:	601a      	str	r2, [r3, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80e46:	b128      	cbz	r0, 80e54 <udd_ctrl_send_zlp_in+0x40>
		cpu_irq_enable();
   80e48:	2201      	movs	r2, #1
   80e4a:	4b04      	ldr	r3, [pc, #16]	; (80e5c <udd_ctrl_send_zlp_in+0x48>)
   80e4c:	701a      	strb	r2, [r3, #0]
   80e4e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80e52:	b662      	cpsie	i
	cpu_irq_restore(flags);
}
   80e54:	b002      	add	sp, #8
   80e56:	4770      	bx	lr
   80e58:	20070d0c 	.word	0x20070d0c
   80e5c:	200701d8 	.word	0x200701d8
   80e60:	400ac160 	.word	0x400ac160
   80e64:	400ac1f0 	.word	0x400ac1f0

00080e68 <udd_ctrl_endofrequest>:
	cpu_irq_restore(flags);
}


static void udd_ctrl_endofrequest(void)
{
   80e68:	b508      	push	{r3, lr}
	// If a callback is registered then call it
	if (udd_g_ctrlreq.callback) {
   80e6a:	4b02      	ldr	r3, [pc, #8]	; (80e74 <udd_ctrl_endofrequest+0xc>)
   80e6c:	691b      	ldr	r3, [r3, #16]
   80e6e:	b103      	cbz	r3, 80e72 <udd_ctrl_endofrequest+0xa>
		udd_g_ctrlreq.callback();
   80e70:	4798      	blx	r3
   80e72:	bd08      	pop	{r3, pc}
   80e74:	20070e14 	.word	0x20070e14

00080e78 <udd_ctrl_in_sent>:
{
   80e78:	b530      	push	{r4, r5, lr}
   80e7a:	b085      	sub	sp, #20
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80e7c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80e80:	fab3 f383 	clz	r3, r3
   80e84:	095b      	lsrs	r3, r3, #5
   80e86:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80e88:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80e8a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80e8e:	2200      	movs	r2, #0
   80e90:	4b4c      	ldr	r3, [pc, #304]	; (80fc4 <udd_ctrl_in_sent+0x14c>)
   80e92:	701a      	strb	r2, [r3, #0]
	return flags;
   80e94:	9b01      	ldr	r3, [sp, #4]
	udd_disable_in_send_interrupt(0);
   80e96:	2101      	movs	r1, #1
   80e98:	4a4b      	ldr	r2, [pc, #300]	; (80fc8 <udd_ctrl_in_sent+0x150>)
   80e9a:	6011      	str	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80e9c:	b123      	cbz	r3, 80ea8 <udd_ctrl_in_sent+0x30>
		cpu_irq_enable();
   80e9e:	4b49      	ldr	r3, [pc, #292]	; (80fc4 <udd_ctrl_in_sent+0x14c>)
   80ea0:	7019      	strb	r1, [r3, #0]
   80ea2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80ea6:	b662      	cpsie	i
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   80ea8:	4b48      	ldr	r3, [pc, #288]	; (80fcc <udd_ctrl_in_sent+0x154>)
   80eaa:	781b      	ldrb	r3, [r3, #0]
   80eac:	2b03      	cmp	r3, #3
   80eae:	d057      	beq.n	80f60 <udd_ctrl_in_sent+0xe8>
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   80eb0:	4b47      	ldr	r3, [pc, #284]	; (80fd0 <udd_ctrl_in_sent+0x158>)
   80eb2:	881b      	ldrh	r3, [r3, #0]
   80eb4:	4a47      	ldr	r2, [pc, #284]	; (80fd4 <udd_ctrl_in_sent+0x15c>)
   80eb6:	8994      	ldrh	r4, [r2, #12]
   80eb8:	1ae4      	subs	r4, r4, r3
   80eba:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
   80ebc:	b9c4      	cbnz	r4, 80ef0 <udd_ctrl_in_sent+0x78>
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   80ebe:	4a46      	ldr	r2, [pc, #280]	; (80fd8 <udd_ctrl_in_sent+0x160>)
   80ec0:	8811      	ldrh	r1, [r2, #0]
   80ec2:	440b      	add	r3, r1
   80ec4:	b29b      	uxth	r3, r3
   80ec6:	8013      	strh	r3, [r2, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   80ec8:	4a42      	ldr	r2, [pc, #264]	; (80fd4 <udd_ctrl_in_sent+0x15c>)
   80eca:	88d2      	ldrh	r2, [r2, #6]
   80ecc:	429a      	cmp	r2, r3
   80ece:	d04c      	beq.n	80f6a <udd_ctrl_in_sent+0xf2>
					|| b_shortpacket) {
   80ed0:	4b42      	ldr	r3, [pc, #264]	; (80fdc <udd_ctrl_in_sent+0x164>)
   80ed2:	781b      	ldrb	r3, [r3, #0]
   80ed4:	2b00      	cmp	r3, #0
   80ed6:	d148      	bne.n	80f6a <udd_ctrl_in_sent+0xf2>
		if ((!udd_g_ctrlreq.over_under_run)
   80ed8:	4b3e      	ldr	r3, [pc, #248]	; (80fd4 <udd_ctrl_in_sent+0x15c>)
   80eda:	695b      	ldr	r3, [r3, #20]
   80edc:	2b00      	cmp	r3, #0
   80ede:	d061      	beq.n	80fa4 <udd_ctrl_in_sent+0x12c>
				|| (!udd_g_ctrlreq.over_under_run())) {
   80ee0:	4798      	blx	r3
   80ee2:	2800      	cmp	r0, #0
   80ee4:	d05e      	beq.n	80fa4 <udd_ctrl_in_sent+0x12c>
			udd_ctrl_payload_buf_cnt = 0;
   80ee6:	2200      	movs	r2, #0
   80ee8:	4b39      	ldr	r3, [pc, #228]	; (80fd0 <udd_ctrl_in_sent+0x158>)
   80eea:	801a      	strh	r2, [r3, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
   80eec:	4b39      	ldr	r3, [pc, #228]	; (80fd4 <udd_ctrl_in_sent+0x15c>)
   80eee:	899c      	ldrh	r4, [r3, #12]
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
   80ef0:	2c3f      	cmp	r4, #63	; 0x3f
   80ef2:	d957      	bls.n	80fa4 <udd_ctrl_in_sent+0x12c>
		b_shortpacket = false;
   80ef4:	2200      	movs	r2, #0
   80ef6:	4b39      	ldr	r3, [pc, #228]	; (80fdc <udd_ctrl_in_sent+0x164>)
   80ef8:	701a      	strb	r2, [r3, #0]
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
   80efa:	2440      	movs	r4, #64	; 0x40
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   80efc:	4b35      	ldr	r3, [pc, #212]	; (80fd4 <udd_ctrl_in_sent+0x15c>)
   80efe:	689a      	ldr	r2, [r3, #8]
   80f00:	4b33      	ldr	r3, [pc, #204]	; (80fd0 <udd_ctrl_in_sent+0x158>)
   80f02:	881d      	ldrh	r5, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80f04:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80f08:	fab3 f383 	clz	r3, r3
   80f0c:	095b      	lsrs	r3, r3, #5
   80f0e:	9302      	str	r3, [sp, #8]
  __ASM volatile ("cpsid i" : : : "memory");
   80f10:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80f12:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80f16:	2100      	movs	r1, #0
   80f18:	4b2a      	ldr	r3, [pc, #168]	; (80fc4 <udd_ctrl_in_sent+0x14c>)
   80f1a:	7019      	strb	r1, [r3, #0]
	return flags;
   80f1c:	9802      	ldr	r0, [sp, #8]
	if (Is_udd_out_received(0)) {
   80f1e:	4b30      	ldr	r3, [pc, #192]	; (80fe0 <udd_ctrl_in_sent+0x168>)
   80f20:	681b      	ldr	r3, [r3, #0]
   80f22:	f013 0f02 	tst.w	r3, #2
   80f26:	d141      	bne.n	80fac <udd_ctrl_in_sent+0x134>
	for (i = 0; i < nb_remain; i++) {
   80f28:	b144      	cbz	r4, 80f3c <udd_ctrl_in_sent+0xc4>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   80f2a:	442a      	add	r2, r5
   80f2c:	4b2d      	ldr	r3, [pc, #180]	; (80fe4 <udd_ctrl_in_sent+0x16c>)
		*ptr_dest++ = *ptr_src++;
   80f2e:	f812 1b01 	ldrb.w	r1, [r2], #1
   80f32:	f803 1b01 	strb.w	r1, [r3], #1
	for (i = 0; i < nb_remain; i++) {
   80f36:	b2d9      	uxtb	r1, r3
   80f38:	42a1      	cmp	r1, r4
   80f3a:	d3f8      	bcc.n	80f2e <udd_ctrl_in_sent+0xb6>
	udd_ctrl_payload_buf_cnt += nb_remain;
   80f3c:	4b24      	ldr	r3, [pc, #144]	; (80fd0 <udd_ctrl_in_sent+0x158>)
   80f3e:	881a      	ldrh	r2, [r3, #0]
   80f40:	4414      	add	r4, r2
   80f42:	801c      	strh	r4, [r3, #0]
	udd_ack_in_send(0);
   80f44:	2301      	movs	r3, #1
   80f46:	4a28      	ldr	r2, [pc, #160]	; (80fe8 <udd_ctrl_in_sent+0x170>)
   80f48:	6013      	str	r3, [r2, #0]
	udd_enable_in_send_interrupt(0);
   80f4a:	3290      	adds	r2, #144	; 0x90
   80f4c:	6013      	str	r3, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80f4e:	2800      	cmp	r0, #0
   80f50:	d036      	beq.n	80fc0 <udd_ctrl_in_sent+0x148>
		cpu_irq_enable();
   80f52:	461a      	mov	r2, r3
   80f54:	4b1b      	ldr	r3, [pc, #108]	; (80fc4 <udd_ctrl_in_sent+0x14c>)
   80f56:	701a      	strb	r2, [r3, #0]
   80f58:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80f5c:	b662      	cpsie	i
   80f5e:	e02f      	b.n	80fc0 <udd_ctrl_in_sent+0x148>
		udd_ctrl_endofrequest();
   80f60:	4b22      	ldr	r3, [pc, #136]	; (80fec <udd_ctrl_in_sent+0x174>)
   80f62:	4798      	blx	r3
		udd_ctrl_init();
   80f64:	4b22      	ldr	r3, [pc, #136]	; (80ff0 <udd_ctrl_in_sent+0x178>)
   80f66:	4798      	blx	r3
		return;
   80f68:	e02a      	b.n	80fc0 <udd_ctrl_in_sent+0x148>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   80f6a:	2204      	movs	r2, #4
   80f6c:	4b17      	ldr	r3, [pc, #92]	; (80fcc <udd_ctrl_in_sent+0x154>)
   80f6e:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80f70:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80f74:	fab3 f383 	clz	r3, r3
   80f78:	095b      	lsrs	r3, r3, #5
   80f7a:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   80f7c:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80f7e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80f82:	2200      	movs	r2, #0
   80f84:	4b0f      	ldr	r3, [pc, #60]	; (80fc4 <udd_ctrl_in_sent+0x14c>)
   80f86:	701a      	strb	r2, [r3, #0]
	return flags;
   80f88:	9a03      	ldr	r2, [sp, #12]
	udd_ack_nak_in(0);
   80f8a:	2310      	movs	r3, #16
   80f8c:	4916      	ldr	r1, [pc, #88]	; (80fe8 <udd_ctrl_in_sent+0x170>)
   80f8e:	600b      	str	r3, [r1, #0]
	udd_enable_nak_in_interrupt(0);
   80f90:	3190      	adds	r1, #144	; 0x90
   80f92:	600b      	str	r3, [r1, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80f94:	b1a2      	cbz	r2, 80fc0 <udd_ctrl_in_sent+0x148>
		cpu_irq_enable();
   80f96:	2201      	movs	r2, #1
   80f98:	4b0a      	ldr	r3, [pc, #40]	; (80fc4 <udd_ctrl_in_sent+0x14c>)
   80f9a:	701a      	strb	r2, [r3, #0]
   80f9c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80fa0:	b662      	cpsie	i
   80fa2:	e00d      	b.n	80fc0 <udd_ctrl_in_sent+0x148>
		b_shortpacket = true;
   80fa4:	2201      	movs	r2, #1
   80fa6:	4b0d      	ldr	r3, [pc, #52]	; (80fdc <udd_ctrl_in_sent+0x164>)
   80fa8:	701a      	strb	r2, [r3, #0]
   80faa:	e7a7      	b.n	80efc <udd_ctrl_in_sent+0x84>
	if (cpu_irq_is_enabled_flags(flags))
   80fac:	b128      	cbz	r0, 80fba <udd_ctrl_in_sent+0x142>
		cpu_irq_enable();
   80fae:	2201      	movs	r2, #1
   80fb0:	4b04      	ldr	r3, [pc, #16]	; (80fc4 <udd_ctrl_in_sent+0x14c>)
   80fb2:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   80fb4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80fb8:	b662      	cpsie	i
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   80fba:	2204      	movs	r2, #4
   80fbc:	4b03      	ldr	r3, [pc, #12]	; (80fcc <udd_ctrl_in_sent+0x154>)
   80fbe:	701a      	strb	r2, [r3, #0]
}
   80fc0:	b005      	add	sp, #20
   80fc2:	bd30      	pop	{r4, r5, pc}
   80fc4:	200701d8 	.word	0x200701d8
   80fc8:	400ac220 	.word	0x400ac220
   80fcc:	20070d0c 	.word	0x20070d0c
   80fd0:	20070d08 	.word	0x20070d08
   80fd4:	20070e14 	.word	0x20070e14
   80fd8:	20070d0a 	.word	0x20070d0a
   80fdc:	20070d04 	.word	0x20070d04
   80fe0:	400ac130 	.word	0x400ac130
   80fe4:	20180000 	.word	0x20180000
   80fe8:	400ac160 	.word	0x400ac160
   80fec:	00080e69 	.word	0x00080e69
   80ff0:	00080da1 	.word	0x00080da1

00080ff4 <udd_ep_finish_job>:
}


static void udd_ep_finish_job(udd_ep_job_t * ptr_job, bool b_abort, uint8_t ep_num)
{
	if (ptr_job->busy == false) {
   80ff4:	7d03      	ldrb	r3, [r0, #20]
   80ff6:	f013 0f01 	tst.w	r3, #1
   80ffa:	d013      	beq.n	81024 <udd_ep_finish_job+0x30>
{
   80ffc:	b510      	push	{r4, lr}
   80ffe:	460c      	mov	r4, r1
		return; // No on-going job
	}
	dbg_print("(JobE%x:%d) ", (ptr_job-udd_ep_job)+1, b_abort);
	ptr_job->busy = false;
   81000:	7d03      	ldrb	r3, [r0, #20]
   81002:	f36f 0300 	bfc	r3, #0, #1
   81006:	7503      	strb	r3, [r0, #20]
	if (NULL == ptr_job->call_trans) {
   81008:	6803      	ldr	r3, [r0, #0]
   8100a:	b153      	cbz	r3, 81022 <udd_ep_finish_job+0x2e>
		return; // No callback linked to job
	}
	if (Is_udd_endpoint_in(ep_num)) {
   8100c:	4906      	ldr	r1, [pc, #24]	; (81028 <udd_ep_finish_job+0x34>)
   8100e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
   81012:	f411 7f80 	tst.w	r1, #256	; 0x100
		ep_num |= USB_EP_DIR_IN;
   81016:	bf18      	it	ne
   81018:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
	}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   8101c:	6881      	ldr	r1, [r0, #8]
   8101e:	4620      	mov	r0, r4
   81020:	4798      	blx	r3
   81022:	bd10      	pop	{r4, pc}
   81024:	4770      	bx	lr
   81026:	bf00      	nop
   81028:	400ac100 	.word	0x400ac100

0008102c <udd_ep_trans_done>:
	udd_ep_job_t *ptr_job;
	iram_size_t next_trans;
	irqflags_t flags;

	// Get job corresponding at endpoint
	ptr_job = &udd_ep_job[ep - 1];
   8102c:	1e43      	subs	r3, r0, #1

	if (!ptr_job->busy) {
   8102e:	eb03 0143 	add.w	r1, r3, r3, lsl #1
   81032:	4a5f      	ldr	r2, [pc, #380]	; (811b0 <udd_ep_trans_done+0x184>)
   81034:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
   81038:	7d12      	ldrb	r2, [r2, #20]
   8103a:	f012 0f01 	tst.w	r2, #1
   8103e:	f000 80b5 	beq.w	811ac <udd_ep_trans_done+0x180>
{
   81042:	b5f0      	push	{r4, r5, r6, r7, lr}
   81044:	b083      	sub	sp, #12
		return; // No job is running, then ignore it (system error)
	}

	if (ptr_job->buf_cnt != ptr_job->buf_size) {
   81046:	460a      	mov	r2, r1
   81048:	4959      	ldr	r1, [pc, #356]	; (811b0 <udd_ep_trans_done+0x184>)
   8104a:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   8104e:	68d1      	ldr	r1, [r2, #12]
   81050:	6892      	ldr	r2, [r2, #8]
   81052:	4291      	cmp	r1, r2
   81054:	d077      	beq.n	81146 <udd_ep_trans_done+0x11a>
		// Need to send or receiv other data
		next_trans = ptr_job->buf_size - ptr_job->buf_cnt;
   81056:	1a52      	subs	r2, r2, r1

		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
   81058:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
			next_trans = UDD_ENDPOINT_MAX_TRANS;

			// Set 0 to tranfer the maximum
			udd_dma_ctrl = UOTGHS_DEVDMACONTROL_BUFF_LENGTH(0);
		} else {
			udd_dma_ctrl = UOTGHS_DEVDMACONTROL_BUFF_LENGTH(next_trans);
   8105c:	bf92      	itee	ls
   8105e:	0417      	lslls	r7, r2, #16
			next_trans = UDD_ENDPOINT_MAX_TRANS;
   81060:	f44f 3280 	movhi.w	r2, #65536	; 0x10000
			udd_dma_ctrl = UOTGHS_DEVDMACONTROL_BUFF_LENGTH(0);
   81064:	2700      	movhi	r7, #0
		}
		if (Is_udd_endpoint_in(ep)) {
   81066:	4c53      	ldr	r4, [pc, #332]	; (811b4 <udd_ep_trans_done+0x188>)
   81068:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   8106c:	f415 7f80 	tst.w	r5, #256	; 0x100
   81070:	d014      	beq.n	8109c <udd_ep_trans_done+0x70>
			if (0 != (next_trans % udd_get_endpoint_size(ep))) {
   81072:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   81076:	f3c5 1502 	ubfx	r5, r5, #4, #3
   8107a:	2408      	movs	r4, #8
   8107c:	40ac      	lsls	r4, r5
   8107e:	3c01      	subs	r4, #1
   81080:	4214      	tst	r4, r2
   81082:	d013      	beq.n	810ac <udd_ep_trans_done+0x80>
				// Enable short packet option
				// else the DMA transfer is accepted
				// and interrupt DMA valid but nothing is sent.
				udd_dma_ctrl |= UOTGHS_DEVDMACONTROL_END_B_EN;
   81084:	f047 0708 	orr.w	r7, r7, #8
				// No need to request another ZLP
				ptr_job->b_shortpacket = false;
   81088:	eb03 0443 	add.w	r4, r3, r3, lsl #1
   8108c:	4d48      	ldr	r5, [pc, #288]	; (811b0 <udd_ep_trans_done+0x184>)
   8108e:	eb05 04c4 	add.w	r4, r5, r4, lsl #3
   81092:	7d25      	ldrb	r5, [r4, #20]
   81094:	f36f 0541 	bfc	r5, #1, #1
   81098:	7525      	strb	r5, [r4, #20]
   8109a:	e007      	b.n	810ac <udd_ep_trans_done+0x80>
			}
		} else {
			if ((USB_EP_TYPE_ISOCHRONOUS != udd_get_endpoint_type(ep))
   8109c:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   810a0:	f3c5 25c1 	ubfx	r5, r5, #11, #2
   810a4:	2d01      	cmp	r5, #1
   810a6:	d037      	beq.n	81118 <udd_ep_trans_done+0xec>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {

				// Enable short packet reception
				udd_dma_ctrl |= UOTGHS_DEVDMACONTROL_END_TR_IT
   810a8:	f047 0714 	orr.w	r7, r7, #20
						| UOTGHS_DEVDMACONTROL_END_TR_EN;
			}
		}

		// Start USB DMA to fill or read fifo of the selected endpoint
		udd_endpoint_dma_set_addr(ep, (uint32_t) & ptr_job->buf[ptr_job->buf_cnt]);
   810ac:	4c42      	ldr	r4, [pc, #264]	; (811b8 <udd_ep_trans_done+0x18c>)
   810ae:	eb04 1400 	add.w	r4, r4, r0, lsl #4
   810b2:	eb03 0543 	add.w	r5, r3, r3, lsl #1
   810b6:	4e3e      	ldr	r6, [pc, #248]	; (811b0 <udd_ep_trans_done+0x184>)
   810b8:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   810bc:	686d      	ldr	r5, [r5, #4]
   810be:	4429      	add	r1, r5
   810c0:	6061      	str	r1, [r4, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   810c2:	f3ef 8110 	mrs	r1, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   810c6:	fab1 f181 	clz	r1, r1
   810ca:	0949      	lsrs	r1, r1, #5
   810cc:	9101      	str	r1, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   810ce:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   810d0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   810d4:	2500      	movs	r5, #0
   810d6:	4939      	ldr	r1, [pc, #228]	; (811bc <udd_ep_trans_done+0x190>)
   810d8:	700d      	strb	r5, [r1, #0]
	return flags;
   810da:	9d01      	ldr	r5, [sp, #4]


		// Disable IRQs to have a short sequence
		// between read of EOT_STA and DMA enable
		flags = cpu_irq_save();
		if (!(udd_endpoint_dma_get_status(ep)
   810dc:	68e1      	ldr	r1, [r4, #12]
   810de:	f011 0f10 	tst.w	r1, #16
   810e2:	d122      	bne.n	8112a <udd_ep_trans_done+0xfe>
		udd_dma_ctrl |= UOTGHS_DEVDMACONTROL_END_BUFFIT |
   810e4:	f047 0721 	orr.w	r7, r7, #33	; 0x21
				& UOTGHS_DEVDMASTATUS_END_TR_ST)) {
			dbg_print("dmaS%x ", ep);
			udd_endpoint_dma_set_control(ep, udd_dma_ctrl);
   810e8:	60a7      	str	r7, [r4, #8]
			ptr_job->buf_cnt += next_trans;
   810ea:	eb03 0043 	add.w	r0, r3, r3, lsl #1
   810ee:	eb06 01c0 	add.w	r1, r6, r0, lsl #3
   810f2:	68c8      	ldr	r0, [r1, #12]
   810f4:	4410      	add	r0, r2
   810f6:	60c8      	str	r0, [r1, #12]
			ptr_job->buf_load = next_trans;
   810f8:	610a      	str	r2, [r1, #16]
			udd_enable_endpoint_dma_interrupt(ep);
   810fa:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
   810fe:	fa00 f303 	lsl.w	r3, r0, r3
   81102:	4a2f      	ldr	r2, [pc, #188]	; (811c0 <udd_ep_trans_done+0x194>)
   81104:	6193      	str	r3, [r2, #24]
	if (cpu_irq_is_enabled_flags(flags))
   81106:	2d00      	cmp	r5, #0
   81108:	d04e      	beq.n	811a8 <udd_ep_trans_done+0x17c>
		cpu_irq_enable();
   8110a:	2201      	movs	r2, #1
   8110c:	4b2b      	ldr	r3, [pc, #172]	; (811bc <udd_ep_trans_done+0x190>)
   8110e:	701a      	strb	r2, [r3, #0]
   81110:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81114:	b662      	cpsie	i
   81116:	e047      	b.n	811a8 <udd_ep_trans_done+0x17c>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   81118:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   8111c:	f3c5 1502 	ubfx	r5, r5, #4, #3
   81120:	2408      	movs	r4, #8
   81122:	40ac      	lsls	r4, r5
   81124:	42a2      	cmp	r2, r4
   81126:	d8c1      	bhi.n	810ac <udd_ep_trans_done+0x80>
   81128:	e7be      	b.n	810a8 <udd_ep_trans_done+0x7c>
	if (cpu_irq_is_enabled_flags(flags))
   8112a:	b12d      	cbz	r5, 81138 <udd_ep_trans_done+0x10c>
		cpu_irq_enable();
   8112c:	2101      	movs	r1, #1
   8112e:	4a23      	ldr	r2, [pc, #140]	; (811bc <udd_ep_trans_done+0x190>)
   81130:	7011      	strb	r1, [r2, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   81132:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81136:	b662      	cpsie	i
		cpu_irq_restore(flags);

		// Here a ZLP has been recieved
		// and the DMA transfer must be not started.
		// It is the end of transfer
		ptr_job->buf_size = ptr_job->buf_cnt;
   81138:	eb03 0243 	add.w	r2, r3, r3, lsl #1
   8113c:	491c      	ldr	r1, [pc, #112]	; (811b0 <udd_ep_trans_done+0x184>)
   8113e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   81142:	68d1      	ldr	r1, [r2, #12]
   81144:	6091      	str	r1, [r2, #8]
	}
	if (Is_udd_endpoint_in(ep)) {
   81146:	4a1b      	ldr	r2, [pc, #108]	; (811b4 <udd_ep_trans_done+0x188>)
   81148:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
   8114c:	f412 7f80 	tst.w	r2, #256	; 0x100
   81150:	d021      	beq.n	81196 <udd_ep_trans_done+0x16a>
		if (ptr_job->b_shortpacket) {
   81152:	eb03 0243 	add.w	r2, r3, r3, lsl #1
   81156:	4916      	ldr	r1, [pc, #88]	; (811b0 <udd_ep_trans_done+0x184>)
   81158:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   8115c:	7d12      	ldrb	r2, [r2, #20]
   8115e:	f012 0f02 	tst.w	r2, #2
   81162:	d018      	beq.n	81196 <udd_ep_trans_done+0x16a>
			dbg_print("zlpS%x ", ep);
			// Need to send a ZLP (No possible with USB DMA)
			// enable interrupt to wait a free bank to sent ZLP
			udd_ack_in_send(ep);
   81164:	2201      	movs	r2, #1
   81166:	4b17      	ldr	r3, [pc, #92]	; (811c4 <udd_ep_trans_done+0x198>)
   81168:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
			if (Is_udd_write_enabled(ep)) {
   8116c:	3b30      	subs	r3, #48	; 0x30
   8116e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
   81172:	f413 3f80 	tst.w	r3, #65536	; 0x10000
				// Force interrupt in case of ep already free
				udd_raise_in_send(ep);
   81176:	bf1c      	itt	ne
   81178:	4b13      	ldrne	r3, [pc, #76]	; (811c8 <udd_ep_trans_done+0x19c>)
   8117a:	f843 2020 	strne.w	r2, [r3, r0, lsl #2]
			}
			udd_enable_in_send_interrupt(ep);
   8117e:	2201      	movs	r2, #1
   81180:	4b12      	ldr	r3, [pc, #72]	; (811cc <udd_ep_trans_done+0x1a0>)
   81182:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
			udd_enable_endpoint_interrupt(ep);
   81186:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   8118a:	fa02 f000 	lsl.w	r0, r2, r0
   8118e:	f5a3 73f8 	sub.w	r3, r3, #496	; 0x1f0
   81192:	6198      	str	r0, [r3, #24]
			return;
   81194:	e008      	b.n	811a8 <udd_ep_trans_done+0x17c>
   81196:	4602      	mov	r2, r0
	ptr_job = &udd_ep_job[ep - 1];
   81198:	eb03 0343 	add.w	r3, r3, r3, lsl #1
		}
	}
	dbg_print("dmaE ");
	// Call callback to signal end of transfer
	udd_ep_finish_job(ptr_job, false, ep);
   8119c:	2100      	movs	r1, #0
   8119e:	4804      	ldr	r0, [pc, #16]	; (811b0 <udd_ep_trans_done+0x184>)
   811a0:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
   811a4:	4b0a      	ldr	r3, [pc, #40]	; (811d0 <udd_ep_trans_done+0x1a4>)
   811a6:	4798      	blx	r3
}
   811a8:	b003      	add	sp, #12
   811aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
   811ac:	4770      	bx	lr
   811ae:	bf00      	nop
   811b0:	20070d10 	.word	0x20070d10
   811b4:	400ac100 	.word	0x400ac100
   811b8:	400ac300 	.word	0x400ac300
   811bc:	200701d8 	.word	0x200701d8
   811c0:	400ac000 	.word	0x400ac000
   811c4:	400ac160 	.word	0x400ac160
   811c8:	400ac190 	.word	0x400ac190
   811cc:	400ac1f0 	.word	0x400ac1f0
   811d0:	00080ff5 	.word	0x00080ff5

000811d4 <udd_sleep_mode>:
{
   811d4:	b082      	sub	sp, #8
	if (!b_idle && udd_b_idle) {
   811d6:	4601      	mov	r1, r0
   811d8:	bb28      	cbnz	r0, 81226 <udd_sleep_mode+0x52>
   811da:	4b24      	ldr	r3, [pc, #144]	; (8126c <udd_sleep_mode+0x98>)
   811dc:	781b      	ldrb	r3, [r3, #0]
   811de:	b91b      	cbnz	r3, 811e8 <udd_sleep_mode+0x14>
	udd_b_idle = b_idle;
   811e0:	4b22      	ldr	r3, [pc, #136]	; (8126c <udd_sleep_mode+0x98>)
   811e2:	7019      	strb	r1, [r3, #0]
}
   811e4:	b002      	add	sp, #8
   811e6:	4770      	bx	lr
static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] == 0) {
   811e8:	4b21      	ldr	r3, [pc, #132]	; (81270 <udd_sleep_mode+0x9c>)
   811ea:	789b      	ldrb	r3, [r3, #2]
   811ec:	b903      	cbnz	r3, 811f0 <udd_sleep_mode+0x1c>
   811ee:	e7fe      	b.n	811ee <udd_sleep_mode+0x1a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   811f0:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   811f4:	fab3 f383 	clz	r3, r3
   811f8:	095b      	lsrs	r3, r3, #5
   811fa:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
   811fc:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   811fe:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81202:	2200      	movs	r2, #0
   81204:	4b1b      	ldr	r3, [pc, #108]	; (81274 <udd_sleep_mode+0xa0>)
   81206:	701a      	strb	r2, [r3, #0]
	return flags;
   81208:	9800      	ldr	r0, [sp, #0]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
   8120a:	4a19      	ldr	r2, [pc, #100]	; (81270 <udd_sleep_mode+0x9c>)
   8120c:	7893      	ldrb	r3, [r2, #2]
   8120e:	3b01      	subs	r3, #1
   81210:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
   81212:	2800      	cmp	r0, #0
   81214:	d0e4      	beq.n	811e0 <udd_sleep_mode+0xc>
		cpu_irq_enable();
   81216:	2201      	movs	r2, #1
   81218:	4b16      	ldr	r3, [pc, #88]	; (81274 <udd_sleep_mode+0xa0>)
   8121a:	701a      	strb	r2, [r3, #0]
   8121c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81220:	b662      	cpsie	i
   81222:	e7dd      	b.n	811e0 <udd_sleep_mode+0xc>
   81224:	e7fe      	b.n	81224 <udd_sleep_mode+0x50>
	if (b_idle && !udd_b_idle) {
   81226:	4b11      	ldr	r3, [pc, #68]	; (8126c <udd_sleep_mode+0x98>)
   81228:	781b      	ldrb	r3, [r3, #0]
   8122a:	2b00      	cmp	r3, #0
   8122c:	d1d8      	bne.n	811e0 <udd_sleep_mode+0xc>
	if(sleepmgr_locks[mode] >= 0xff) {
   8122e:	4b10      	ldr	r3, [pc, #64]	; (81270 <udd_sleep_mode+0x9c>)
   81230:	789b      	ldrb	r3, [r3, #2]
   81232:	2bff      	cmp	r3, #255	; 0xff
   81234:	d0f6      	beq.n	81224 <udd_sleep_mode+0x50>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81236:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   8123a:	fab3 f383 	clz	r3, r3
   8123e:	095b      	lsrs	r3, r3, #5
   81240:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81242:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81244:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81248:	2200      	movs	r2, #0
   8124a:	4b0a      	ldr	r3, [pc, #40]	; (81274 <udd_sleep_mode+0xa0>)
   8124c:	701a      	strb	r2, [r3, #0]
	return flags;
   8124e:	9801      	ldr	r0, [sp, #4]
	++sleepmgr_locks[mode];
   81250:	4a07      	ldr	r2, [pc, #28]	; (81270 <udd_sleep_mode+0x9c>)
   81252:	7893      	ldrb	r3, [r2, #2]
   81254:	3301      	adds	r3, #1
   81256:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
   81258:	2800      	cmp	r0, #0
   8125a:	d0c1      	beq.n	811e0 <udd_sleep_mode+0xc>
		cpu_irq_enable();
   8125c:	2201      	movs	r2, #1
   8125e:	4b05      	ldr	r3, [pc, #20]	; (81274 <udd_sleep_mode+0xa0>)
   81260:	701a      	strb	r2, [r3, #0]
   81262:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81266:	b662      	cpsie	i
   81268:	e7ba      	b.n	811e0 <udd_sleep_mode+0xc>
   8126a:	bf00      	nop
   8126c:	20070d05 	.word	0x20070d05
   81270:	20070e0c 	.word	0x20070e0c
   81274:	200701d8 	.word	0x200701d8

00081278 <udd_enable>:
{
   81278:	b510      	push	{r4, lr}
   8127a:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   8127c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81280:	fab3 f383 	clz	r3, r3
   81284:	095b      	lsrs	r3, r3, #5
   81286:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
   81288:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   8128a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8128e:	2200      	movs	r2, #0
   81290:	4b54      	ldr	r3, [pc, #336]	; (813e4 <udd_enable+0x16c>)
   81292:	701a      	strb	r2, [r3, #0]
	return flags;
   81294:	9c00      	ldr	r4, [sp, #0]
	pmc_enable_periph_clk(ID_UOTGHS);
   81296:	2028      	movs	r0, #40	; 0x28
   81298:	4b53      	ldr	r3, [pc, #332]	; (813e8 <udd_enable+0x170>)
   8129a:	4798      	blx	r3
	sysclk_enable_usb();
   8129c:	4b53      	ldr	r3, [pc, #332]	; (813ec <udd_enable+0x174>)
   8129e:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   812a0:	4b53      	ldr	r3, [pc, #332]	; (813f0 <udd_enable+0x178>)
   812a2:	2250      	movs	r2, #80	; 0x50
   812a4:	f883 2328 	strb.w	r2, [r3, #808]	; 0x328
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   812a8:	f44f 7280 	mov.w	r2, #256	; 0x100
   812ac:	605a      	str	r2, [r3, #4]
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
   812ae:	f44f 2080 	mov.w	r0, #262144	; 0x40000
   812b2:	4b50      	ldr	r3, [pc, #320]	; (813f4 <udd_enable+0x17c>)
   812b4:	4798      	blx	r3
	otg_disable_id_pin();
   812b6:	4b50      	ldr	r3, [pc, #320]	; (813f8 <udd_enable+0x180>)
   812b8:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   812bc:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
   812c0:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_force_device_mode();
   812c4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   812c8:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
   812cc:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
   812d0:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   812d4:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
   812d8:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_enable_pad();
   812dc:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   812e0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
   812e4:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_enable();
   812e8:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   812ec:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
   812f0:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	udd_low_speed_disable();
   812f4:	681a      	ldr	r2, [r3, #0]
   812f6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
   812fa:	601a      	str	r2, [r3, #0]
	udd_high_speed_disable();
   812fc:	681a      	ldr	r2, [r3, #0]
   812fe:	f442 6240 	orr.w	r2, r2, #3072	; 0xc00
   81302:	601a      	str	r2, [r3, #0]
	otg_unfreeze_clock();
   81304:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81308:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   8130c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	while (!Is_otg_clock_usable());
   81310:	461a      	mov	r2, r3
   81312:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
   81316:	f413 4f80 	tst.w	r3, #16384	; 0x4000
   8131a:	d0fa      	beq.n	81312 <udd_enable+0x9a>
		udd_ep_job[i].busy = false;
   8131c:	4b37      	ldr	r3, [pc, #220]	; (813fc <udd_enable+0x184>)
   8131e:	7d1a      	ldrb	r2, [r3, #20]
		udd_ep_job[i].stall_requested = false;
   81320:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   81324:	f36f 0282 	bfc	r2, #2, #1
   81328:	751a      	strb	r2, [r3, #20]
		udd_ep_job[i].busy = false;
   8132a:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
		udd_ep_job[i].stall_requested = false;
   8132e:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   81332:	f36f 0282 	bfc	r2, #2, #1
   81336:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
		udd_ep_job[i].busy = false;
   8133a:	f893 2044 	ldrb.w	r2, [r3, #68]	; 0x44
		udd_ep_job[i].stall_requested = false;
   8133e:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   81342:	f36f 0282 	bfc	r2, #2, #1
   81346:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
	otg_ack_vbus_transition();
   8134a:	4b2b      	ldr	r3, [pc, #172]	; (813f8 <udd_enable+0x180>)
   8134c:	2202      	movs	r2, #2
   8134e:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
	if (Is_otg_vbus_high()) {
   81352:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   81356:	f413 6f00 	tst.w	r3, #2048	; 0x800
		otg_raise_vbus_transition();
   8135a:	bf1c      	itt	ne
   8135c:	4b26      	ldrne	r3, [pc, #152]	; (813f8 <udd_enable+0x180>)
   8135e:	f8c3 280c 	strne.w	r2, [r3, #2060]	; 0x80c
	otg_enable_vbus_interrupt();
   81362:	4b25      	ldr	r3, [pc, #148]	; (813f8 <udd_enable+0x180>)
   81364:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81368:	f042 0202 	orr.w	r2, r2, #2
   8136c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_freeze_clock();
   81370:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81374:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   81378:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	if (!udd_b_sleep_initialized) {
   8137c:	4b20      	ldr	r3, [pc, #128]	; (81400 <udd_enable+0x188>)
   8137e:	781b      	ldrb	r3, [r3, #0]
   81380:	bb1b      	cbnz	r3, 813ca <udd_enable+0x152>
		udd_b_sleep_initialized = true;
   81382:	2201      	movs	r2, #1
   81384:	4b1e      	ldr	r3, [pc, #120]	; (81400 <udd_enable+0x188>)
   81386:	701a      	strb	r2, [r3, #0]
		udd_b_idle = false;
   81388:	2200      	movs	r2, #0
   8138a:	4b1e      	ldr	r3, [pc, #120]	; (81404 <udd_enable+0x18c>)
   8138c:	701a      	strb	r2, [r3, #0]
	if(sleepmgr_locks[mode] >= 0xff) {
   8138e:	4b1e      	ldr	r3, [pc, #120]	; (81408 <udd_enable+0x190>)
   81390:	78db      	ldrb	r3, [r3, #3]
   81392:	2bff      	cmp	r3, #255	; 0xff
   81394:	d018      	beq.n	813c8 <udd_enable+0x150>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81396:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   8139a:	fab3 f383 	clz	r3, r3
   8139e:	095b      	lsrs	r3, r3, #5
   813a0:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   813a2:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   813a4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   813a8:	2200      	movs	r2, #0
   813aa:	4b0e      	ldr	r3, [pc, #56]	; (813e4 <udd_enable+0x16c>)
   813ac:	701a      	strb	r2, [r3, #0]
	return flags;
   813ae:	9901      	ldr	r1, [sp, #4]
	++sleepmgr_locks[mode];
   813b0:	4a15      	ldr	r2, [pc, #84]	; (81408 <udd_enable+0x190>)
   813b2:	78d3      	ldrb	r3, [r2, #3]
   813b4:	3301      	adds	r3, #1
   813b6:	70d3      	strb	r3, [r2, #3]
	if (cpu_irq_is_enabled_flags(flags))
   813b8:	b151      	cbz	r1, 813d0 <udd_enable+0x158>
		cpu_irq_enable();
   813ba:	2201      	movs	r2, #1
   813bc:	4b09      	ldr	r3, [pc, #36]	; (813e4 <udd_enable+0x16c>)
   813be:	701a      	strb	r2, [r3, #0]
   813c0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   813c4:	b662      	cpsie	i
   813c6:	e003      	b.n	813d0 <udd_enable+0x158>
   813c8:	e7fe      	b.n	813c8 <udd_enable+0x150>
		udd_sleep_mode(false); // Enter idle mode
   813ca:	2000      	movs	r0, #0
   813cc:	4b0f      	ldr	r3, [pc, #60]	; (8140c <udd_enable+0x194>)
   813ce:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
   813d0:	b12c      	cbz	r4, 813de <udd_enable+0x166>
		cpu_irq_enable();
   813d2:	2201      	movs	r2, #1
   813d4:	4b03      	ldr	r3, [pc, #12]	; (813e4 <udd_enable+0x16c>)
   813d6:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   813d8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   813dc:	b662      	cpsie	i
}
   813de:	b002      	add	sp, #8
   813e0:	bd10      	pop	{r4, pc}
   813e2:	bf00      	nop
   813e4:	200701d8 	.word	0x200701d8
   813e8:	00082521 	.word	0x00082521
   813ec:	00082239 	.word	0x00082239
   813f0:	e000e100 	.word	0xe000e100
   813f4:	00082561 	.word	0x00082561
   813f8:	400ac000 	.word	0x400ac000
   813fc:	20070d10 	.word	0x20070d10
   81400:	20070d06 	.word	0x20070d06
   81404:	20070d05 	.word	0x20070d05
   81408:	20070e0c 	.word	0x20070e0c
   8140c:	000811d5 	.word	0x000811d5

00081410 <udd_attach>:
{
   81410:	b530      	push	{r4, r5, lr}
   81412:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81414:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81418:	fab3 f383 	clz	r3, r3
   8141c:	095b      	lsrs	r3, r3, #5
   8141e:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81420:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81422:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81426:	2200      	movs	r2, #0
   81428:	4b19      	ldr	r3, [pc, #100]	; (81490 <udd_attach+0x80>)
   8142a:	701a      	strb	r2, [r3, #0]
	return flags;
   8142c:	9c01      	ldr	r4, [sp, #4]
	udd_sleep_mode(true);
   8142e:	2001      	movs	r0, #1
   81430:	4b18      	ldr	r3, [pc, #96]	; (81494 <udd_attach+0x84>)
   81432:	4798      	blx	r3
	otg_unfreeze_clock();
   81434:	4a18      	ldr	r2, [pc, #96]	; (81498 <udd_attach+0x88>)
   81436:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
   8143a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
   8143e:	f8c2 3800 	str.w	r3, [r2, #2048]	; 0x800
	while (!Is_otg_clock_usable());
   81442:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
   81446:	f413 4f80 	tst.w	r3, #16384	; 0x4000
   8144a:	d0fa      	beq.n	81442 <udd_attach+0x32>
	udd_attach_device();
   8144c:	4b12      	ldr	r3, [pc, #72]	; (81498 <udd_attach+0x88>)
   8144e:	681a      	ldr	r2, [r3, #0]
   81450:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   81454:	601a      	str	r2, [r3, #0]
	udd_enable_reset_interrupt();
   81456:	2508      	movs	r5, #8
   81458:	619d      	str	r5, [r3, #24]
	udd_enable_suspend_interrupt();
   8145a:	2101      	movs	r1, #1
   8145c:	6199      	str	r1, [r3, #24]
	udd_enable_wake_up_interrupt();
   8145e:	2210      	movs	r2, #16
   81460:	619a      	str	r2, [r3, #24]
	udd_enable_sof_interrupt();
   81462:	2004      	movs	r0, #4
   81464:	6198      	str	r0, [r3, #24]
	udd_ack_reset();
   81466:	609d      	str	r5, [r3, #8]
	udd_ack_sof();
   81468:	6098      	str	r0, [r3, #8]
	udd_ack_msof();
   8146a:	2002      	movs	r0, #2
   8146c:	6098      	str	r0, [r3, #8]
	udd_raise_suspend();
   8146e:	60d9      	str	r1, [r3, #12]
	udd_ack_wake_up();
   81470:	609a      	str	r2, [r3, #8]
	otg_freeze_clock();
   81472:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81476:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   8147a:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	if (cpu_irq_is_enabled_flags(flags))
   8147e:	b124      	cbz	r4, 8148a <udd_attach+0x7a>
		cpu_irq_enable();
   81480:	4b03      	ldr	r3, [pc, #12]	; (81490 <udd_attach+0x80>)
   81482:	7019      	strb	r1, [r3, #0]
   81484:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81488:	b662      	cpsie	i
}
   8148a:	b003      	add	sp, #12
   8148c:	bd30      	pop	{r4, r5, pc}
   8148e:	bf00      	nop
   81490:	200701d8 	.word	0x200701d8
   81494:	000811d5 	.word	0x000811d5
   81498:	400ac000 	.word	0x400ac000

0008149c <udd_detach>:
{
   8149c:	b508      	push	{r3, lr}
	otg_unfreeze_clock();
   8149e:	4b0a      	ldr	r3, [pc, #40]	; (814c8 <udd_detach+0x2c>)
   814a0:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   814a4:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   814a8:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	udd_detach_device();
   814ac:	681a      	ldr	r2, [r3, #0]
   814ae:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   814b2:	601a      	str	r2, [r3, #0]
	otg_freeze_clock();
   814b4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   814b8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   814bc:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	udd_sleep_mode(false);
   814c0:	2000      	movs	r0, #0
   814c2:	4b02      	ldr	r3, [pc, #8]	; (814cc <udd_detach+0x30>)
   814c4:	4798      	blx	r3
   814c6:	bd08      	pop	{r3, pc}
   814c8:	400ac000 	.word	0x400ac000
   814cc:	000811d5 	.word	0x000811d5

000814d0 <UOTGHS_Handler>:
{
   814d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   814d4:	b085      	sub	sp, #20
	if (!pmc_is_wakeup_clocks_restored() && !Is_udd_suspend()) {
   814d6:	4b9a      	ldr	r3, [pc, #616]	; (81740 <UOTGHS_Handler+0x270>)
   814d8:	4798      	blx	r3
   814da:	b920      	cbnz	r0, 814e6 <UOTGHS_Handler+0x16>
   814dc:	4b99      	ldr	r3, [pc, #612]	; (81744 <UOTGHS_Handler+0x274>)
   814de:	685b      	ldr	r3, [r3, #4]
   814e0:	f013 0f01 	tst.w	r3, #1
   814e4:	d00f      	beq.n	81506 <UOTGHS_Handler+0x36>
	if (Is_udd_sof()) {
   814e6:	4b97      	ldr	r3, [pc, #604]	; (81744 <UOTGHS_Handler+0x274>)
   814e8:	685b      	ldr	r3, [r3, #4]
   814ea:	f013 0f04 	tst.w	r3, #4
   814ee:	d014      	beq.n	8151a <UOTGHS_Handler+0x4a>
		udd_ack_sof();
   814f0:	4b94      	ldr	r3, [pc, #592]	; (81744 <UOTGHS_Handler+0x274>)
   814f2:	2204      	movs	r2, #4
   814f4:	609a      	str	r2, [r3, #8]
		if (Is_udd_full_speed_mode()) {
   814f6:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   814fa:	f413 5f40 	tst.w	r3, #12288	; 0x3000
   814fe:	d009      	beq.n	81514 <UOTGHS_Handler+0x44>
}
   81500:	b005      	add	sp, #20
   81502:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __ASM volatile ("cpsid i" : : : "memory");
   81506:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81508:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
   8150c:	2200      	movs	r2, #0
   8150e:	4b8e      	ldr	r3, [pc, #568]	; (81748 <UOTGHS_Handler+0x278>)
   81510:	701a      	strb	r2, [r3, #0]
		return;
   81512:	e7f5      	b.n	81500 <UOTGHS_Handler+0x30>
			udc_sof_notify();
   81514:	4b8d      	ldr	r3, [pc, #564]	; (8174c <UOTGHS_Handler+0x27c>)
   81516:	4798      	blx	r3
   81518:	e7f2      	b.n	81500 <UOTGHS_Handler+0x30>
	if (Is_udd_msof()) {
   8151a:	4b8a      	ldr	r3, [pc, #552]	; (81744 <UOTGHS_Handler+0x274>)
   8151c:	685b      	ldr	r3, [r3, #4]
   8151e:	f013 0f02 	tst.w	r3, #2
   81522:	d133      	bne.n	8158c <UOTGHS_Handler+0xbc>
	if (!Is_udd_endpoint_interrupt(0)) {
   81524:	4b87      	ldr	r3, [pc, #540]	; (81744 <UOTGHS_Handler+0x274>)
   81526:	685b      	ldr	r3, [r3, #4]
   81528:	f413 5f80 	tst.w	r3, #4096	; 0x1000
   8152c:	d026      	beq.n	8157c <UOTGHS_Handler+0xac>
	udd_disable_nak_in_interrupt(0);
   8152e:	4b88      	ldr	r3, [pc, #544]	; (81750 <UOTGHS_Handler+0x280>)
   81530:	2210      	movs	r2, #16
   81532:	601a      	str	r2, [r3, #0]
	udd_disable_nak_out_interrupt(0);
   81534:	2208      	movs	r2, #8
   81536:	601a      	str	r2, [r3, #0]
	if (Is_udd_setup_received(0)) {
   81538:	3bf0      	subs	r3, #240	; 0xf0
   8153a:	681b      	ldr	r3, [r3, #0]
   8153c:	f013 0f04 	tst.w	r3, #4
   81540:	d12a      	bne.n	81598 <UOTGHS_Handler+0xc8>
	if (Is_udd_in_send(0) && Is_udd_in_send_interrupt_enabled(0)) {
   81542:	4b84      	ldr	r3, [pc, #528]	; (81754 <UOTGHS_Handler+0x284>)
   81544:	681b      	ldr	r3, [r3, #0]
   81546:	f013 0f01 	tst.w	r3, #1
   8154a:	d005      	beq.n	81558 <UOTGHS_Handler+0x88>
   8154c:	4b82      	ldr	r3, [pc, #520]	; (81758 <UOTGHS_Handler+0x288>)
   8154e:	681b      	ldr	r3, [r3, #0]
   81550:	f013 0f01 	tst.w	r3, #1
   81554:	f040 8085 	bne.w	81662 <UOTGHS_Handler+0x192>
	if (Is_udd_out_received(0)) {
   81558:	4b7e      	ldr	r3, [pc, #504]	; (81754 <UOTGHS_Handler+0x284>)
   8155a:	681b      	ldr	r3, [r3, #0]
   8155c:	f013 0f02 	tst.w	r3, #2
   81560:	f040 8082 	bne.w	81668 <UOTGHS_Handler+0x198>
	if (Is_udd_nak_out(0)) {
   81564:	4b7b      	ldr	r3, [pc, #492]	; (81754 <UOTGHS_Handler+0x284>)
   81566:	681b      	ldr	r3, [r3, #0]
   81568:	f013 0f08 	tst.w	r3, #8
   8156c:	f040 8130 	bne.w	817d0 <UOTGHS_Handler+0x300>
	if (Is_udd_nak_in(0)) {
   81570:	4b78      	ldr	r3, [pc, #480]	; (81754 <UOTGHS_Handler+0x284>)
   81572:	681b      	ldr	r3, [r3, #0]
   81574:	f013 0f10 	tst.w	r3, #16
   81578:	f040 813d 	bne.w	817f6 <UOTGHS_Handler+0x326>
	for (i = 0; i < nb_data; i++) {
   8157c:	4e77      	ldr	r6, [pc, #476]	; (8175c <UOTGHS_Handler+0x28c>)
   8157e:	2301      	movs	r3, #1
		// Get job corresponding at endpoint
		ptr_job = &udd_ep_job[ep - 1];

#ifdef UDD_EP_DMA_SUPPORTED
		// Check DMA event
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   81580:	4a70      	ldr	r2, [pc, #448]	; (81744 <UOTGHS_Handler+0x274>)
   81582:	f04f 7e00 	mov.w	lr, #33554432	; 0x2000000
				return true;
			}
		}
#endif // UDD_EP_FIFO_SUPPORTED
		// Check empty bank interrupt event
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   81586:	f44f 5c80 	mov.w	ip, #4096	; 0x1000
   8158a:	e17f      	b.n	8188c <UOTGHS_Handler+0x3bc>
		udd_ack_msof();
   8158c:	2202      	movs	r2, #2
   8158e:	4b6d      	ldr	r3, [pc, #436]	; (81744 <UOTGHS_Handler+0x274>)
   81590:	609a      	str	r2, [r3, #8]
		udc_sof_notify();
   81592:	4b6e      	ldr	r3, [pc, #440]	; (8174c <UOTGHS_Handler+0x27c>)
   81594:	4798      	blx	r3
		goto udd_interrupt_sof_end;
   81596:	e7b3      	b.n	81500 <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
   81598:	4b71      	ldr	r3, [pc, #452]	; (81760 <UOTGHS_Handler+0x290>)
   8159a:	781b      	ldrb	r3, [r3, #0]
   8159c:	2b00      	cmp	r3, #0
   8159e:	d141      	bne.n	81624 <UOTGHS_Handler+0x154>
	if (8 != udd_byte_count(0)) {
   815a0:	4b6c      	ldr	r3, [pc, #432]	; (81754 <UOTGHS_Handler+0x284>)
   815a2:	681b      	ldr	r3, [r3, #0]
   815a4:	f3c3 530a 	ubfx	r3, r3, #20, #11
   815a8:	2b08      	cmp	r3, #8
   815aa:	d140      	bne.n	8162e <UOTGHS_Handler+0x15e>
   815ac:	4a6d      	ldr	r2, [pc, #436]	; (81764 <UOTGHS_Handler+0x294>)
   815ae:	4b6e      	ldr	r3, [pc, #440]	; (81768 <UOTGHS_Handler+0x298>)
	for (i = 0; i < 8; i++) {
   815b0:	486e      	ldr	r0, [pc, #440]	; (8176c <UOTGHS_Handler+0x29c>)
		((uint8_t*) &udd_g_ctrlreq.req)[i] = *ptr++;
   815b2:	f813 1b01 	ldrb.w	r1, [r3], #1
   815b6:	f802 1f01 	strb.w	r1, [r2, #1]!
	for (i = 0; i < 8; i++) {
   815ba:	4283      	cmp	r3, r0
   815bc:	d1f9      	bne.n	815b2 <UOTGHS_Handler+0xe2>
	if (udc_process_setup() == false) {
   815be:	4b6c      	ldr	r3, [pc, #432]	; (81770 <UOTGHS_Handler+0x2a0>)
   815c0:	4798      	blx	r3
   815c2:	2800      	cmp	r0, #0
   815c4:	d039      	beq.n	8163a <UOTGHS_Handler+0x16a>
	udd_ack_setup_received(0);
   815c6:	2204      	movs	r2, #4
   815c8:	4b6a      	ldr	r3, [pc, #424]	; (81774 <UOTGHS_Handler+0x2a4>)
   815ca:	601a      	str	r2, [r3, #0]
	if (Udd_setup_is_in()) {
   815cc:	4b6a      	ldr	r3, [pc, #424]	; (81778 <UOTGHS_Handler+0x2a8>)
   815ce:	f993 3000 	ldrsb.w	r3, [r3]
   815d2:	2b00      	cmp	r3, #0
   815d4:	db37      	blt.n	81646 <UOTGHS_Handler+0x176>
		if (0 == udd_g_ctrlreq.req.wLength) {
   815d6:	4b68      	ldr	r3, [pc, #416]	; (81778 <UOTGHS_Handler+0x2a8>)
   815d8:	88db      	ldrh	r3, [r3, #6]
   815da:	2b00      	cmp	r3, #0
   815dc:	d03e      	beq.n	8165c <UOTGHS_Handler+0x18c>
		udd_ctrl_prev_payload_buf_cnt = 0;
   815de:	2200      	movs	r2, #0
   815e0:	4b66      	ldr	r3, [pc, #408]	; (8177c <UOTGHS_Handler+0x2ac>)
   815e2:	801a      	strh	r2, [r3, #0]
		udd_ctrl_payload_buf_cnt = 0;
   815e4:	4b66      	ldr	r3, [pc, #408]	; (81780 <UOTGHS_Handler+0x2b0>)
   815e6:	801a      	strh	r2, [r3, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
   815e8:	2101      	movs	r1, #1
   815ea:	4b5d      	ldr	r3, [pc, #372]	; (81760 <UOTGHS_Handler+0x290>)
   815ec:	7019      	strb	r1, [r3, #0]
		udd_ack_nak_in(0);
   815ee:	2110      	movs	r1, #16
   815f0:	4b60      	ldr	r3, [pc, #384]	; (81774 <UOTGHS_Handler+0x2a4>)
   815f2:	6019      	str	r1, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   815f4:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   815f8:	fab3 f383 	clz	r3, r3
   815fc:	095b      	lsrs	r3, r3, #5
   815fe:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81600:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81602:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81606:	4b50      	ldr	r3, [pc, #320]	; (81748 <UOTGHS_Handler+0x278>)
   81608:	701a      	strb	r2, [r3, #0]
	return flags;
   8160a:	9b01      	ldr	r3, [sp, #4]
		udd_enable_nak_in_interrupt(0);
   8160c:	4a5d      	ldr	r2, [pc, #372]	; (81784 <UOTGHS_Handler+0x2b4>)
   8160e:	6011      	str	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   81610:	2b00      	cmp	r3, #0
   81612:	f43f af75 	beq.w	81500 <UOTGHS_Handler+0x30>
		cpu_irq_enable();
   81616:	2201      	movs	r2, #1
   81618:	4b4b      	ldr	r3, [pc, #300]	; (81748 <UOTGHS_Handler+0x278>)
   8161a:	701a      	strb	r2, [r3, #0]
   8161c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81620:	b662      	cpsie	i
   81622:	e76d      	b.n	81500 <UOTGHS_Handler+0x30>
		udd_ctrl_endofrequest();
   81624:	4b58      	ldr	r3, [pc, #352]	; (81788 <UOTGHS_Handler+0x2b8>)
   81626:	4798      	blx	r3
		udd_ctrl_init();
   81628:	4b58      	ldr	r3, [pc, #352]	; (8178c <UOTGHS_Handler+0x2bc>)
   8162a:	4798      	blx	r3
   8162c:	e7b8      	b.n	815a0 <UOTGHS_Handler+0xd0>
		udd_ctrl_stall_data();
   8162e:	4b58      	ldr	r3, [pc, #352]	; (81790 <UOTGHS_Handler+0x2c0>)
   81630:	4798      	blx	r3
		udd_ack_setup_received(0);
   81632:	2204      	movs	r2, #4
   81634:	4b4f      	ldr	r3, [pc, #316]	; (81774 <UOTGHS_Handler+0x2a4>)
   81636:	601a      	str	r2, [r3, #0]
   81638:	e762      	b.n	81500 <UOTGHS_Handler+0x30>
		udd_ctrl_stall_data();
   8163a:	4b55      	ldr	r3, [pc, #340]	; (81790 <UOTGHS_Handler+0x2c0>)
   8163c:	4798      	blx	r3
		udd_ack_setup_received(0);
   8163e:	2204      	movs	r2, #4
   81640:	4b4c      	ldr	r3, [pc, #304]	; (81774 <UOTGHS_Handler+0x2a4>)
   81642:	601a      	str	r2, [r3, #0]
   81644:	e75c      	b.n	81500 <UOTGHS_Handler+0x30>
		udd_ctrl_prev_payload_buf_cnt = 0;
   81646:	2300      	movs	r3, #0
   81648:	4a4c      	ldr	r2, [pc, #304]	; (8177c <UOTGHS_Handler+0x2ac>)
   8164a:	8013      	strh	r3, [r2, #0]
		udd_ctrl_payload_buf_cnt = 0;
   8164c:	4a4c      	ldr	r2, [pc, #304]	; (81780 <UOTGHS_Handler+0x2b0>)
   8164e:	8013      	strh	r3, [r2, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
   81650:	2202      	movs	r2, #2
   81652:	4b43      	ldr	r3, [pc, #268]	; (81760 <UOTGHS_Handler+0x290>)
   81654:	701a      	strb	r2, [r3, #0]
		udd_ctrl_in_sent(); // Send first data transfer
   81656:	4b4f      	ldr	r3, [pc, #316]	; (81794 <UOTGHS_Handler+0x2c4>)
   81658:	4798      	blx	r3
   8165a:	e751      	b.n	81500 <UOTGHS_Handler+0x30>
			udd_ctrl_send_zlp_in();
   8165c:	4b4e      	ldr	r3, [pc, #312]	; (81798 <UOTGHS_Handler+0x2c8>)
   8165e:	4798      	blx	r3
   81660:	e74e      	b.n	81500 <UOTGHS_Handler+0x30>
		udd_ctrl_in_sent();
   81662:	4b4c      	ldr	r3, [pc, #304]	; (81794 <UOTGHS_Handler+0x2c4>)
   81664:	4798      	blx	r3
   81666:	e74b      	b.n	81500 <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_DATA_OUT != udd_ep_control_state) {
   81668:	4b3d      	ldr	r3, [pc, #244]	; (81760 <UOTGHS_Handler+0x290>)
   8166a:	781b      	ldrb	r3, [r3, #0]
   8166c:	2b01      	cmp	r3, #1
   8166e:	d00b      	beq.n	81688 <UOTGHS_Handler+0x1b8>
		if ((UDD_EPCTRL_DATA_IN == udd_ep_control_state)
   81670:	2b02      	cmp	r3, #2
   81672:	d004      	beq.n	8167e <UOTGHS_Handler+0x1ae>
				|| (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP ==
   81674:	2b04      	cmp	r3, #4
   81676:	d002      	beq.n	8167e <UOTGHS_Handler+0x1ae>
			udd_ctrl_stall_data();
   81678:	4b45      	ldr	r3, [pc, #276]	; (81790 <UOTGHS_Handler+0x2c0>)
   8167a:	4798      	blx	r3
   8167c:	e001      	b.n	81682 <UOTGHS_Handler+0x1b2>
			udd_ctrl_endofrequest();
   8167e:	4b42      	ldr	r3, [pc, #264]	; (81788 <UOTGHS_Handler+0x2b8>)
   81680:	4798      	blx	r3
		udd_ctrl_init();
   81682:	4b42      	ldr	r3, [pc, #264]	; (8178c <UOTGHS_Handler+0x2bc>)
   81684:	4798      	blx	r3
   81686:	e73b      	b.n	81500 <UOTGHS_Handler+0x30>
	nb_data = udd_byte_count(0);
   81688:	4b32      	ldr	r3, [pc, #200]	; (81754 <UOTGHS_Handler+0x284>)
   8168a:	6818      	ldr	r0, [r3, #0]
   8168c:	f3c0 500a 	ubfx	r0, r0, #20, #11
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   81690:	4b39      	ldr	r3, [pc, #228]	; (81778 <UOTGHS_Handler+0x2a8>)
   81692:	899b      	ldrh	r3, [r3, #12]
   81694:	4a3a      	ldr	r2, [pc, #232]	; (81780 <UOTGHS_Handler+0x2b0>)
   81696:	8814      	ldrh	r4, [r2, #0]
   81698:	1822      	adds	r2, r4, r0
   8169a:	4293      	cmp	r3, r2
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   8169c:	bfbc      	itt	lt
   8169e:	1b1b      	sublt	r3, r3, r4
   816a0:	b298      	uxthlt	r0, r3
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   816a2:	4b35      	ldr	r3, [pc, #212]	; (81778 <UOTGHS_Handler+0x2a8>)
   816a4:	689a      	ldr	r2, [r3, #8]
	for (i = 0; i < nb_data; i++) {
   816a6:	b178      	cbz	r0, 816c8 <UOTGHS_Handler+0x1f8>
   816a8:	1e63      	subs	r3, r4, #1
   816aa:	441a      	add	r2, r3
   816ac:	4b2e      	ldr	r3, [pc, #184]	; (81768 <UOTGHS_Handler+0x298>)
		*ptr_dest++ = *ptr_src++;
   816ae:	f813 1b01 	ldrb.w	r1, [r3], #1
   816b2:	f802 1f01 	strb.w	r1, [r2, #1]!
	for (i = 0; i < nb_data; i++) {
   816b6:	b2d9      	uxtb	r1, r3
   816b8:	4281      	cmp	r1, r0
   816ba:	d3f8      	bcc.n	816ae <UOTGHS_Handler+0x1de>
	udd_ctrl_payload_buf_cnt += nb_data;
   816bc:	4404      	add	r4, r0
   816be:	b2a4      	uxth	r4, r4
   816c0:	4b2f      	ldr	r3, [pc, #188]	; (81780 <UOTGHS_Handler+0x2b0>)
   816c2:	801c      	strh	r4, [r3, #0]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   816c4:	2840      	cmp	r0, #64	; 0x40
   816c6:	d00c      	beq.n	816e2 <UOTGHS_Handler+0x212>
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_buf_cnt;
   816c8:	4b2b      	ldr	r3, [pc, #172]	; (81778 <UOTGHS_Handler+0x2a8>)
   816ca:	819c      	strh	r4, [r3, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
   816cc:	695b      	ldr	r3, [r3, #20]
   816ce:	b113      	cbz	r3, 816d6 <UOTGHS_Handler+0x206>
			if (!udd_g_ctrlreq.over_under_run()) {
   816d0:	4798      	blx	r3
   816d2:	2800      	cmp	r0, #0
   816d4:	d02e      	beq.n	81734 <UOTGHS_Handler+0x264>
		udd_ack_out_received(0);
   816d6:	2202      	movs	r2, #2
   816d8:	4b26      	ldr	r3, [pc, #152]	; (81774 <UOTGHS_Handler+0x2a4>)
   816da:	601a      	str	r2, [r3, #0]
		udd_ctrl_send_zlp_in();
   816dc:	4b2e      	ldr	r3, [pc, #184]	; (81798 <UOTGHS_Handler+0x2c8>)
   816de:	4798      	blx	r3
   816e0:	e70e      	b.n	81500 <UOTGHS_Handler+0x30>
			|| (udd_g_ctrlreq.req.wLength <=
   816e2:	4b25      	ldr	r3, [pc, #148]	; (81778 <UOTGHS_Handler+0x2a8>)
   816e4:	88da      	ldrh	r2, [r3, #6]
					(udd_ctrl_prev_payload_buf_cnt +
   816e6:	4b25      	ldr	r3, [pc, #148]	; (8177c <UOTGHS_Handler+0x2ac>)
   816e8:	881b      	ldrh	r3, [r3, #0]
   816ea:	4423      	add	r3, r4
			|| (udd_g_ctrlreq.req.wLength <=
   816ec:	429a      	cmp	r2, r3
   816ee:	ddeb      	ble.n	816c8 <UOTGHS_Handler+0x1f8>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_buf_cnt) {
   816f0:	4b21      	ldr	r3, [pc, #132]	; (81778 <UOTGHS_Handler+0x2a8>)
   816f2:	899b      	ldrh	r3, [r3, #12]
   816f4:	42a3      	cmp	r3, r4
   816f6:	d051      	beq.n	8179c <UOTGHS_Handler+0x2cc>
	udd_ack_out_received(0);
   816f8:	4b1e      	ldr	r3, [pc, #120]	; (81774 <UOTGHS_Handler+0x2a4>)
   816fa:	2202      	movs	r2, #2
   816fc:	601a      	str	r2, [r3, #0]
	udd_ack_nak_in(0);
   816fe:	2210      	movs	r2, #16
   81700:	601a      	str	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81702:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81706:	fab3 f383 	clz	r3, r3
   8170a:	095b      	lsrs	r3, r3, #5
   8170c:	9302      	str	r3, [sp, #8]
  __ASM volatile ("cpsid i" : : : "memory");
   8170e:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81710:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81714:	2100      	movs	r1, #0
   81716:	4b0c      	ldr	r3, [pc, #48]	; (81748 <UOTGHS_Handler+0x278>)
   81718:	7019      	strb	r1, [r3, #0]
	return flags;
   8171a:	9b02      	ldr	r3, [sp, #8]
	udd_enable_nak_in_interrupt(0);
   8171c:	4919      	ldr	r1, [pc, #100]	; (81784 <UOTGHS_Handler+0x2b4>)
   8171e:	600a      	str	r2, [r1, #0]
	if (cpu_irq_is_enabled_flags(flags))
   81720:	2b00      	cmp	r3, #0
   81722:	f43f aeed 	beq.w	81500 <UOTGHS_Handler+0x30>
		cpu_irq_enable();
   81726:	2201      	movs	r2, #1
   81728:	4b07      	ldr	r3, [pc, #28]	; (81748 <UOTGHS_Handler+0x278>)
   8172a:	701a      	strb	r2, [r3, #0]
   8172c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81730:	b662      	cpsie	i
   81732:	e6e5      	b.n	81500 <UOTGHS_Handler+0x30>
				udd_ctrl_stall_data();
   81734:	4b16      	ldr	r3, [pc, #88]	; (81790 <UOTGHS_Handler+0x2c0>)
   81736:	4798      	blx	r3
				udd_ack_out_received(0);
   81738:	2202      	movs	r2, #2
   8173a:	4b0e      	ldr	r3, [pc, #56]	; (81774 <UOTGHS_Handler+0x2a4>)
   8173c:	601a      	str	r2, [r3, #0]
   8173e:	e6df      	b.n	81500 <UOTGHS_Handler+0x30>
   81740:	00082575 	.word	0x00082575
   81744:	400ac000 	.word	0x400ac000
   81748:	200701d8 	.word	0x200701d8
   8174c:	00080951 	.word	0x00080951
   81750:	400ac220 	.word	0x400ac220
   81754:	400ac130 	.word	0x400ac130
   81758:	400ac1c0 	.word	0x400ac1c0
   8175c:	400ac134 	.word	0x400ac134
   81760:	20070d0c 	.word	0x20070d0c
   81764:	20070e13 	.word	0x20070e13
   81768:	20180000 	.word	0x20180000
   8176c:	20180008 	.word	0x20180008
   81770:	00080991 	.word	0x00080991
   81774:	400ac160 	.word	0x400ac160
   81778:	20070e14 	.word	0x20070e14
   8177c:	20070d0a 	.word	0x20070d0a
   81780:	20070d08 	.word	0x20070d08
   81784:	400ac1f0 	.word	0x400ac1f0
   81788:	00080e69 	.word	0x00080e69
   8178c:	00080da1 	.word	0x00080da1
   81790:	00080dfd 	.word	0x00080dfd
   81794:	00080e79 	.word	0x00080e79
   81798:	00080e15 	.word	0x00080e15
		if (!udd_g_ctrlreq.over_under_run) {
   8179c:	4ba1      	ldr	r3, [pc, #644]	; (81a24 <UOTGHS_Handler+0x554>)
   8179e:	695b      	ldr	r3, [r3, #20]
   817a0:	b153      	cbz	r3, 817b8 <UOTGHS_Handler+0x2e8>
		if (!udd_g_ctrlreq.over_under_run()) {
   817a2:	4798      	blx	r3
   817a4:	b170      	cbz	r0, 817c4 <UOTGHS_Handler+0x2f4>
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   817a6:	49a0      	ldr	r1, [pc, #640]	; (81a28 <UOTGHS_Handler+0x558>)
   817a8:	4aa0      	ldr	r2, [pc, #640]	; (81a2c <UOTGHS_Handler+0x55c>)
   817aa:	880b      	ldrh	r3, [r1, #0]
   817ac:	8810      	ldrh	r0, [r2, #0]
   817ae:	4403      	add	r3, r0
   817b0:	800b      	strh	r3, [r1, #0]
		udd_ctrl_payload_buf_cnt = 0;
   817b2:	2300      	movs	r3, #0
   817b4:	8013      	strh	r3, [r2, #0]
   817b6:	e79f      	b.n	816f8 <UOTGHS_Handler+0x228>
			udd_ctrl_stall_data();
   817b8:	4b9d      	ldr	r3, [pc, #628]	; (81a30 <UOTGHS_Handler+0x560>)
   817ba:	4798      	blx	r3
			udd_ack_out_received(0);
   817bc:	2202      	movs	r2, #2
   817be:	4b9d      	ldr	r3, [pc, #628]	; (81a34 <UOTGHS_Handler+0x564>)
   817c0:	601a      	str	r2, [r3, #0]
   817c2:	e69d      	b.n	81500 <UOTGHS_Handler+0x30>
			udd_ctrl_stall_data();
   817c4:	4b9a      	ldr	r3, [pc, #616]	; (81a30 <UOTGHS_Handler+0x560>)
   817c6:	4798      	blx	r3
			udd_ack_out_received(0);
   817c8:	2202      	movs	r2, #2
   817ca:	4b9a      	ldr	r3, [pc, #616]	; (81a34 <UOTGHS_Handler+0x564>)
   817cc:	601a      	str	r2, [r3, #0]
   817ce:	e697      	b.n	81500 <UOTGHS_Handler+0x30>
		udd_ack_nak_out(0);
   817d0:	2208      	movs	r2, #8
   817d2:	4b98      	ldr	r3, [pc, #608]	; (81a34 <UOTGHS_Handler+0x564>)
   817d4:	601a      	str	r2, [r3, #0]
	if (Is_udd_in_send(0))
   817d6:	3b30      	subs	r3, #48	; 0x30
   817d8:	681b      	ldr	r3, [r3, #0]
   817da:	f013 0f01 	tst.w	r3, #1
   817de:	f47f ae8f 	bne.w	81500 <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   817e2:	4b95      	ldr	r3, [pc, #596]	; (81a38 <UOTGHS_Handler+0x568>)
   817e4:	781b      	ldrb	r3, [r3, #0]
   817e6:	2b03      	cmp	r3, #3
   817e8:	f47f ae8a 	bne.w	81500 <UOTGHS_Handler+0x30>
		udd_enable_stall_handshake(0);
   817ec:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   817f0:	4b92      	ldr	r3, [pc, #584]	; (81a3c <UOTGHS_Handler+0x56c>)
   817f2:	601a      	str	r2, [r3, #0]
   817f4:	e684      	b.n	81500 <UOTGHS_Handler+0x30>
		udd_ack_nak_in(0);
   817f6:	2210      	movs	r2, #16
   817f8:	4b8e      	ldr	r3, [pc, #568]	; (81a34 <UOTGHS_Handler+0x564>)
   817fa:	601a      	str	r2, [r3, #0]
	if (Is_udd_out_received(0))
   817fc:	3b30      	subs	r3, #48	; 0x30
   817fe:	681b      	ldr	r3, [r3, #0]
   81800:	f013 0f02 	tst.w	r3, #2
   81804:	f47f ae7c 	bne.w	81500 <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_DATA_OUT == udd_ep_control_state) {
   81808:	4b8b      	ldr	r3, [pc, #556]	; (81a38 <UOTGHS_Handler+0x568>)
   8180a:	781b      	ldrb	r3, [r3, #0]
   8180c:	2b01      	cmp	r3, #1
   8180e:	d007      	beq.n	81820 <UOTGHS_Handler+0x350>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP == udd_ep_control_state) {
   81810:	2b04      	cmp	r3, #4
   81812:	f47f ae75 	bne.w	81500 <UOTGHS_Handler+0x30>
		udd_enable_stall_handshake(0);
   81816:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   8181a:	4b88      	ldr	r3, [pc, #544]	; (81a3c <UOTGHS_Handler+0x56c>)
   8181c:	601a      	str	r2, [r3, #0]
   8181e:	e66f      	b.n	81500 <UOTGHS_Handler+0x30>
		udd_ctrl_send_zlp_in();
   81820:	4b87      	ldr	r3, [pc, #540]	; (81a40 <UOTGHS_Handler+0x570>)
   81822:	4798      	blx	r3
   81824:	e66c      	b.n	81500 <UOTGHS_Handler+0x30>
			if (udd_endpoint_dma_get_status(ep)
   81826:	4b87      	ldr	r3, [pc, #540]	; (81a44 <UOTGHS_Handler+0x574>)
   81828:	eb03 1300 	add.w	r3, r3, r0, lsl #4
   8182c:	68da      	ldr	r2, [r3, #12]
   8182e:	f012 0f01 	tst.w	r2, #1
   81832:	f47f ae65 	bne.w	81500 <UOTGHS_Handler+0x30>
			udd_disable_endpoint_dma_interrupt(ep);
   81836:	4a84      	ldr	r2, [pc, #528]	; (81a48 <UOTGHS_Handler+0x578>)
   81838:	6151      	str	r1, [r2, #20]
			nb_remaining = (udd_endpoint_dma_get_status(ep) &
   8183a:	68dd      	ldr	r5, [r3, #12]
			if (nb_remaining) {
   8183c:	0c2d      	lsrs	r5, r5, #16
   8183e:	d008      	beq.n	81852 <UOTGHS_Handler+0x382>
				ptr_job->buf_cnt -= nb_remaining;
   81840:	4b82      	ldr	r3, [pc, #520]	; (81a4c <UOTGHS_Handler+0x57c>)
   81842:	0079      	lsls	r1, r7, #1
   81844:	19cc      	adds	r4, r1, r7
   81846:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
   8184a:	68e2      	ldr	r2, [r4, #12]
   8184c:	1b52      	subs	r2, r2, r5
   8184e:	60e2      	str	r2, [r4, #12]
				ptr_job->buf_size = ptr_job->buf_cnt;
   81850:	60a2      	str	r2, [r4, #8]
			udd_ep_trans_done(ep);
   81852:	4b7f      	ldr	r3, [pc, #508]	; (81a50 <UOTGHS_Handler+0x580>)
   81854:	4798      	blx	r3
   81856:	e653      	b.n	81500 <UOTGHS_Handler+0x30>
			dbg_print("bg%x: ", ep);
			if (Is_udd_in_send_interrupt_enabled(ep)
					&& Is_udd_in_send(ep)) {
				dbg_print("I ");
				udd_disable_in_send_interrupt(ep);
   81858:	4b7e      	ldr	r3, [pc, #504]	; (81a54 <UOTGHS_Handler+0x584>)
   8185a:	2201      	movs	r2, #1
   8185c:	f849 2003 	str.w	r2, [r9, r3]
				// One bank is free then send a ZLP
				udd_ack_in_send(ep);
   81860:	4974      	ldr	r1, [pc, #464]	; (81a34 <UOTGHS_Handler+0x564>)
   81862:	f849 2001 	str.w	r2, [r9, r1]
				udd_ack_fifocon(ep);
   81866:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   8186a:	f849 2003 	str.w	r2, [r9, r3]
		ptr_job = &udd_ep_job[ep - 1];
   8186e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
				udd_ep_finish_job(ptr_job, false, ep);
   81872:	4602      	mov	r2, r0
   81874:	2100      	movs	r1, #0
   81876:	4875      	ldr	r0, [pc, #468]	; (81a4c <UOTGHS_Handler+0x57c>)
   81878:	eb00 00c7 	add.w	r0, r0, r7, lsl #3
   8187c:	4b76      	ldr	r3, [pc, #472]	; (81a58 <UOTGHS_Handler+0x588>)
   8187e:	4798      	blx	r3
   81880:	e63e      	b.n	81500 <UOTGHS_Handler+0x30>
   81882:	3301      	adds	r3, #1
   81884:	3604      	adds	r6, #4
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
   81886:	2b04      	cmp	r3, #4
   81888:	f000 80f6 	beq.w	81a78 <UOTGHS_Handler+0x5a8>
   8188c:	b2d8      	uxtb	r0, r3
		ptr_job = &udd_ep_job[ep - 1];
   8188e:	461d      	mov	r5, r3
   81890:	1e5f      	subs	r7, r3, #1
   81892:	46b8      	mov	r8, r7
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   81894:	6914      	ldr	r4, [r2, #16]
   81896:	fa0e f107 	lsl.w	r1, lr, r7
   8189a:	420c      	tst	r4, r1
   8189c:	d002      	beq.n	818a4 <UOTGHS_Handler+0x3d4>
				&& Is_udd_endpoint_dma_interrupt(ep)) {
   8189e:	6854      	ldr	r4, [r2, #4]
   818a0:	4221      	tst	r1, r4
   818a2:	d1c0      	bne.n	81826 <UOTGHS_Handler+0x356>
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   818a4:	6911      	ldr	r1, [r2, #16]
   818a6:	fa0c f505 	lsl.w	r5, ip, r5
   818aa:	4229      	tst	r1, r5
   818ac:	d0e9      	beq.n	81882 <UOTGHS_Handler+0x3b2>
   818ae:	ea4f 0983 	mov.w	r9, r3, lsl #2
   818b2:	f106 0490 	add.w	r4, r6, #144	; 0x90
			if (Is_udd_in_send_interrupt_enabled(ep)
   818b6:	f8d6 1090 	ldr.w	r1, [r6, #144]	; 0x90
   818ba:	f011 0f01 	tst.w	r1, #1
   818be:	d003      	beq.n	818c8 <UOTGHS_Handler+0x3f8>
					&& Is_udd_in_send(ep)) {
   818c0:	6831      	ldr	r1, [r6, #0]
   818c2:	f011 0f01 	tst.w	r1, #1
   818c6:	d1c7      	bne.n	81858 <UOTGHS_Handler+0x388>
				return true;
			}
			if (Is_udd_bank_interrupt_enabled(ep)
   818c8:	6821      	ldr	r1, [r4, #0]
   818ca:	f411 5f80 	tst.w	r1, #4096	; 0x1000
   818ce:	d0d8      	beq.n	81882 <UOTGHS_Handler+0x3b2>
					&& (0 == udd_nb_busy_bank(ep))) {
   818d0:	6831      	ldr	r1, [r6, #0]
   818d2:	f411 5f40 	tst.w	r1, #12288	; 0x3000
   818d6:	d1d4      	bne.n	81882 <UOTGHS_Handler+0x3b2>
				dbg_print("EoT ");
				// End of background transfer on IN endpoint
				udd_disable_bank_interrupt(ep);
   818d8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   818dc:	4b5d      	ldr	r3, [pc, #372]	; (81a54 <UOTGHS_Handler+0x584>)
   818de:	f849 2003 	str.w	r2, [r9, r3]
				udd_disable_endpoint_interrupt(ep);
   818e2:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
   818e6:	615d      	str	r5, [r3, #20]

				Assert(ptr_job->stall_requested);
				// A stall has been requested during backgound transfer
				ptr_job->stall_requested = false;
   818e8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
   818ec:	4b57      	ldr	r3, [pc, #348]	; (81a4c <UOTGHS_Handler+0x57c>)
   818ee:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
   818f2:	f898 2014 	ldrb.w	r2, [r8, #20]
   818f6:	f36f 0282 	bfc	r2, #2, #1
   818fa:	f888 2014 	strb.w	r2, [r8, #20]
				udd_disable_endpoint_bank_autoswitch(ep);
   818fe:	4a57      	ldr	r2, [pc, #348]	; (81a5c <UOTGHS_Handler+0x58c>)
   81900:	f859 3002 	ldr.w	r3, [r9, r2]
   81904:	f423 7300 	bic.w	r3, r3, #512	; 0x200
   81908:	f849 3002 	str.w	r3, [r9, r2]
				udd_enable_stall_handshake(ep);
   8190c:	4b4b      	ldr	r3, [pc, #300]	; (81a3c <UOTGHS_Handler+0x56c>)
   8190e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   81912:	f849 2003 	str.w	r2, [r9, r3]
				udd_reset_data_toggle(ep);
   81916:	f44f 2280 	mov.w	r2, #262144	; 0x40000
   8191a:	f849 2003 	str.w	r2, [r9, r3]
   8191e:	e5ef      	b.n	81500 <UOTGHS_Handler+0x30>
		udd_ack_reset();
   81920:	4c49      	ldr	r4, [pc, #292]	; (81a48 <UOTGHS_Handler+0x578>)
   81922:	2308      	movs	r3, #8
   81924:	60a3      	str	r3, [r4, #8]
		udd_ep_finish_job(&udd_ep_job[i], true, i + 1);
   81926:	4e49      	ldr	r6, [pc, #292]	; (81a4c <UOTGHS_Handler+0x57c>)
   81928:	2201      	movs	r2, #1
   8192a:	4611      	mov	r1, r2
   8192c:	4630      	mov	r0, r6
   8192e:	4d4a      	ldr	r5, [pc, #296]	; (81a58 <UOTGHS_Handler+0x588>)
   81930:	47a8      	blx	r5
   81932:	2202      	movs	r2, #2
   81934:	2101      	movs	r1, #1
   81936:	f106 0018 	add.w	r0, r6, #24
   8193a:	47a8      	blx	r5
   8193c:	2203      	movs	r2, #3
   8193e:	2101      	movs	r1, #1
   81940:	f106 0030 	add.w	r0, r6, #48	; 0x30
   81944:	47a8      	blx	r5
		udc_reset();
   81946:	4b46      	ldr	r3, [pc, #280]	; (81a60 <UOTGHS_Handler+0x590>)
   81948:	4798      	blx	r3
	udd_configure_address(0);
   8194a:	6823      	ldr	r3, [r4, #0]
   8194c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   81950:	6023      	str	r3, [r4, #0]
	udd_enable_address();
   81952:	6823      	ldr	r3, [r4, #0]
   81954:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81958:	6023      	str	r3, [r4, #0]
	udd_configure_endpoint(0,
   8195a:	4a40      	ldr	r2, [pc, #256]	; (81a5c <UOTGHS_Handler+0x58c>)
   8195c:	6813      	ldr	r3, [r2, #0]
   8195e:	f423 53cb 	bic.w	r3, r3, #6496	; 0x1960
   81962:	f023 031c 	bic.w	r3, r3, #28
   81966:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   8196a:	6013      	str	r3, [r2, #0]
	udd_allocate_memory(0);
   8196c:	6813      	ldr	r3, [r2, #0]
   8196e:	f043 0302 	orr.w	r3, r3, #2
   81972:	6013      	str	r3, [r2, #0]
	udd_enable_endpoint(0);
   81974:	69e3      	ldr	r3, [r4, #28]
   81976:	f043 0301 	orr.w	r3, r3, #1
   8197a:	61e3      	str	r3, [r4, #28]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   8197c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81980:	fab3 f383 	clz	r3, r3
   81984:	095b      	lsrs	r3, r3, #5
   81986:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   81988:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   8198a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8198e:	2200      	movs	r2, #0
   81990:	4b34      	ldr	r3, [pc, #208]	; (81a64 <UOTGHS_Handler+0x594>)
   81992:	701a      	strb	r2, [r3, #0]
	return flags;
   81994:	9a03      	ldr	r2, [sp, #12]
	udd_enable_setup_received_interrupt(0);
   81996:	4b29      	ldr	r3, [pc, #164]	; (81a3c <UOTGHS_Handler+0x56c>)
   81998:	2104      	movs	r1, #4
   8199a:	6019      	str	r1, [r3, #0]
	udd_enable_out_received_interrupt(0);
   8199c:	2102      	movs	r1, #2
   8199e:	6019      	str	r1, [r3, #0]
	udd_enable_endpoint_interrupt(0);
   819a0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   819a4:	61a3      	str	r3, [r4, #24]
	if (cpu_irq_is_enabled_flags(flags))
   819a6:	b12a      	cbz	r2, 819b4 <UOTGHS_Handler+0x4e4>
		cpu_irq_enable();
   819a8:	2201      	movs	r2, #1
   819aa:	4b2e      	ldr	r3, [pc, #184]	; (81a64 <UOTGHS_Handler+0x594>)
   819ac:	701a      	strb	r2, [r3, #0]
   819ae:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   819b2:	b662      	cpsie	i
		udd_ctrl_init();
   819b4:	4b2c      	ldr	r3, [pc, #176]	; (81a68 <UOTGHS_Handler+0x598>)
   819b6:	4798      	blx	r3
		goto udd_interrupt_end;
   819b8:	e5a2      	b.n	81500 <UOTGHS_Handler+0x30>
		otg_unfreeze_clock();
   819ba:	4b23      	ldr	r3, [pc, #140]	; (81a48 <UOTGHS_Handler+0x578>)
   819bc:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   819c0:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   819c4:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		udd_disable_suspend_interrupt();
   819c8:	2201      	movs	r2, #1
   819ca:	615a      	str	r2, [r3, #20]
		udd_enable_wake_up_interrupt();
   819cc:	2210      	movs	r2, #16
   819ce:	619a      	str	r2, [r3, #24]
		otg_freeze_clock(); // Mandatory to exit of sleep mode after a wakeup event
   819d0:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   819d4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   819d8:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		udd_sleep_mode(false);  // Enter in SUSPEND mode
   819dc:	2000      	movs	r0, #0
   819de:	4b23      	ldr	r3, [pc, #140]	; (81a6c <UOTGHS_Handler+0x59c>)
   819e0:	4798      	blx	r3
		goto udd_interrupt_end;
   819e2:	e58d      	b.n	81500 <UOTGHS_Handler+0x30>
	if (Is_otg_vbus_transition()) {
   819e4:	4b18      	ldr	r3, [pc, #96]	; (81a48 <UOTGHS_Handler+0x578>)
   819e6:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   819ea:	f013 0f02 	tst.w	r3, #2
   819ee:	f43f ad87 	beq.w	81500 <UOTGHS_Handler+0x30>
		otg_unfreeze_clock();
   819f2:	4b15      	ldr	r3, [pc, #84]	; (81a48 <UOTGHS_Handler+0x578>)
   819f4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   819f8:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   819fc:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		otg_ack_vbus_transition();
   81a00:	2202      	movs	r2, #2
   81a02:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
		otg_freeze_clock();
   81a06:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81a0a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   81a0e:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		if (Is_otg_vbus_high()) {
   81a12:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   81a16:	f413 6f00 	tst.w	r3, #2048	; 0x800
			udd_attach();
   81a1a:	bf14      	ite	ne
   81a1c:	4b14      	ldrne	r3, [pc, #80]	; (81a70 <UOTGHS_Handler+0x5a0>)
			udd_detach();
   81a1e:	4b15      	ldreq	r3, [pc, #84]	; (81a74 <UOTGHS_Handler+0x5a4>)
   81a20:	4798      	blx	r3
   81a22:	e56d      	b.n	81500 <UOTGHS_Handler+0x30>
   81a24:	20070e14 	.word	0x20070e14
   81a28:	20070d0a 	.word	0x20070d0a
   81a2c:	20070d08 	.word	0x20070d08
   81a30:	00080dfd 	.word	0x00080dfd
   81a34:	400ac160 	.word	0x400ac160
   81a38:	20070d0c 	.word	0x20070d0c
   81a3c:	400ac1f0 	.word	0x400ac1f0
   81a40:	00080e15 	.word	0x00080e15
   81a44:	400ac300 	.word	0x400ac300
   81a48:	400ac000 	.word	0x400ac000
   81a4c:	20070d10 	.word	0x20070d10
   81a50:	0008102d 	.word	0x0008102d
   81a54:	400ac220 	.word	0x400ac220
   81a58:	00080ff5 	.word	0x00080ff5
   81a5c:	400ac100 	.word	0x400ac100
   81a60:	00080909 	.word	0x00080909
   81a64:	200701d8 	.word	0x200701d8
   81a68:	00080da1 	.word	0x00080da1
   81a6c:	000811d5 	.word	0x000811d5
   81a70:	00081411 	.word	0x00081411
   81a74:	0008149d 	.word	0x0008149d
	if (Is_udd_reset()) {
   81a78:	4b19      	ldr	r3, [pc, #100]	; (81ae0 <UOTGHS_Handler+0x610>)
   81a7a:	685b      	ldr	r3, [r3, #4]
   81a7c:	f013 0f08 	tst.w	r3, #8
   81a80:	f47f af4e 	bne.w	81920 <UOTGHS_Handler+0x450>
	if (Is_udd_suspend_interrupt_enabled() && Is_udd_suspend()) {
   81a84:	4b16      	ldr	r3, [pc, #88]	; (81ae0 <UOTGHS_Handler+0x610>)
   81a86:	691b      	ldr	r3, [r3, #16]
   81a88:	f013 0f01 	tst.w	r3, #1
   81a8c:	d004      	beq.n	81a98 <UOTGHS_Handler+0x5c8>
   81a8e:	4b14      	ldr	r3, [pc, #80]	; (81ae0 <UOTGHS_Handler+0x610>)
   81a90:	685b      	ldr	r3, [r3, #4]
   81a92:	f013 0f01 	tst.w	r3, #1
   81a96:	d190      	bne.n	819ba <UOTGHS_Handler+0x4ea>
	if (Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) {
   81a98:	4b11      	ldr	r3, [pc, #68]	; (81ae0 <UOTGHS_Handler+0x610>)
   81a9a:	691b      	ldr	r3, [r3, #16]
   81a9c:	f013 0f10 	tst.w	r3, #16
   81aa0:	d0a0      	beq.n	819e4 <UOTGHS_Handler+0x514>
   81aa2:	4b0f      	ldr	r3, [pc, #60]	; (81ae0 <UOTGHS_Handler+0x610>)
   81aa4:	685b      	ldr	r3, [r3, #4]
   81aa6:	f013 0f10 	tst.w	r3, #16
   81aaa:	d09b      	beq.n	819e4 <UOTGHS_Handler+0x514>
		otg_unfreeze_clock();
   81aac:	4a0c      	ldr	r2, [pc, #48]	; (81ae0 <UOTGHS_Handler+0x610>)
   81aae:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
   81ab2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
   81ab6:	f8c2 3800 	str.w	r3, [r2, #2048]	; 0x800
		while (!Is_otg_clock_usable()) {
   81aba:	4613      	mov	r3, r2
   81abc:	f8d3 2804 	ldr.w	r2, [r3, #2052]	; 0x804
   81ac0:	f412 4f80 	tst.w	r2, #16384	; 0x4000
   81ac4:	d103      	bne.n	81ace <UOTGHS_Handler+0x5fe>
			if (Is_udd_suspend()) {
   81ac6:	685a      	ldr	r2, [r3, #4]
   81ac8:	f012 0f01 	tst.w	r2, #1
   81acc:	d0f6      	beq.n	81abc <UOTGHS_Handler+0x5ec>
		udd_disable_wake_up_interrupt();
   81ace:	4b04      	ldr	r3, [pc, #16]	; (81ae0 <UOTGHS_Handler+0x610>)
   81ad0:	2210      	movs	r2, #16
   81ad2:	615a      	str	r2, [r3, #20]
		udd_enable_suspend_interrupt();
   81ad4:	2001      	movs	r0, #1
   81ad6:	6198      	str	r0, [r3, #24]
		udd_sleep_mode(true); // Enter in IDLE mode
   81ad8:	4b02      	ldr	r3, [pc, #8]	; (81ae4 <UOTGHS_Handler+0x614>)
   81ada:	4798      	blx	r3
		goto udd_interrupt_end;
   81adc:	e510      	b.n	81500 <UOTGHS_Handler+0x30>
   81ade:	bf00      	nop
   81ae0:	400ac000 	.word	0x400ac000
   81ae4:	000811d5 	.word	0x000811d5

00081ae8 <udd_is_high_speed>:
}
   81ae8:	2000      	movs	r0, #0
   81aea:	4770      	bx	lr

00081aec <udd_set_address>:
	udd_disable_address();
   81aec:	4b08      	ldr	r3, [pc, #32]	; (81b10 <udd_set_address+0x24>)
   81aee:	681a      	ldr	r2, [r3, #0]
   81af0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   81af4:	601a      	str	r2, [r3, #0]
	udd_configure_address(address);
   81af6:	681a      	ldr	r2, [r3, #0]
   81af8:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   81afc:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   81b00:	4302      	orrs	r2, r0
   81b02:	601a      	str	r2, [r3, #0]
	udd_enable_address();
   81b04:	681a      	ldr	r2, [r3, #0]
   81b06:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   81b0a:	601a      	str	r2, [r3, #0]
   81b0c:	4770      	bx	lr
   81b0e:	bf00      	nop
   81b10:	400ac000 	.word	0x400ac000

00081b14 <udd_getaddress>:
	return udd_get_configured_address();
   81b14:	4b02      	ldr	r3, [pc, #8]	; (81b20 <udd_getaddress+0xc>)
   81b16:	6818      	ldr	r0, [r3, #0]
}
   81b18:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   81b1c:	4770      	bx	lr
   81b1e:	bf00      	nop
   81b20:	400ac000 	.word	0x400ac000

00081b24 <udd_get_frame_number>:
	return udd_frame_number();
   81b24:	4b02      	ldr	r3, [pc, #8]	; (81b30 <udd_get_frame_number+0xc>)
   81b26:	6a18      	ldr	r0, [r3, #32]
}
   81b28:	f3c0 00ca 	ubfx	r0, r0, #3, #11
   81b2c:	4770      	bx	lr
   81b2e:	bf00      	nop
   81b30:	400ac000 	.word	0x400ac000

00081b34 <udd_get_micro_frame_number>:
	return udd_micro_frame_number();
   81b34:	4b02      	ldr	r3, [pc, #8]	; (81b40 <udd_get_micro_frame_number+0xc>)
   81b36:	6a18      	ldr	r0, [r3, #32]
}
   81b38:	f3c0 000d 	ubfx	r0, r0, #0, #14
   81b3c:	4770      	bx	lr
   81b3e:	bf00      	nop
   81b40:	400ac000 	.word	0x400ac000

00081b44 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
   81b44:	4b01      	ldr	r3, [pc, #4]	; (81b4c <udd_set_setup_payload+0x8>)
   81b46:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
   81b48:	8199      	strh	r1, [r3, #12]
   81b4a:	4770      	bx	lr
   81b4c:	20070e14 	.word	0x20070e14

00081b50 <udd_ep_free>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   81b50:	f000 020f 	and.w	r2, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   81b54:	2a03      	cmp	r2, #3
   81b56:	d900      	bls.n	81b5a <udd_ep_free+0xa>
   81b58:	4770      	bx	lr
{
   81b5a:	b570      	push	{r4, r5, r6, lr}
	udd_disable_endpoint(ep_index);
   81b5c:	4810      	ldr	r0, [pc, #64]	; (81ba0 <udd_ep_free+0x50>)
   81b5e:	69c3      	ldr	r3, [r0, #28]
   81b60:	2101      	movs	r1, #1
   81b62:	fa01 f402 	lsl.w	r4, r1, r2
   81b66:	ea23 0304 	bic.w	r3, r3, r4
   81b6a:	61c3      	str	r3, [r0, #28]
	udd_unallocate_memory(ep_index);
   81b6c:	f500 7080 	add.w	r0, r0, #256	; 0x100
   81b70:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
   81b74:	f023 0302 	bic.w	r3, r3, #2
   81b78:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   81b7c:	1e56      	subs	r6, r2, #1
   81b7e:	4c09      	ldr	r4, [pc, #36]	; (81ba4 <udd_ep_free+0x54>)
   81b80:	fa06 f501 	lsl.w	r5, r6, r1
   81b84:	19a8      	adds	r0, r5, r6
   81b86:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
   81b8a:	4b07      	ldr	r3, [pc, #28]	; (81ba8 <udd_ep_free+0x58>)
   81b8c:	4798      	blx	r3
	udd_ep_job[ep_index - 1].stall_requested = false;
   81b8e:	4435      	add	r5, r6
   81b90:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   81b94:	7d23      	ldrb	r3, [r4, #20]
   81b96:	f36f 0382 	bfc	r3, #2, #1
   81b9a:	7523      	strb	r3, [r4, #20]
   81b9c:	bd70      	pop	{r4, r5, r6, pc}
   81b9e:	bf00      	nop
   81ba0:	400ac000 	.word	0x400ac000
   81ba4:	20070d10 	.word	0x20070d10
   81ba8:	00080ff5 	.word	0x00080ff5

00081bac <udd_ep_is_halted>:
	return Is_udd_endpoint_stall_requested(ep_index);
   81bac:	f000 000f 	and.w	r0, r0, #15
   81bb0:	4b02      	ldr	r3, [pc, #8]	; (81bbc <udd_ep_is_halted+0x10>)
   81bb2:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
}
   81bb6:	f3c0 40c0 	ubfx	r0, r0, #19, #1
   81bba:	4770      	bx	lr
   81bbc:	400ac1c0 	.word	0x400ac1c0

00081bc0 <udd_ep_set_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   81bc0:	f000 030f 	and.w	r3, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   81bc4:	2b03      	cmp	r3, #3
   81bc6:	d85d      	bhi.n	81c84 <udd_ep_set_halt+0xc4>
	if (Is_udd_endpoint_stall_requested(ep_index) // Endpoint stalled
   81bc8:	4a35      	ldr	r2, [pc, #212]	; (81ca0 <udd_ep_set_halt+0xe0>)
   81bca:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   81bce:	f412 2f00 	tst.w	r2, #524288	; 0x80000
   81bd2:	d159      	bne.n	81c88 <udd_ep_set_halt+0xc8>
{
   81bd4:	b410      	push	{r4}
   81bd6:	b083      	sub	sp, #12
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
   81bd8:	1e59      	subs	r1, r3, #1
			|| ptr_job->stall_requested) { // Endpoint stall is requested
   81bda:	eb01 0441 	add.w	r4, r1, r1, lsl #1
   81bde:	4a31      	ldr	r2, [pc, #196]	; (81ca4 <udd_ep_set_halt+0xe4>)
   81be0:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
   81be4:	7d12      	ldrb	r2, [r2, #20]
   81be6:	f012 0f04 	tst.w	r2, #4
   81bea:	d14f      	bne.n	81c8c <udd_ep_set_halt+0xcc>
	if (ptr_job->busy == true) {
   81bec:	f012 0f01 	tst.w	r2, #1
   81bf0:	d150      	bne.n	81c94 <udd_ep_set_halt+0xd4>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81bf2:	f3ef 8210 	mrs	r2, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81bf6:	fab2 f282 	clz	r2, r2
   81bfa:	0952      	lsrs	r2, r2, #5
   81bfc:	9201      	str	r2, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81bfe:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81c00:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81c04:	2400      	movs	r4, #0
   81c06:	4a28      	ldr	r2, [pc, #160]	; (81ca8 <udd_ep_set_halt+0xe8>)
   81c08:	7014      	strb	r4, [r2, #0]
	return flags;
   81c0a:	9c01      	ldr	r4, [sp, #4]
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   81c0c:	f010 0f80 	tst.w	r0, #128	; 0x80
   81c10:	d118      	bne.n	81c44 <udd_ep_set_halt+0x84>
	udd_disable_endpoint_bank_autoswitch(ep_index);
   81c12:	4926      	ldr	r1, [pc, #152]	; (81cac <udd_ep_set_halt+0xec>)
   81c14:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
   81c18:	f422 7200 	bic.w	r2, r2, #512	; 0x200
   81c1c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	udd_ack_stall(ep_index);
   81c20:	2140      	movs	r1, #64	; 0x40
   81c22:	4a23      	ldr	r2, [pc, #140]	; (81cb0 <udd_ep_set_halt+0xf0>)
   81c24:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	udd_enable_stall_handshake(ep_index);
   81c28:	f44f 2100 	mov.w	r1, #524288	; 0x80000
   81c2c:	3290      	adds	r2, #144	; 0x90
   81c2e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	if (cpu_irq_is_enabled_flags(flags))
   81c32:	2c00      	cmp	r4, #0
   81c34:	d032      	beq.n	81c9c <udd_ep_set_halt+0xdc>
		cpu_irq_enable();
   81c36:	2001      	movs	r0, #1
   81c38:	4b1b      	ldr	r3, [pc, #108]	; (81ca8 <udd_ep_set_halt+0xe8>)
   81c3a:	7018      	strb	r0, [r3, #0]
   81c3c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81c40:	b662      	cpsie	i
   81c42:	e024      	b.n	81c8e <udd_ep_set_halt+0xce>
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   81c44:	4a1b      	ldr	r2, [pc, #108]	; (81cb4 <udd_ep_set_halt+0xf4>)
   81c46:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   81c4a:	f412 5f40 	tst.w	r2, #12288	; 0x3000
   81c4e:	d0e0      	beq.n	81c12 <udd_ep_set_halt+0x52>
		ptr_job->stall_requested = true;
   81c50:	eb01 0141 	add.w	r1, r1, r1, lsl #1
   81c54:	4a13      	ldr	r2, [pc, #76]	; (81ca4 <udd_ep_set_halt+0xe4>)
   81c56:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
   81c5a:	7d0a      	ldrb	r2, [r1, #20]
   81c5c:	f042 0204 	orr.w	r2, r2, #4
   81c60:	750a      	strb	r2, [r1, #20]
		udd_enable_bank_interrupt(ep_index);
   81c62:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   81c66:	4914      	ldr	r1, [pc, #80]	; (81cb8 <udd_ep_set_halt+0xf8>)
   81c68:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		udd_enable_endpoint_interrupt(ep_index);
   81c6c:	fa02 f303 	lsl.w	r3, r2, r3
   81c70:	4a12      	ldr	r2, [pc, #72]	; (81cbc <udd_ep_set_halt+0xfc>)
   81c72:	6193      	str	r3, [r2, #24]
	if (cpu_irq_is_enabled_flags(flags))
   81c74:	b184      	cbz	r4, 81c98 <udd_ep_set_halt+0xd8>
		cpu_irq_enable();
   81c76:	2001      	movs	r0, #1
   81c78:	4b0b      	ldr	r3, [pc, #44]	; (81ca8 <udd_ep_set_halt+0xe8>)
   81c7a:	7018      	strb	r0, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   81c7c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81c80:	b662      	cpsie	i
   81c82:	e004      	b.n	81c8e <udd_ep_set_halt+0xce>
		return false;
   81c84:	2000      	movs	r0, #0
   81c86:	4770      	bx	lr
		return true; // Already STALL
   81c88:	2001      	movs	r0, #1
   81c8a:	4770      	bx	lr
   81c8c:	2001      	movs	r0, #1
}
   81c8e:	b003      	add	sp, #12
   81c90:	bc10      	pop	{r4}
   81c92:	4770      	bx	lr
		return false; // Job on going, stall impossible
   81c94:	2000      	movs	r0, #0
   81c96:	e7fa      	b.n	81c8e <udd_ep_set_halt+0xce>
		return true;
   81c98:	2001      	movs	r0, #1
   81c9a:	e7f8      	b.n	81c8e <udd_ep_set_halt+0xce>
	return true;
   81c9c:	2001      	movs	r0, #1
   81c9e:	e7f6      	b.n	81c8e <udd_ep_set_halt+0xce>
   81ca0:	400ac1c0 	.word	0x400ac1c0
   81ca4:	20070d10 	.word	0x20070d10
   81ca8:	200701d8 	.word	0x200701d8
   81cac:	400ac100 	.word	0x400ac100
   81cb0:	400ac160 	.word	0x400ac160
   81cb4:	400ac130 	.word	0x400ac130
   81cb8:	400ac1f0 	.word	0x400ac1f0
   81cbc:	400ac000 	.word	0x400ac000

00081cc0 <udd_ep_clear_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   81cc0:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index)
   81cc4:	2803      	cmp	r0, #3
   81cc6:	d851      	bhi.n	81d6c <udd_ep_clear_halt+0xac>
{
   81cc8:	b510      	push	{r4, lr}
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
   81cca:	1e43      	subs	r3, r0, #1
	if (ptr_job->stall_requested) {
   81ccc:	eb03 0143 	add.w	r1, r3, r3, lsl #1
   81cd0:	4a2c      	ldr	r2, [pc, #176]	; (81d84 <udd_ep_clear_halt+0xc4>)
   81cd2:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
   81cd6:	7d12      	ldrb	r2, [r2, #20]
   81cd8:	f012 0f04 	tst.w	r2, #4
   81cdc:	d048      	beq.n	81d70 <udd_ep_clear_halt+0xb0>
		ptr_job->stall_requested = false;
   81cde:	460a      	mov	r2, r1
   81ce0:	4928      	ldr	r1, [pc, #160]	; (81d84 <udd_ep_clear_halt+0xc4>)
   81ce2:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   81ce6:	7d11      	ldrb	r1, [r2, #20]
   81ce8:	f36f 0182 	bfc	r1, #2, #1
   81cec:	7511      	strb	r1, [r2, #20]
		udd_disable_bank_interrupt(ep_index);
   81cee:	0082      	lsls	r2, r0, #2
   81cf0:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   81cf4:	4c24      	ldr	r4, [pc, #144]	; (81d88 <udd_ep_clear_halt+0xc8>)
   81cf6:	f844 1020 	str.w	r1, [r4, r0, lsl #2]
		udd_disable_endpoint_interrupt(ep_index);
   81cfa:	4081      	lsls	r1, r0
   81cfc:	f5a4 7408 	sub.w	r4, r4, #544	; 0x220
   81d00:	6161      	str	r1, [r4, #20]
	if (Is_udd_endpoint_stall_requested(ep_index)) {
   81d02:	4922      	ldr	r1, [pc, #136]	; (81d8c <udd_ep_clear_halt+0xcc>)
   81d04:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
   81d08:	f411 2f00 	tst.w	r1, #524288	; 0x80000
   81d0c:	d014      	beq.n	81d38 <udd_ep_clear_halt+0x78>
		if (Is_udd_stall(ep_index)) {
   81d0e:	4920      	ldr	r1, [pc, #128]	; (81d90 <udd_ep_clear_halt+0xd0>)
   81d10:	5851      	ldr	r1, [r2, r1]
   81d12:	f011 0f40 	tst.w	r1, #64	; 0x40
   81d16:	d006      	beq.n	81d26 <udd_ep_clear_halt+0x66>
			udd_ack_stall(ep_index);
   81d18:	2040      	movs	r0, #64	; 0x40
   81d1a:	491e      	ldr	r1, [pc, #120]	; (81d94 <udd_ep_clear_halt+0xd4>)
   81d1c:	5050      	str	r0, [r2, r1]
			udd_reset_data_toggle(ep_index);
   81d1e:	f44f 2080 	mov.w	r0, #262144	; 0x40000
   81d22:	3190      	adds	r1, #144	; 0x90
   81d24:	5050      	str	r0, [r2, r1]
		udd_disable_stall_handshake(ep_index);
   81d26:	f44f 2000 	mov.w	r0, #524288	; 0x80000
   81d2a:	4917      	ldr	r1, [pc, #92]	; (81d88 <udd_ep_clear_halt+0xc8>)
   81d2c:	5050      	str	r0, [r2, r1]
		udd_enable_endpoint_bank_autoswitch(ep_index);
   81d2e:	481a      	ldr	r0, [pc, #104]	; (81d98 <udd_ep_clear_halt+0xd8>)
   81d30:	5811      	ldr	r1, [r2, r0]
   81d32:	f441 7100 	orr.w	r1, r1, #512	; 0x200
   81d36:	5011      	str	r1, [r2, r0]
		if (ptr_job->busy == true) {
   81d38:	eb03 0243 	add.w	r2, r3, r3, lsl #1
   81d3c:	4911      	ldr	r1, [pc, #68]	; (81d84 <udd_ep_clear_halt+0xc4>)
   81d3e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   81d42:	7d12      	ldrb	r2, [r2, #20]
   81d44:	f012 0f01 	tst.w	r2, #1
   81d48:	d101      	bne.n	81d4e <udd_ep_clear_halt+0x8e>
	return true;
   81d4a:	2001      	movs	r0, #1
   81d4c:	bd10      	pop	{r4, pc}
			ptr_job->busy = false;
   81d4e:	4608      	mov	r0, r1
   81d50:	0059      	lsls	r1, r3, #1
   81d52:	18ca      	adds	r2, r1, r3
   81d54:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
   81d58:	7d14      	ldrb	r4, [r2, #20]
   81d5a:	f36f 0400 	bfc	r4, #0, #1
   81d5e:	7514      	strb	r4, [r2, #20]
			ptr_job->call_nohalt();
   81d60:	440b      	add	r3, r1
   81d62:	f850 3033 	ldr.w	r3, [r0, r3, lsl #3]
   81d66:	4798      	blx	r3
	return true;
   81d68:	2001      	movs	r0, #1
   81d6a:	bd10      	pop	{r4, pc}
		return false;
   81d6c:	2000      	movs	r0, #0
   81d6e:	4770      	bx	lr
	if (Is_udd_endpoint_stall_requested(ep_index)) {
   81d70:	0082      	lsls	r2, r0, #2
   81d72:	4906      	ldr	r1, [pc, #24]	; (81d8c <udd_ep_clear_halt+0xcc>)
   81d74:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
   81d78:	f411 2f00 	tst.w	r1, #524288	; 0x80000
   81d7c:	d1c7      	bne.n	81d0e <udd_ep_clear_halt+0x4e>
	return true;
   81d7e:	2001      	movs	r0, #1
}
   81d80:	bd10      	pop	{r4, pc}
   81d82:	bf00      	nop
   81d84:	20070d10 	.word	0x20070d10
   81d88:	400ac220 	.word	0x400ac220
   81d8c:	400ac1c0 	.word	0x400ac1c0
   81d90:	400ac130 	.word	0x400ac130
   81d94:	400ac160 	.word	0x400ac160
   81d98:	400ac100 	.word	0x400ac100

00081d9c <udd_ep_run>:
	ep &= USB_EP_ADDR_MASK;
   81d9c:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
   81da0:	2803      	cmp	r0, #3
   81da2:	d864      	bhi.n	81e6e <udd_ep_run+0xd2>
{
   81da4:	b5f0      	push	{r4, r5, r6, r7, lr}
   81da6:	b083      	sub	sp, #12
	if ((!Is_udd_endpoint_enabled(ep))
   81da8:	4c36      	ldr	r4, [pc, #216]	; (81e84 <udd_ep_run+0xe8>)
   81daa:	69e5      	ldr	r5, [r4, #28]
   81dac:	2401      	movs	r4, #1
   81dae:	4084      	lsls	r4, r0
   81db0:	422c      	tst	r4, r5
   81db2:	d05e      	beq.n	81e72 <udd_ep_run+0xd6>
			|| Is_udd_endpoint_stall_requested(ep)
   81db4:	4c34      	ldr	r4, [pc, #208]	; (81e88 <udd_ep_run+0xec>)
   81db6:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
   81dba:	f414 2f00 	tst.w	r4, #524288	; 0x80000
   81dbe:	d15b      	bne.n	81e78 <udd_ep_run+0xdc>
	ptr_job = &udd_ep_job[ep - 1];
   81dc0:	1e44      	subs	r4, r0, #1
			|| ptr_job->stall_requested) {
   81dc2:	eb04 0644 	add.w	r6, r4, r4, lsl #1
   81dc6:	4d31      	ldr	r5, [pc, #196]	; (81e8c <udd_ep_run+0xf0>)
   81dc8:	eb05 05c6 	add.w	r5, r5, r6, lsl #3
   81dcc:	7d2d      	ldrb	r5, [r5, #20]
   81dce:	f015 0f04 	tst.w	r5, #4
   81dd2:	d153      	bne.n	81e7c <udd_ep_run+0xe0>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81dd4:	f3ef 8510 	mrs	r5, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81dd8:	fab5 f585 	clz	r5, r5
   81ddc:	096d      	lsrs	r5, r5, #5
   81dde:	9501      	str	r5, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81de0:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81de2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81de6:	2600      	movs	r6, #0
   81de8:	4d29      	ldr	r5, [pc, #164]	; (81e90 <udd_ep_run+0xf4>)
   81dea:	702e      	strb	r6, [r5, #0]
	return flags;
   81dec:	9f01      	ldr	r7, [sp, #4]
	if (ptr_job->busy == true) {
   81dee:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   81df2:	4e26      	ldr	r6, [pc, #152]	; (81e8c <udd_ep_run+0xf0>)
   81df4:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   81df8:	7d2d      	ldrb	r5, [r5, #20]
   81dfa:	f015 0f01 	tst.w	r5, #1
   81dfe:	d009      	beq.n	81e14 <udd_ep_run+0x78>
	if (cpu_irq_is_enabled_flags(flags))
   81e00:	2f00      	cmp	r7, #0
   81e02:	d03d      	beq.n	81e80 <udd_ep_run+0xe4>
		cpu_irq_enable();
   81e04:	2201      	movs	r2, #1
   81e06:	4b22      	ldr	r3, [pc, #136]	; (81e90 <udd_ep_run+0xf4>)
   81e08:	701a      	strb	r2, [r3, #0]
   81e0a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81e0e:	b662      	cpsie	i
		return false; // Job already on going
   81e10:	2000      	movs	r0, #0
   81e12:	e02f      	b.n	81e74 <udd_ep_run+0xd8>
	ptr_job->busy = true;
   81e14:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   81e18:	4e1c      	ldr	r6, [pc, #112]	; (81e8c <udd_ep_run+0xf0>)
   81e1a:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   81e1e:	7d2e      	ldrb	r6, [r5, #20]
   81e20:	f046 0601 	orr.w	r6, r6, #1
   81e24:	752e      	strb	r6, [r5, #20]
	if (cpu_irq_is_enabled_flags(flags))
   81e26:	b12f      	cbz	r7, 81e34 <udd_ep_run+0x98>
		cpu_irq_enable();
   81e28:	2601      	movs	r6, #1
   81e2a:	4d19      	ldr	r5, [pc, #100]	; (81e90 <udd_ep_run+0xf4>)
   81e2c:	702e      	strb	r6, [r5, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   81e2e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81e32:	b662      	cpsie	i
	ptr_job->buf = buf;
   81e34:	4f15      	ldr	r7, [pc, #84]	; (81e8c <udd_ep_run+0xf0>)
   81e36:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   81e3a:	00ed      	lsls	r5, r5, #3
   81e3c:	197e      	adds	r6, r7, r5
   81e3e:	6072      	str	r2, [r6, #4]
	ptr_job->buf_size = buf_size;
   81e40:	60b3      	str	r3, [r6, #8]
	ptr_job->buf_cnt = 0;
   81e42:	2200      	movs	r2, #0
   81e44:	60f2      	str	r2, [r6, #12]
	ptr_job->buf_load = 0;
   81e46:	6132      	str	r2, [r6, #16]
	ptr_job->call_trans = callback;
   81e48:	9a08      	ldr	r2, [sp, #32]
   81e4a:	517a      	str	r2, [r7, r5]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   81e4c:	b911      	cbnz	r1, 81e54 <udd_ep_run+0xb8>
   81e4e:	fab3 f183 	clz	r1, r3
   81e52:	0949      	lsrs	r1, r1, #5
   81e54:	eb04 0444 	add.w	r4, r4, r4, lsl #1
   81e58:	4b0c      	ldr	r3, [pc, #48]	; (81e8c <udd_ep_run+0xf0>)
   81e5a:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
   81e5e:	7d23      	ldrb	r3, [r4, #20]
   81e60:	f361 0341 	bfi	r3, r1, #1, #1
   81e64:	7523      	strb	r3, [r4, #20]
	udd_ep_trans_done(ep);
   81e66:	4b0b      	ldr	r3, [pc, #44]	; (81e94 <udd_ep_run+0xf8>)
   81e68:	4798      	blx	r3
	return true;
   81e6a:	2001      	movs	r0, #1
   81e6c:	e002      	b.n	81e74 <udd_ep_run+0xd8>
		return false;
   81e6e:	2000      	movs	r0, #0
   81e70:	4770      	bx	lr
		return false; // Endpoint is halted
   81e72:	2000      	movs	r0, #0
}
   81e74:	b003      	add	sp, #12
   81e76:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return false; // Endpoint is halted
   81e78:	2000      	movs	r0, #0
   81e7a:	e7fb      	b.n	81e74 <udd_ep_run+0xd8>
   81e7c:	2000      	movs	r0, #0
   81e7e:	e7f9      	b.n	81e74 <udd_ep_run+0xd8>
		return false; // Job already on going
   81e80:	2000      	movs	r0, #0
   81e82:	e7f7      	b.n	81e74 <udd_ep_run+0xd8>
   81e84:	400ac000 	.word	0x400ac000
   81e88:	400ac1c0 	.word	0x400ac1c0
   81e8c:	20070d10 	.word	0x20070d10
   81e90:	200701d8 	.word	0x200701d8
   81e94:	0008102d 	.word	0x0008102d

00081e98 <udd_ep_alloc>:
{
   81e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81e9c:	b083      	sub	sp, #12
	ep = ep & USB_EP_ADDR_MASK;
   81e9e:	f000 040f 	and.w	r4, r0, #15
	if (ep > USB_DEVICE_MAX_EP) {
   81ea2:	2c03      	cmp	r4, #3
   81ea4:	f200 80df 	bhi.w	82066 <udd_ep_alloc+0x1ce>
	if (Is_udd_endpoint_enabled(ep)) {
   81ea8:	4b74      	ldr	r3, [pc, #464]	; (8207c <udd_ep_alloc+0x1e4>)
   81eaa:	69dd      	ldr	r5, [r3, #28]
   81eac:	2301      	movs	r3, #1
   81eae:	40a3      	lsls	r3, r4
   81eb0:	402b      	ands	r3, r5
   81eb2:	f040 80dd 	bne.w	82070 <udd_ep_alloc+0x1d8>
	switch (bmAttributes & USB_EP_TYPE_MASK) {
   81eb6:	f011 0503 	ands.w	r5, r1, #3
   81eba:	f000 80db 	beq.w	82074 <udd_ep_alloc+0x1dc>
   81ebe:	2d02      	cmp	r5, #2
   81ec0:	d920      	bls.n	81f04 <udd_ep_alloc+0x6c>
   81ec2:	2d03      	cmp	r5, #3
   81ec4:	f040 80d6 	bne.w	82074 <udd_ep_alloc+0x1dc>
		bank = UOTGHS_DEVEPTCFG_EPBK_1_BANK >>
   81ec8:	f04f 0e00 	mov.w	lr, #0
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   81ecc:	4e6c      	ldr	r6, [pc, #432]	; (82080 <udd_ep_alloc+0x1e8>)
   81ece:	eb06 0584 	add.w	r5, r6, r4, lsl #2
   81ed2:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
   81ed6:	f427 57cb 	bic.w	r7, r7, #6496	; 0x1960
   81eda:	f027 071c 	bic.w	r7, r7, #28
   81ede:	02c9      	lsls	r1, r1, #11
   81ee0:	f401 51c0 	and.w	r1, r1, #6144	; 0x1800
   81ee4:	b240      	sxtb	r0, r0
   81ee6:	2800      	cmp	r0, #0
   81ee8:	bfb8      	it	lt
   81eea:	f44f 7380 	movlt.w	r3, #256	; 0x100
   81eee:	f5a2 6080 	sub.w	r0, r2, #1024	; 0x400
   81ef2:	b280      	uxth	r0, r0
   81ef4:	f5b0 4f7c 	cmp.w	r0, #64512	; 0xfc00
   81ef8:	d307      	bcc.n	81f0a <udd_ep_alloc+0x72>
   81efa:	2a08      	cmp	r2, #8
   81efc:	d924      	bls.n	81f48 <udd_ep_alloc+0xb0>
   81efe:	0052      	lsls	r2, r2, #1
   81f00:	3a01      	subs	r2, #1
   81f02:	e004      	b.n	81f0e <udd_ep_alloc+0x76>
		bank = UOTGHS_DEVEPTCFG_EPBK_2_BANK >>
   81f04:	f04f 0e01 	mov.w	lr, #1
   81f08:	e7e0      	b.n	81ecc <udd_ep_alloc+0x34>
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   81f0a:	f240 72ff 	movw	r2, #2047	; 0x7ff
   81f0e:	fab2 f282 	clz	r2, r2
   81f12:	ea41 018e 	orr.w	r1, r1, lr, lsl #2
   81f16:	4319      	orrs	r1, r3
   81f18:	f1c2 031c 	rsb	r3, r2, #28
   81f1c:	ea41 1303 	orr.w	r3, r1, r3, lsl #4
   81f20:	f423 63d0 	bic.w	r3, r3, #1664	; 0x680
   81f24:	f023 0303 	bic.w	r3, r3, #3
   81f28:	04db      	lsls	r3, r3, #19
   81f2a:	0cdb      	lsrs	r3, r3, #19
   81f2c:	433b      	orrs	r3, r7
   81f2e:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
	ep_allocated = 1 << ep;
   81f32:	2701      	movs	r7, #1
   81f34:	40a7      	lsls	r7, r4
   81f36:	b2bf      	uxth	r7, r7
	for (i = USB_DEVICE_MAX_EP; i > ep; i--) {
   81f38:	2c02      	cmp	r4, #2
   81f3a:	d81c      	bhi.n	81f76 <udd_ep_alloc+0xde>
   81f3c:	4a51      	ldr	r2, [pc, #324]	; (82084 <udd_ep_alloc+0x1ec>)
   81f3e:	2303      	movs	r3, #3
		if (Is_udd_endpoint_enabled(i)) {
   81f40:	484e      	ldr	r0, [pc, #312]	; (8207c <udd_ep_alloc+0x1e4>)
   81f42:	f04f 0e01 	mov.w	lr, #1
   81f46:	e006      	b.n	81f56 <udd_ep_alloc+0xbe>
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   81f48:	220f      	movs	r2, #15
   81f4a:	e7e0      	b.n	81f0e <udd_ep_alloc+0x76>
   81f4c:	3b01      	subs	r3, #1
   81f4e:	3a04      	subs	r2, #4
	for (i = USB_DEVICE_MAX_EP; i > ep; i--) {
   81f50:	b2d9      	uxtb	r1, r3
   81f52:	428c      	cmp	r4, r1
   81f54:	d20f      	bcs.n	81f76 <udd_ep_alloc+0xde>
		if (Is_udd_endpoint_enabled(i)) {
   81f56:	69c6      	ldr	r6, [r0, #28]
   81f58:	fa0e f103 	lsl.w	r1, lr, r3
   81f5c:	420e      	tst	r6, r1
   81f5e:	d0f5      	beq.n	81f4c <udd_ep_alloc+0xb4>
			ep_allocated |= 1 << i;
   81f60:	430f      	orrs	r7, r1
   81f62:	b2bf      	uxth	r7, r7
			udd_disable_endpoint(i);
   81f64:	69c6      	ldr	r6, [r0, #28]
   81f66:	ea26 0101 	bic.w	r1, r6, r1
   81f6a:	61c1      	str	r1, [r0, #28]
			udd_unallocate_memory(i);
   81f6c:	6811      	ldr	r1, [r2, #0]
   81f6e:	f021 0102 	bic.w	r1, r1, #2
   81f72:	6011      	str	r1, [r2, #0]
   81f74:	e7ea      	b.n	81f4c <udd_ep_alloc+0xb4>
   81f76:	eb04 0344 	add.w	r3, r4, r4, lsl #1
   81f7a:	4e43      	ldr	r6, [pc, #268]	; (82088 <udd_ep_alloc+0x1f0>)
   81f7c:	eb06 06c3 	add.w	r6, r6, r3, lsl #3
			bool b_restart = ptr_job->busy;
   81f80:	f8df 9104 	ldr.w	r9, [pc, #260]	; 82088 <udd_ep_alloc+0x1f0>
			udd_enable_endpoint(i);
   81f84:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 8207c <udd_ep_alloc+0x1e4>
				b_restart = udd_ep_run(Is_udd_endpoint_in(i) ?
   81f88:	f8df a100 	ldr.w	sl, [pc, #256]	; 8208c <udd_ep_alloc+0x1f4>
   81f8c:	e01d      	b.n	81fca <udd_ep_alloc+0x132>
				if (NULL == ptr_job->call_trans) {
   81f8e:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   81f92:	4a3d      	ldr	r2, [pc, #244]	; (82088 <udd_ep_alloc+0x1f0>)
   81f94:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
   81f98:	2c00      	cmp	r4, #0
   81f9a:	d06d      	beq.n	82078 <udd_ep_alloc+0x1e0>
				if (Is_udd_endpoint_in(i)) {
   81f9c:	682b      	ldr	r3, [r5, #0]
   81f9e:	f413 7f80 	tst.w	r3, #256	; 0x100
					i |= USB_EP_DIR_IN;
   81fa2:	bf18      	it	ne
   81fa4:	f040 0080 	orrne.w	r0, r0, #128	; 0x80
				ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   81fa8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
   81fac:	4b36      	ldr	r3, [pc, #216]	; (82088 <udd_ep_alloc+0x1f0>)
   81fae:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   81fb2:	4602      	mov	r2, r0
   81fb4:	68c9      	ldr	r1, [r1, #12]
   81fb6:	2001      	movs	r0, #1
   81fb8:	47a0      	blx	r4
				return false;
   81fba:	2300      	movs	r3, #0
   81fbc:	e054      	b.n	82068 <udd_ep_alloc+0x1d0>
   81fbe:	3401      	adds	r4, #1
   81fc0:	3504      	adds	r5, #4
   81fc2:	3618      	adds	r6, #24
	for (i = ep; i <= USB_DEVICE_MAX_EP; i++) {
   81fc4:	b2e3      	uxtb	r3, r4
   81fc6:	2b03      	cmp	r3, #3
   81fc8:	d84b      	bhi.n	82062 <udd_ep_alloc+0x1ca>
   81fca:	b2e0      	uxtb	r0, r4
		if (ep_allocated & (1 << i)) {
   81fcc:	fa47 f304 	asr.w	r3, r7, r4
   81fd0:	f013 0f01 	tst.w	r3, #1
   81fd4:	d0f3      	beq.n	81fbe <udd_ep_alloc+0x126>
   81fd6:	1e61      	subs	r1, r4, #1
			bool b_restart = ptr_job->busy;
   81fd8:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   81fdc:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
   81fe0:	f893 e014 	ldrb.w	lr, [r3, #20]
   81fe4:	f00e 0201 	and.w	r2, lr, #1
			ptr_job->busy = false;
   81fe8:	f36f 0e00 	bfc	lr, #0, #1
   81fec:	f883 e014 	strb.w	lr, [r3, #20]
			udd_allocate_memory(i);
   81ff0:	682b      	ldr	r3, [r5, #0]
   81ff2:	f043 0302 	orr.w	r3, r3, #2
   81ff6:	602b      	str	r3, [r5, #0]
			udd_enable_endpoint(i);
   81ff8:	f8d8 e01c 	ldr.w	lr, [r8, #28]
   81ffc:	2301      	movs	r3, #1
   81ffe:	40a3      	lsls	r3, r4
   82000:	ea43 030e 	orr.w	r3, r3, lr
   82004:	f8c8 301c 	str.w	r3, [r8, #28]
			if (!Is_udd_endpoint_configured(i)) {
   82008:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   8200a:	f413 2f80 	tst.w	r3, #262144	; 0x40000
   8200e:	d0be      	beq.n	81f8e <udd_ep_alloc+0xf6>
			udd_enable_endpoint_bank_autoswitch(i);
   82010:	682b      	ldr	r3, [r5, #0]
   82012:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   82016:	602b      	str	r3, [r5, #0]
			if (b_restart) {
   82018:	2a00      	cmp	r2, #0
   8201a:	d0d0      	beq.n	81fbe <udd_ep_alloc+0x126>
				ptr_job->buf_cnt -= ptr_job->buf_load;
   8201c:	f856 3c0c 	ldr.w	r3, [r6, #-12]
   82020:	f856 2c08 	ldr.w	r2, [r6, #-8]
   82024:	1a9a      	subs	r2, r3, r2
   82026:	f846 2c0c 	str.w	r2, [r6, #-12]
				b_restart = udd_ep_run(Is_udd_endpoint_in(i) ?
   8202a:	682b      	ldr	r3, [r5, #0]
   8202c:	f413 7f80 	tst.w	r3, #256	; 0x100
   82030:	bf18      	it	ne
   82032:	f040 0080 	orrne.w	r0, r0, #128	; 0x80
   82036:	f856 bc10 	ldr.w	fp, [r6, #-16]
   8203a:	f856 cc14 	ldr.w	ip, [r6, #-20]
						ptr_job->b_shortpacket,
   8203e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
   82042:	eb09 01c1 	add.w	r1, r9, r1, lsl #3
   82046:	7d09      	ldrb	r1, [r1, #20]
				b_restart = udd_ep_run(Is_udd_endpoint_in(i) ?
   82048:	f856 3c18 	ldr.w	r3, [r6, #-24]
   8204c:	9300      	str	r3, [sp, #0]
   8204e:	ebab 0302 	sub.w	r3, fp, r2
   82052:	4462      	add	r2, ip
   82054:	f3c1 0140 	ubfx	r1, r1, #1, #1
   82058:	47d0      	blx	sl
				if (!b_restart) {
   8205a:	4603      	mov	r3, r0
   8205c:	2800      	cmp	r0, #0
   8205e:	d1ae      	bne.n	81fbe <udd_ep_alloc+0x126>
   82060:	e002      	b.n	82068 <udd_ep_alloc+0x1d0>
	return true;
   82062:	2301      	movs	r3, #1
   82064:	e000      	b.n	82068 <udd_ep_alloc+0x1d0>
		return false;
   82066:	2300      	movs	r3, #0
}
   82068:	4618      	mov	r0, r3
   8206a:	b003      	add	sp, #12
   8206c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		return false;
   82070:	2300      	movs	r3, #0
   82072:	e7f9      	b.n	82068 <udd_ep_alloc+0x1d0>
		return false;
   82074:	2300      	movs	r3, #0
   82076:	e7f7      	b.n	82068 <udd_ep_alloc+0x1d0>
					return false;
   82078:	2300      	movs	r3, #0
   8207a:	e7f5      	b.n	82068 <udd_ep_alloc+0x1d0>
   8207c:	400ac000 	.word	0x400ac000
   82080:	400ac100 	.word	0x400ac100
   82084:	400ac10c 	.word	0x400ac10c
   82088:	20070d10 	.word	0x20070d10
   8208c:	00081d9d 	.word	0x00081d9d

00082090 <udd_ep_abort>:
{
   82090:	b570      	push	{r4, r5, r6, lr}
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   82092:	f000 020f 	and.w	r2, r0, #15
		udd_disable_endpoint_dma_interrupt(ep_index);
   82096:	1e54      	subs	r4, r2, #1
   82098:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   8209c:	40a3      	lsls	r3, r4
   8209e:	4916      	ldr	r1, [pc, #88]	; (820f8 <udd_ep_abort+0x68>)
   820a0:	614b      	str	r3, [r1, #20]
		udd_endpoint_dma_set_control(ep_index, 0);
   820a2:	4b16      	ldr	r3, [pc, #88]	; (820fc <udd_ep_abort+0x6c>)
   820a4:	eb03 1302 	add.w	r3, r3, r2, lsl #4
   820a8:	2500      	movs	r5, #0
   820aa:	609d      	str	r5, [r3, #8]
	udd_disable_endpoint_interrupt(ep_index);
   820ac:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   820b0:	4093      	lsls	r3, r2
   820b2:	614b      	str	r3, [r1, #20]
	if (ep & USB_EP_DIR_IN) {
   820b4:	f010 0f80 	tst.w	r0, #128	; 0x80
   820b8:	d108      	bne.n	820cc <udd_ep_abort+0x3c>
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   820ba:	eb04 0444 	add.w	r4, r4, r4, lsl #1
   820be:	2101      	movs	r1, #1
   820c0:	480f      	ldr	r0, [pc, #60]	; (82100 <udd_ep_abort+0x70>)
   820c2:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
   820c6:	4b0f      	ldr	r3, [pc, #60]	; (82104 <udd_ep_abort+0x74>)
   820c8:	4798      	blx	r3
   820ca:	bd70      	pop	{r4, r5, r6, pc}
		while(udd_nb_busy_bank(ep_index)) {
   820cc:	0093      	lsls	r3, r2, #2
   820ce:	480e      	ldr	r0, [pc, #56]	; (82108 <udd_ep_abort+0x78>)
   820d0:	4418      	add	r0, r3
			udd_kill_last_in_bank(ep_index);
   820d2:	4d0e      	ldr	r5, [pc, #56]	; (8210c <udd_ep_abort+0x7c>)
   820d4:	441d      	add	r5, r3
   820d6:	f44f 5600 	mov.w	r6, #8192	; 0x2000
			while(Is_udd_kill_last(ep_index));
   820da:	f501 71e0 	add.w	r1, r1, #448	; 0x1c0
   820de:	4419      	add	r1, r3
   820e0:	e004      	b.n	820ec <udd_ep_abort+0x5c>
			udd_kill_last_in_bank(ep_index);
   820e2:	602e      	str	r6, [r5, #0]
			while(Is_udd_kill_last(ep_index));
   820e4:	680b      	ldr	r3, [r1, #0]
   820e6:	f413 5f00 	tst.w	r3, #8192	; 0x2000
   820ea:	d1fb      	bne.n	820e4 <udd_ep_abort+0x54>
		while(udd_nb_busy_bank(ep_index)) {
   820ec:	6803      	ldr	r3, [r0, #0]
   820ee:	f413 5f40 	tst.w	r3, #12288	; 0x3000
   820f2:	d1f6      	bne.n	820e2 <udd_ep_abort+0x52>
   820f4:	e7e1      	b.n	820ba <udd_ep_abort+0x2a>
   820f6:	bf00      	nop
   820f8:	400ac000 	.word	0x400ac000
   820fc:	400ac300 	.word	0x400ac300
   82100:	20070d10 	.word	0x20070d10
   82104:	00080ff5 	.word	0x00080ff5
   82108:	400ac130 	.word	0x400ac130
   8210c:	400ac1f0 	.word	0x400ac1f0

00082110 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
   82110:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
   82112:	4b04      	ldr	r3, [pc, #16]	; (82124 <spi_enable_clock+0x14>)
   82114:	4298      	cmp	r0, r3
   82116:	d000      	beq.n	8211a <spi_enable_clock+0xa>
   82118:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8211a:	2018      	movs	r0, #24
   8211c:	4b02      	ldr	r3, [pc, #8]	; (82128 <spi_enable_clock+0x18>)
   8211e:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
   82120:	e7fa      	b.n	82118 <spi_enable_clock+0x8>
   82122:	bf00      	nop
   82124:	40008000 	.word	0x40008000
   82128:	00082521 	.word	0x00082521

0008212c <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
   8212c:	6843      	ldr	r3, [r0, #4]
   8212e:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
   82132:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
   82134:	6843      	ldr	r3, [r0, #4]
   82136:	0409      	lsls	r1, r1, #16
   82138:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
   8213c:	4319      	orrs	r1, r3
   8213e:	6041      	str	r1, [r0, #4]
   82140:	4770      	bx	lr

00082142 <spi_read>:
 *
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_read(Spi *p_spi, uint16_t *us_data, uint8_t *p_pcs)
{
   82142:	b410      	push	{r4}
	uint32_t timeout = SPI_TIMEOUT;
	static uint32_t reg_value;

	while (!(p_spi->SPI_SR & SPI_SR_RDRF)) {
   82144:	f643 2399 	movw	r3, #15001	; 0x3a99
   82148:	6904      	ldr	r4, [r0, #16]
   8214a:	f014 0f01 	tst.w	r4, #1
   8214e:	d103      	bne.n	82158 <spi_read+0x16>
		if (!timeout--) {
   82150:	3b01      	subs	r3, #1
   82152:	d1f9      	bne.n	82148 <spi_read+0x6>
			return SPI_ERROR_TIMEOUT;
   82154:	2001      	movs	r0, #1
   82156:	e009      	b.n	8216c <spi_read+0x2a>
		}
	}

	reg_value = p_spi->SPI_RDR;
   82158:	6883      	ldr	r3, [r0, #8]
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
   8215a:	6840      	ldr	r0, [r0, #4]
	if (spi_get_peripheral_select_mode(p_spi)) {
   8215c:	f010 0f02 	tst.w	r0, #2
		*p_pcs = (uint8_t) ((reg_value & SPI_RDR_PCS_Msk) >> SPI_RDR_PCS_Pos);
   82160:	bf1c      	itt	ne
   82162:	f3c3 4003 	ubfxne	r0, r3, #16, #4
   82166:	7010      	strbne	r0, [r2, #0]
	}
	*us_data = (uint16_t) (reg_value & SPI_RDR_RD_Msk);
   82168:	800b      	strh	r3, [r1, #0]

	return SPI_OK;
   8216a:	2000      	movs	r0, #0
}
   8216c:	bc10      	pop	{r4}
   8216e:	4770      	bx	lr

00082170 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
   82170:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
   82172:	f643 2499 	movw	r4, #15001	; 0x3a99
   82176:	6905      	ldr	r5, [r0, #16]
   82178:	f015 0f02 	tst.w	r5, #2
   8217c:	d103      	bne.n	82186 <spi_write+0x16>
		if (!timeout--) {
   8217e:	3c01      	subs	r4, #1
   82180:	d1f9      	bne.n	82176 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
   82182:	2001      	movs	r0, #1
   82184:	e00c      	b.n	821a0 <spi_write+0x30>
   82186:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
   82188:	f014 0f02 	tst.w	r4, #2
   8218c:	d006      	beq.n	8219c <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
   8218e:	0412      	lsls	r2, r2, #16
   82190:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
   82194:	4311      	orrs	r1, r2
		if (uc_last) {
   82196:	b10b      	cbz	r3, 8219c <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
   82198:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
   8219c:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
   8219e:	2000      	movs	r0, #0
}
   821a0:	bc30      	pop	{r4, r5}
   821a2:	4770      	bx	lr

000821a4 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
   821a4:	b932      	cbnz	r2, 821b4 <spi_set_clock_polarity+0x10>
   821a6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
   821aa:	6b03      	ldr	r3, [r0, #48]	; 0x30
   821ac:	f023 0301 	bic.w	r3, r3, #1
   821b0:	6303      	str	r3, [r0, #48]	; 0x30
   821b2:	4770      	bx	lr
   821b4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
   821b8:	6b03      	ldr	r3, [r0, #48]	; 0x30
   821ba:	f043 0301 	orr.w	r3, r3, #1
   821be:	6303      	str	r3, [r0, #48]	; 0x30
   821c0:	4770      	bx	lr

000821c2 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
   821c2:	b932      	cbnz	r2, 821d2 <spi_set_clock_phase+0x10>
   821c4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
   821c8:	6b03      	ldr	r3, [r0, #48]	; 0x30
   821ca:	f023 0302 	bic.w	r3, r3, #2
   821ce:	6303      	str	r3, [r0, #48]	; 0x30
   821d0:	4770      	bx	lr
   821d2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
   821d6:	6b03      	ldr	r3, [r0, #48]	; 0x30
   821d8:	f043 0302 	orr.w	r3, r3, #2
   821dc:	6303      	str	r3, [r0, #48]	; 0x30
   821de:	4770      	bx	lr

000821e0 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
   821e0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
   821e4:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   821e6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
   821ea:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
   821ec:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   821ee:	431a      	orrs	r2, r3
   821f0:	630a      	str	r2, [r1, #48]	; 0x30
   821f2:	4770      	bx	lr

000821f4 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider){
   821f4:	b172      	cbz	r2, 82214 <spi_set_baudrate_div+0x20>
{
   821f6:	b410      	push	{r4}
   821f8:	4614      	mov	r4, r2
   821fa:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;
	}
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
   821fe:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82200:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
   82204:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
   82206:	6b0a      	ldr	r2, [r1, #48]	; 0x30
   82208:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
   8220c:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
   8220e:	2000      	movs	r0, #0
}
   82210:	bc10      	pop	{r4}
   82212:	4770      	bx	lr
        return -1;
   82214:	f04f 30ff 	mov.w	r0, #4294967295
   82218:	4770      	bx	lr

0008221a <spi_set_transfer_delay>:
 * \param uc_dlybs Delay before SPCK (in number of MCK clocks).
 * \param uc_dlybct Delay between consecutive transfers (in number of MCK clocks).
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
   8221a:	b410      	push	{r4}
   8221c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
   82220:	6b08      	ldr	r0, [r1, #48]	; 0x30
   82222:	b280      	uxth	r0, r0
   82224:	6308      	str	r0, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
   82226:	6b0c      	ldr	r4, [r1, #48]	; 0x30
   82228:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
   8222c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   82230:	630b      	str	r3, [r1, #48]	; 0x30
			| SPI_CSR_DLYBCT(uc_dlybct);
}
   82232:	bc10      	pop	{r4}
   82234:	4770      	bx	lr
	...

00082238 <sysclk_enable_usb>:
 *
 * \param pll_id Source of the USB clock.
 * \param div Actual clock divisor. Must be superior to 0.
 */
void sysclk_enable_usb(void)
{
   82238:	b508      	push	{r3, lr}
	}
#endif

	if (CONFIG_USBCLK_SOURCE == USBCLK_SRC_UPLL) {

		pmc_enable_upll_clock();
   8223a:	4b04      	ldr	r3, [pc, #16]	; (8224c <sysclk_enable_usb+0x14>)
   8223c:	4798      	blx	r3
		pmc_switch_udpck_to_upllck(CONFIG_USBCLK_DIV - 1);
   8223e:	2000      	movs	r0, #0
   82240:	4b03      	ldr	r3, [pc, #12]	; (82250 <sysclk_enable_usb+0x18>)
   82242:	4798      	blx	r3
		pmc_enable_udpck();
   82244:	4b03      	ldr	r3, [pc, #12]	; (82254 <sysclk_enable_usb+0x1c>)
   82246:	4798      	blx	r3
   82248:	bd08      	pop	{r3, pc}
   8224a:	bf00      	nop
   8224c:	00082509 	.word	0x00082509
   82250:	00082541 	.word	0x00082541
   82254:	00082555 	.word	0x00082555

00082258 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   82258:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   8225a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   8225e:	d016      	beq.n	8228e <pio_set_peripheral+0x36>
   82260:	d80b      	bhi.n	8227a <pio_set_peripheral+0x22>
   82262:	b149      	cbz	r1, 82278 <pio_set_peripheral+0x20>
   82264:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   82268:	d105      	bne.n	82276 <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   8226a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   8226c:	6f01      	ldr	r1, [r0, #112]	; 0x70
   8226e:	400b      	ands	r3, r1
   82270:	ea23 0302 	bic.w	r3, r3, r2
   82274:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   82276:	6042      	str	r2, [r0, #4]
   82278:	4770      	bx	lr
	switch (ul_type) {
   8227a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   8227e:	d0fb      	beq.n	82278 <pio_set_peripheral+0x20>
   82280:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   82284:	d0f8      	beq.n	82278 <pio_set_peripheral+0x20>
   82286:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   8228a:	d1f4      	bne.n	82276 <pio_set_peripheral+0x1e>
   8228c:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   8228e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   82290:	4313      	orrs	r3, r2
   82292:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   82294:	e7ef      	b.n	82276 <pio_set_peripheral+0x1e>

00082296 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   82296:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   82298:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   8229c:	bf14      	ite	ne
   8229e:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   822a0:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   822a2:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   822a6:	bf14      	ite	ne
   822a8:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   822aa:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   822ac:	f012 0f02 	tst.w	r2, #2
   822b0:	d107      	bne.n	822c2 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   822b2:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   822b6:	bf18      	it	ne
   822b8:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   822bc:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   822be:	6001      	str	r1, [r0, #0]
   822c0:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   822c2:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   822c6:	e7f9      	b.n	822bc <pio_set_input+0x26>

000822c8 <pio_set_output>:
{
   822c8:	b410      	push	{r4}
   822ca:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   822cc:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   822ce:	b944      	cbnz	r4, 822e2 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   822d0:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   822d2:	b143      	cbz	r3, 822e6 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   822d4:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   822d6:	b942      	cbnz	r2, 822ea <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   822d8:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   822da:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   822dc:	6001      	str	r1, [r0, #0]
}
   822de:	bc10      	pop	{r4}
   822e0:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   822e2:	6641      	str	r1, [r0, #100]	; 0x64
   822e4:	e7f5      	b.n	822d2 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   822e6:	6541      	str	r1, [r0, #84]	; 0x54
   822e8:	e7f5      	b.n	822d6 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   822ea:	6301      	str	r1, [r0, #48]	; 0x30
   822ec:	e7f5      	b.n	822da <pio_set_output+0x12>

000822ee <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
   822ee:	f012 0f10 	tst.w	r2, #16
   822f2:	d010      	beq.n	82316 <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
   822f4:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
   822f8:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
   822fc:	bf14      	ite	ne
   822fe:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
   82302:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
   82306:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
   8230a:	bf14      	ite	ne
   8230c:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
   82310:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
   82314:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
   82316:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
   8231a:	4770      	bx	lr

0008231c <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
   8231c:	6401      	str	r1, [r0, #64]	; 0x40
   8231e:	4770      	bx	lr

00082320 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   82320:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   82322:	4770      	bx	lr

00082324 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   82324:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   82326:	4770      	bx	lr

00082328 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   82328:	b570      	push	{r4, r5, r6, lr}
   8232a:	b082      	sub	sp, #8
   8232c:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8232e:	0943      	lsrs	r3, r0, #5
   82330:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   82334:	f203 7307 	addw	r3, r3, #1799	; 0x707
   82338:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   8233a:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   8233e:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   82342:	d031      	beq.n	823a8 <pio_configure_pin+0x80>
   82344:	d816      	bhi.n	82374 <pio_configure_pin+0x4c>
   82346:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8234a:	d01b      	beq.n	82384 <pio_configure_pin+0x5c>
   8234c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   82350:	d116      	bne.n	82380 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   82352:	f000 001f 	and.w	r0, r0, #31
   82356:	2601      	movs	r6, #1
   82358:	4086      	lsls	r6, r0
   8235a:	4632      	mov	r2, r6
   8235c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   82360:	4620      	mov	r0, r4
   82362:	4b22      	ldr	r3, [pc, #136]	; (823ec <pio_configure_pin+0xc4>)
   82364:	4798      	blx	r3
	if (ul_pull_up_enable) {
   82366:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8236a:	bf14      	ite	ne
   8236c:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8236e:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   82370:	2001      	movs	r0, #1
   82372:	e017      	b.n	823a4 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   82374:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   82378:	d021      	beq.n	823be <pio_configure_pin+0x96>
   8237a:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   8237e:	d01e      	beq.n	823be <pio_configure_pin+0x96>
		return 0;
   82380:	2000      	movs	r0, #0
   82382:	e00f      	b.n	823a4 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   82384:	f000 001f 	and.w	r0, r0, #31
   82388:	2601      	movs	r6, #1
   8238a:	4086      	lsls	r6, r0
   8238c:	4632      	mov	r2, r6
   8238e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   82392:	4620      	mov	r0, r4
   82394:	4b15      	ldr	r3, [pc, #84]	; (823ec <pio_configure_pin+0xc4>)
   82396:	4798      	blx	r3
	if (ul_pull_up_enable) {
   82398:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8239c:	bf14      	ite	ne
   8239e:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   823a0:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   823a2:	2001      	movs	r0, #1
}
   823a4:	b002      	add	sp, #8
   823a6:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   823a8:	f000 011f 	and.w	r1, r0, #31
   823ac:	2601      	movs	r6, #1
   823ae:	462a      	mov	r2, r5
   823b0:	fa06 f101 	lsl.w	r1, r6, r1
   823b4:	4620      	mov	r0, r4
   823b6:	4b0e      	ldr	r3, [pc, #56]	; (823f0 <pio_configure_pin+0xc8>)
   823b8:	4798      	blx	r3
	return 1;
   823ba:	4630      	mov	r0, r6
		break;
   823bc:	e7f2      	b.n	823a4 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   823be:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   823c2:	f000 011f 	and.w	r1, r0, #31
   823c6:	2601      	movs	r6, #1
   823c8:	ea05 0306 	and.w	r3, r5, r6
   823cc:	9300      	str	r3, [sp, #0]
   823ce:	f3c5 0380 	ubfx	r3, r5, #2, #1
   823d2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   823d6:	bf14      	ite	ne
   823d8:	2200      	movne	r2, #0
   823da:	2201      	moveq	r2, #1
   823dc:	fa06 f101 	lsl.w	r1, r6, r1
   823e0:	4620      	mov	r0, r4
   823e2:	4c04      	ldr	r4, [pc, #16]	; (823f4 <pio_configure_pin+0xcc>)
   823e4:	47a0      	blx	r4
	return 1;
   823e6:	4630      	mov	r0, r6
		break;
   823e8:	e7dc      	b.n	823a4 <pio_configure_pin+0x7c>
   823ea:	bf00      	nop
   823ec:	00082259 	.word	0x00082259
   823f0:	00082297 	.word	0x00082297
   823f4:	000822c9 	.word	0x000822c9

000823f8 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   823f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   823fc:	4604      	mov	r4, r0
   823fe:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   82400:	4b0e      	ldr	r3, [pc, #56]	; (8243c <pio_handler_process+0x44>)
   82402:	4798      	blx	r3
   82404:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   82406:	4620      	mov	r0, r4
   82408:	4b0d      	ldr	r3, [pc, #52]	; (82440 <pio_handler_process+0x48>)
   8240a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   8240c:	4005      	ands	r5, r0
   8240e:	d013      	beq.n	82438 <pio_handler_process+0x40>
   82410:	4c0c      	ldr	r4, [pc, #48]	; (82444 <pio_handler_process+0x4c>)
   82412:	f104 0660 	add.w	r6, r4, #96	; 0x60
   82416:	e003      	b.n	82420 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   82418:	42b4      	cmp	r4, r6
   8241a:	d00d      	beq.n	82438 <pio_handler_process+0x40>
   8241c:	3410      	adds	r4, #16
		while (status != 0) {
   8241e:	b15d      	cbz	r5, 82438 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   82420:	6820      	ldr	r0, [r4, #0]
   82422:	4540      	cmp	r0, r8
   82424:	d1f8      	bne.n	82418 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   82426:	6861      	ldr	r1, [r4, #4]
   82428:	4229      	tst	r1, r5
   8242a:	d0f5      	beq.n	82418 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8242c:	68e3      	ldr	r3, [r4, #12]
   8242e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   82430:	6863      	ldr	r3, [r4, #4]
   82432:	ea25 0503 	bic.w	r5, r5, r3
   82436:	e7ef      	b.n	82418 <pio_handler_process+0x20>
   82438:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8243c:	00082321 	.word	0x00082321
   82440:	00082325 	.word	0x00082325
   82444:	20070d58 	.word	0x20070d58

00082448 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
   82448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
   8244a:	4c18      	ldr	r4, [pc, #96]	; (824ac <pio_handler_set+0x64>)
   8244c:	6826      	ldr	r6, [r4, #0]
   8244e:	2e06      	cmp	r6, #6
   82450:	d829      	bhi.n	824a6 <pio_handler_set+0x5e>
   82452:	f04f 0c00 	mov.w	ip, #0
   82456:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
   82458:	4f15      	ldr	r7, [pc, #84]	; (824b0 <pio_handler_set+0x68>)
   8245a:	e004      	b.n	82466 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
   8245c:	3401      	adds	r4, #1
   8245e:	b2e4      	uxtb	r4, r4
   82460:	46a4      	mov	ip, r4
   82462:	42a6      	cmp	r6, r4
   82464:	d309      	bcc.n	8247a <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
   82466:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
   82468:	0125      	lsls	r5, r4, #4
   8246a:	597d      	ldr	r5, [r7, r5]
   8246c:	428d      	cmp	r5, r1
   8246e:	d1f5      	bne.n	8245c <pio_handler_set+0x14>
   82470:	eb07 1504 	add.w	r5, r7, r4, lsl #4
   82474:	686d      	ldr	r5, [r5, #4]
   82476:	4295      	cmp	r5, r2
   82478:	d1f0      	bne.n	8245c <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
   8247a:	4d0d      	ldr	r5, [pc, #52]	; (824b0 <pio_handler_set+0x68>)
   8247c:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
   82480:	eb05 040e 	add.w	r4, r5, lr
   82484:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
   82488:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
   8248a:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
   8248c:	9906      	ldr	r1, [sp, #24]
   8248e:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
   82490:	3601      	adds	r6, #1
   82492:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
   82494:	bf04      	itt	eq
   82496:	4905      	ldreq	r1, [pc, #20]	; (824ac <pio_handler_set+0x64>)
   82498:	600e      	streq	r6, [r1, #0]
   8249a:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
   8249c:	461a      	mov	r2, r3
   8249e:	4b05      	ldr	r3, [pc, #20]	; (824b4 <pio_handler_set+0x6c>)
   824a0:	4798      	blx	r3

	return 0;
   824a2:	2000      	movs	r0, #0
   824a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
   824a6:	2001      	movs	r0, #1
}
   824a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   824aa:	bf00      	nop
   824ac:	20070dc8 	.word	0x20070dc8
   824b0:	20070d58 	.word	0x20070d58
   824b4:	000822ef 	.word	0x000822ef

000824b8 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   824b8:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   824ba:	210b      	movs	r1, #11
   824bc:	4801      	ldr	r0, [pc, #4]	; (824c4 <PIOA_Handler+0xc>)
   824be:	4b02      	ldr	r3, [pc, #8]	; (824c8 <PIOA_Handler+0x10>)
   824c0:	4798      	blx	r3
   824c2:	bd08      	pop	{r3, pc}
   824c4:	400e0e00 	.word	0x400e0e00
   824c8:	000823f9 	.word	0x000823f9

000824cc <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   824cc:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   824ce:	210c      	movs	r1, #12
   824d0:	4801      	ldr	r0, [pc, #4]	; (824d8 <PIOB_Handler+0xc>)
   824d2:	4b02      	ldr	r3, [pc, #8]	; (824dc <PIOB_Handler+0x10>)
   824d4:	4798      	blx	r3
   824d6:	bd08      	pop	{r3, pc}
   824d8:	400e1000 	.word	0x400e1000
   824dc:	000823f9 	.word	0x000823f9

000824e0 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   824e0:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   824e2:	210d      	movs	r1, #13
   824e4:	4801      	ldr	r0, [pc, #4]	; (824ec <PIOC_Handler+0xc>)
   824e6:	4b02      	ldr	r3, [pc, #8]	; (824f0 <PIOC_Handler+0x10>)
   824e8:	4798      	blx	r3
   824ea:	bd08      	pop	{r3, pc}
   824ec:	400e1200 	.word	0x400e1200
   824f0:	000823f9 	.word	0x000823f9

000824f4 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   824f4:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   824f6:	210e      	movs	r1, #14
   824f8:	4801      	ldr	r0, [pc, #4]	; (82500 <PIOD_Handler+0xc>)
   824fa:	4b02      	ldr	r3, [pc, #8]	; (82504 <PIOD_Handler+0x10>)
   824fc:	4798      	blx	r3
   824fe:	bd08      	pop	{r3, pc}
   82500:	400e1400 	.word	0x400e1400
   82504:	000823f9 	.word	0x000823f9

00082508 <pmc_enable_upll_clock>:
/**
 * \brief Enable UPLL clock.
 */
void pmc_enable_upll_clock(void)
{
	PMC->CKGR_UCKR = CKGR_UCKR_UPLLCOUNT(3) | CKGR_UCKR_UPLLEN;
   82508:	f44f 1244 	mov.w	r2, #3211264	; 0x310000
   8250c:	4b03      	ldr	r3, [pc, #12]	; (8251c <pmc_enable_upll_clock+0x14>)
   8250e:	61da      	str	r2, [r3, #28]

	/* Wait UTMI PLL Lock Status */
	while (!(PMC->PMC_SR & PMC_SR_LOCKU));
   82510:	461a      	mov	r2, r3
   82512:	6e93      	ldr	r3, [r2, #104]	; 0x68
   82514:	f013 0f40 	tst.w	r3, #64	; 0x40
   82518:	d0fb      	beq.n	82512 <pmc_enable_upll_clock+0xa>
}
   8251a:	4770      	bx	lr
   8251c:	400e0600 	.word	0x400e0600

00082520 <pmc_enable_periph_clk>:
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
   82520:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   82524:	4b05      	ldr	r3, [pc, #20]	; (8253c <pmc_enable_periph_clk+0x1c>)
   82526:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
   8252a:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   8252e:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
	PMC->PMC_PCR = pcr;
   82532:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
#endif
	}

	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
   82536:	2000      	movs	r0, #0
   82538:	4770      	bx	lr
   8253a:	bf00      	nop
   8253c:	400e0600 	.word	0x400e0600

00082540 <pmc_switch_udpck_to_upllck>:
 *
 * \param ul_usbdiv Clock divisor.
 */
void pmc_switch_udpck_to_upllck(uint32_t ul_usbdiv)
{
	PMC->PMC_USB = PMC_USB_USBS | PMC_USB_USBDIV(ul_usbdiv);
   82540:	0200      	lsls	r0, r0, #8
   82542:	f400 6070 	and.w	r0, r0, #3840	; 0xf00
   82546:	f040 0001 	orr.w	r0, r0, #1
   8254a:	4b01      	ldr	r3, [pc, #4]	; (82550 <pmc_switch_udpck_to_upllck+0x10>)
   8254c:	6398      	str	r0, [r3, #56]	; 0x38
   8254e:	4770      	bx	lr
   82550:	400e0600 	.word	0x400e0600

00082554 <pmc_enable_udpck>:
#if (SAM3S || SAM4S || SAM4E || SAMG55)
	PMC->PMC_SCER = PMC_SCER_UDP;
#elif (SAMV71 || SAMV70 || SAME70 || SAMS70)
	PMC->PMC_SCER = PMC_SCER_USBCLK;
#else
	PMC->PMC_SCER = PMC_SCER_UOTGCLK;
   82554:	2220      	movs	r2, #32
   82556:	4b01      	ldr	r3, [pc, #4]	; (8255c <pmc_enable_udpck+0x8>)
   82558:	601a      	str	r2, [r3, #0]
   8255a:	4770      	bx	lr
   8255c:	400e0600 	.word	0x400e0600

00082560 <pmc_set_fast_startup_input>:
 * \param ul_inputs Wake up inputs to enable.
 */
void pmc_set_fast_startup_input(uint32_t ul_inputs)
{
	ul_inputs &= PMC_FAST_STARTUP_Msk;
	PMC->PMC_FSMR |= ul_inputs;
   82560:	4b03      	ldr	r3, [pc, #12]	; (82570 <pmc_set_fast_startup_input+0x10>)
   82562:	6f1a      	ldr	r2, [r3, #112]	; 0x70
	ul_inputs &= PMC_FAST_STARTUP_Msk;
   82564:	f3c0 0012 	ubfx	r0, r0, #0, #19
	PMC->PMC_FSMR |= ul_inputs;
   82568:	4310      	orrs	r0, r2
   8256a:	6718      	str	r0, [r3, #112]	; 0x70
   8256c:	4770      	bx	lr
   8256e:	bf00      	nop
   82570:	400e0600 	.word	0x400e0600

00082574 <pmc_is_wakeup_clocks_restored>:
	}
}

bool pmc_is_wakeup_clocks_restored(void)
{
	return !b_is_sleep_clock_used;
   82574:	4b02      	ldr	r3, [pc, #8]	; (82580 <pmc_is_wakeup_clocks_restored+0xc>)
   82576:	7818      	ldrb	r0, [r3, #0]
}
   82578:	f080 0001 	eor.w	r0, r0, #1
   8257c:	4770      	bx	lr
   8257e:	bf00      	nop
   82580:	20070dcc 	.word	0x20070dcc

00082584 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   82584:	e7fe      	b.n	82584 <Dummy_Handler>
	...

00082588 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   82588:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   8258a:	4b1c      	ldr	r3, [pc, #112]	; (825fc <Reset_Handler+0x74>)
   8258c:	4a1c      	ldr	r2, [pc, #112]	; (82600 <Reset_Handler+0x78>)
   8258e:	429a      	cmp	r2, r3
   82590:	d010      	beq.n	825b4 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   82592:	4b1c      	ldr	r3, [pc, #112]	; (82604 <Reset_Handler+0x7c>)
   82594:	4a19      	ldr	r2, [pc, #100]	; (825fc <Reset_Handler+0x74>)
   82596:	429a      	cmp	r2, r3
   82598:	d20c      	bcs.n	825b4 <Reset_Handler+0x2c>
   8259a:	3b01      	subs	r3, #1
   8259c:	1a9b      	subs	r3, r3, r2
   8259e:	f023 0303 	bic.w	r3, r3, #3
   825a2:	3304      	adds	r3, #4
   825a4:	4413      	add	r3, r2
   825a6:	4916      	ldr	r1, [pc, #88]	; (82600 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   825a8:	f851 0b04 	ldr.w	r0, [r1], #4
   825ac:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   825b0:	429a      	cmp	r2, r3
   825b2:	d1f9      	bne.n	825a8 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   825b4:	4b14      	ldr	r3, [pc, #80]	; (82608 <Reset_Handler+0x80>)
   825b6:	4a15      	ldr	r2, [pc, #84]	; (8260c <Reset_Handler+0x84>)
   825b8:	429a      	cmp	r2, r3
   825ba:	d20a      	bcs.n	825d2 <Reset_Handler+0x4a>
   825bc:	3b01      	subs	r3, #1
   825be:	1a9b      	subs	r3, r3, r2
   825c0:	f023 0303 	bic.w	r3, r3, #3
   825c4:	3304      	adds	r3, #4
   825c6:	4413      	add	r3, r2
		*pDest++ = 0;
   825c8:	2100      	movs	r1, #0
   825ca:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   825ce:	4293      	cmp	r3, r2
   825d0:	d1fb      	bne.n	825ca <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   825d2:	4b0f      	ldr	r3, [pc, #60]	; (82610 <Reset_Handler+0x88>)
   825d4:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   825d8:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   825dc:	490d      	ldr	r1, [pc, #52]	; (82614 <Reset_Handler+0x8c>)
   825de:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   825e0:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   825e4:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   825e8:	d203      	bcs.n	825f2 <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   825ea:	688b      	ldr	r3, [r1, #8]
   825ec:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   825f0:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   825f2:	4b09      	ldr	r3, [pc, #36]	; (82618 <Reset_Handler+0x90>)
   825f4:	4798      	blx	r3

	/* Branch to main function */
	main();
   825f6:	4b09      	ldr	r3, [pc, #36]	; (8261c <Reset_Handler+0x94>)
   825f8:	4798      	blx	r3
   825fa:	e7fe      	b.n	825fa <Reset_Handler+0x72>
   825fc:	20070000 	.word	0x20070000
   82600:	0008763c 	.word	0x0008763c
   82604:	20070b90 	.word	0x20070b90
   82608:	20070f44 	.word	0x20070f44
   8260c:	20070b90 	.word	0x20070b90
   82610:	00080000 	.word	0x00080000
   82614:	e000ed00 	.word	0xe000ed00
   82618:	00082a8d 	.word	0x00082a8d
   8261c:	000829b5 	.word	0x000829b5

00082620 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   82620:	4b0a      	ldr	r3, [pc, #40]	; (8264c <_sbrk+0x2c>)
   82622:	681b      	ldr	r3, [r3, #0]
   82624:	b153      	cbz	r3, 8263c <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   82626:	4b09      	ldr	r3, [pc, #36]	; (8264c <_sbrk+0x2c>)
   82628:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   8262a:	181a      	adds	r2, r3, r0
   8262c:	4908      	ldr	r1, [pc, #32]	; (82650 <_sbrk+0x30>)
   8262e:	4291      	cmp	r1, r2
   82630:	db08      	blt.n	82644 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   82632:	4610      	mov	r0, r2
   82634:	4a05      	ldr	r2, [pc, #20]	; (8264c <_sbrk+0x2c>)
   82636:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   82638:	4618      	mov	r0, r3
   8263a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   8263c:	4a05      	ldr	r2, [pc, #20]	; (82654 <_sbrk+0x34>)
   8263e:	4b03      	ldr	r3, [pc, #12]	; (8264c <_sbrk+0x2c>)
   82640:	601a      	str	r2, [r3, #0]
   82642:	e7f0      	b.n	82626 <_sbrk+0x6>
		return (caddr_t) -1;	
   82644:	f04f 30ff 	mov.w	r0, #4294967295
}
   82648:	4770      	bx	lr
   8264a:	bf00      	nop
   8264c:	20070dd0 	.word	0x20070dd0
   82650:	20087ffc 	.word	0x20087ffc
   82654:	20072f48 	.word	0x20072f48

00082658 <spi_init>:
/**
 * \brief Initialize SPI as master.
 */

void spi_init(void)
{
   82658:	b538      	push	{r3, r4, r5, lr}
	
	//Assign I/O lines to peripheral
	gpio_configure_pin(SPI0_MISO_GPIO, SPI0_MISO_FLAGS);
   8265a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8265e:	2019      	movs	r0, #25
   82660:	4c20      	ldr	r4, [pc, #128]	; (826e4 <spi_init+0x8c>)
   82662:	47a0      	blx	r4
	gpio_configure_pin(SPI0_MOSI_GPIO, SPI0_MOSI_FLAGS);
   82664:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   82668:	201a      	movs	r0, #26
   8266a:	47a0      	blx	r4
	gpio_configure_pin(SPI0_SPCK_GPIO, SPI0_SPCK_FLAGS);
   8266c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   82670:	201b      	movs	r0, #27
   82672:	47a0      	blx	r4
	gpio_configure_pin(SPI0_NPCS0_GPIO, SPI0_NPCS0_FLAGS);
   82674:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   82678:	201c      	movs	r0, #28
   8267a:	47a0      	blx	r4

	spi_enable_clock(SPI_MASTER_BASE);
   8267c:	4c1a      	ldr	r4, [pc, #104]	; (826e8 <spi_init+0x90>)
   8267e:	4620      	mov	r0, r4
   82680:	4b1a      	ldr	r3, [pc, #104]	; (826ec <spi_init+0x94>)
   82682:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIDIS;
   82684:	2302      	movs	r3, #2
   82686:	6023      	str	r3, [r4, #0]
	p_spi->SPI_CR = SPI_CR_SWRST;
   82688:	2380      	movs	r3, #128	; 0x80
   8268a:	6023      	str	r3, [r4, #0]
	p_spi->SPI_CR = SPI_CR_LASTXFER;
   8268c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   82690:	6023      	str	r3, [r4, #0]
	p_spi->SPI_MR |= SPI_MR_MSTR;
   82692:	6863      	ldr	r3, [r4, #4]
   82694:	f043 0301 	orr.w	r3, r3, #1
   82698:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
   8269a:	6863      	ldr	r3, [r4, #4]
   8269c:	f043 0310 	orr.w	r3, r3, #16
   826a0:	6063      	str	r3, [r4, #4]
	spi_reset(SPI_MASTER_BASE);
	
	spi_set_lastxfer(SPI_MASTER_BASE);
	spi_set_master_mode(SPI_MASTER_BASE);
	spi_disable_mode_fault_detect(SPI_MASTER_BASE);
	spi_set_peripheral_chip_select_value(SPI_MASTER_BASE, SPI_CHIP_PCS);
   826a2:	210e      	movs	r1, #14
   826a4:	4620      	mov	r0, r4
   826a6:	4b12      	ldr	r3, [pc, #72]	; (826f0 <spi_init+0x98>)
   826a8:	4798      	blx	r3
	spi_set_clock_polarity(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_CLK_POLARITY);
   826aa:	2200      	movs	r2, #0
   826ac:	4611      	mov	r1, r2
   826ae:	4620      	mov	r0, r4
   826b0:	4b10      	ldr	r3, [pc, #64]	; (826f4 <spi_init+0x9c>)
   826b2:	4798      	blx	r3
	spi_set_clock_phase(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_CLK_PHASE);
   826b4:	2201      	movs	r2, #1
   826b6:	2100      	movs	r1, #0
   826b8:	4620      	mov	r0, r4
   826ba:	4b0f      	ldr	r3, [pc, #60]	; (826f8 <spi_init+0xa0>)
   826bc:	4798      	blx	r3
	spi_set_bits_per_transfer(SPI_MASTER_BASE, SPI_CHIP_SEL,
   826be:	2200      	movs	r2, #0
   826c0:	4611      	mov	r1, r2
   826c2:	4620      	mov	r0, r4
   826c4:	4b0d      	ldr	r3, [pc, #52]	; (826fc <spi_init+0xa4>)
   826c6:	4798      	blx	r3
	SPI_CSR_BITS_8_BIT);
	spi_set_baudrate_div(SPI_MASTER_BASE, SPI_CHIP_SEL,(sysclk_get_cpu_hz() / gs_ul_spi_clock));
   826c8:	222a      	movs	r2, #42	; 0x2a
   826ca:	2100      	movs	r1, #0
   826cc:	4620      	mov	r0, r4
   826ce:	4b0c      	ldr	r3, [pc, #48]	; (82700 <spi_init+0xa8>)
   826d0:	4798      	blx	r3
	spi_set_transfer_delay(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_DLYBS,SPI_DLYBCT);
   826d2:	2310      	movs	r3, #16
   826d4:	2240      	movs	r2, #64	; 0x40
   826d6:	2100      	movs	r1, #0
   826d8:	4620      	mov	r0, r4
   826da:	4d0a      	ldr	r5, [pc, #40]	; (82704 <spi_init+0xac>)
   826dc:	47a8      	blx	r5
	p_spi->SPI_CR = SPI_CR_SPIEN;
   826de:	2301      	movs	r3, #1
   826e0:	6023      	str	r3, [r4, #0]
   826e2:	bd38      	pop	{r3, r4, r5, pc}
   826e4:	00082329 	.word	0x00082329
   826e8:	40008000 	.word	0x40008000
   826ec:	00082111 	.word	0x00082111
   826f0:	0008212d 	.word	0x0008212d
   826f4:	000821a5 	.word	0x000821a5
   826f8:	000821c3 	.word	0x000821c3
   826fc:	000821e1 	.word	0x000821e1
   82700:	000821f5 	.word	0x000821f5
   82704:	0008221b 	.word	0x0008221b

00082708 <spi_sendrecv>:
	spi_enable(SPI_MASTER_BASE);
}

uint8_t spi_sendrecv(uint8_t byte)
{
   82708:	b510      	push	{r4, lr}
   8270a:	b082      	sub	sp, #8
	uint8_t data;
	uint8_t uc_pcs;
	
	spi_write(SPI_MASTER_BASE, byte, 0, 0);
   8270c:	2300      	movs	r3, #0
   8270e:	461a      	mov	r2, r3
   82710:	4601      	mov	r1, r0
   82712:	4809      	ldr	r0, [pc, #36]	; (82738 <spi_sendrecv+0x30>)
   82714:	4c09      	ldr	r4, [pc, #36]	; (8273c <spi_sendrecv+0x34>)
   82716:	47a0      	blx	r4
 *
 * \return SPI status register value.
 */
static inline uint32_t spi_read_status(Spi *p_spi)
{
	return p_spi->SPI_SR;
   82718:	4a07      	ldr	r2, [pc, #28]	; (82738 <spi_sendrecv+0x30>)
   8271a:	6913      	ldr	r3, [r2, #16]
	/* Wait transfer done. */
	while ((spi_read_status(SPI_MASTER_BASE) & SPI_SR_RDRF) == 0);
   8271c:	f013 0f01 	tst.w	r3, #1
   82720:	d0fb      	beq.n	8271a <spi_sendrecv+0x12>
	spi_read(SPI_MASTER_BASE, &data, &uc_pcs);
   82722:	f10d 0206 	add.w	r2, sp, #6
   82726:	f10d 0107 	add.w	r1, sp, #7
   8272a:	4803      	ldr	r0, [pc, #12]	; (82738 <spi_sendrecv+0x30>)
   8272c:	4b04      	ldr	r3, [pc, #16]	; (82740 <spi_sendrecv+0x38>)
   8272e:	4798      	blx	r3
	return data;
}
   82730:	f89d 0007 	ldrb.w	r0, [sp, #7]
   82734:	b002      	add	sp, #8
   82736:	bd10      	pop	{r4, pc}
   82738:	40008000 	.word	0x40008000
   8273c:	00082171 	.word	0x00082171
   82740:	00082143 	.word	0x00082143

00082744 <ADS_updateChannelData>:
	delay_ms(100);

	return gIDval;
}

void ADS_updateChannelData(){
   82744:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82748:	b086      	sub	sp, #24
   8274a:	4b20      	ldr	r3, [pc, #128]	; (827cc <ADS_updateChannelData+0x88>)
   8274c:	f103 0124 	add.w	r1, r3, #36	; 0x24
	uint8_t inByte;
	int i,j;				// iterator in loop
	for(i = 0; i < 9; i++){
		channelData[i] = 0;
   82750:	2200      	movs	r2, #0
   82752:	f843 2f04 	str.w	r2, [r3, #4]!
	for(i = 0; i < 9; i++){
   82756:	428b      	cmp	r3, r1
   82758:	d1fb      	bne.n	82752 <ADS_updateChannelData+0xe>
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8275a:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   8275e:	4b1c      	ldr	r3, [pc, #112]	; (827d0 <ADS_updateChannelData+0x8c>)
   82760:	631a      	str	r2, [r3, #48]	; 0x30
   82762:	4d1c      	ldr	r5, [pc, #112]	; (827d4 <ADS_updateChannelData+0x90>)
   82764:	f105 0824 	add.w	r8, r5, #36	; 0x24

	ioport_set_pin_level(CS, IOPORT_PIN_LEVEL_HIGH);
	
	for(i = 0; i < 9; i++){
		for( j=0; j<3; j++){		//  read 24 bits of channel data, convert into one big byte
			inByte = spi_sendrecv(0x00);
   82768:	2700      	movs	r7, #0
   8276a:	4e1b      	ldr	r6, [pc, #108]	; (827d8 <ADS_updateChannelData+0x94>)
   8276c:	e002      	b.n	82774 <ADS_updateChannelData+0x30>
   8276e:	3504      	adds	r5, #4
	for(i = 0; i < 9; i++){
   82770:	45a8      	cmp	r8, r5
   82772:	d009      	beq.n	82788 <ADS_updateChannelData+0x44>
void ADS_updateChannelData(){
   82774:	2403      	movs	r4, #3
			inByte = spi_sendrecv(0x00);
   82776:	4638      	mov	r0, r7
   82778:	47b0      	blx	r6
			channelData[i] = (channelData[i]<<8) | inByte;
   8277a:	682b      	ldr	r3, [r5, #0]
   8277c:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
   82780:	6028      	str	r0, [r5, #0]
		for( j=0; j<3; j++){		//  read 24 bits of channel data, convert into one big byte
   82782:	3c01      	subs	r4, #1
   82784:	d1f7      	bne.n	82776 <ADS_updateChannelData+0x32>
   82786:	e7f2      	b.n	8276e <ADS_updateChannelData+0x2a>
		}
	}

	MessageLength = sprintf(DataToSend, "%02X,%02X,%02X,%02X,%02X,%02X,%02X,%02X\n\r", channelData[1],channelData[2],channelData[3],channelData[4],channelData[5],channelData[6],channelData[7],channelData[8]);
   82788:	4912      	ldr	r1, [pc, #72]	; (827d4 <ADS_updateChannelData+0x90>)
   8278a:	688b      	ldr	r3, [r1, #8]
   8278c:	684a      	ldr	r2, [r1, #4]
   8278e:	4c13      	ldr	r4, [pc, #76]	; (827dc <ADS_updateChannelData+0x98>)
   82790:	6a08      	ldr	r0, [r1, #32]
   82792:	9005      	str	r0, [sp, #20]
   82794:	69c8      	ldr	r0, [r1, #28]
   82796:	9004      	str	r0, [sp, #16]
   82798:	6988      	ldr	r0, [r1, #24]
   8279a:	9003      	str	r0, [sp, #12]
   8279c:	6948      	ldr	r0, [r1, #20]
   8279e:	9002      	str	r0, [sp, #8]
   827a0:	6908      	ldr	r0, [r1, #16]
   827a2:	9001      	str	r0, [sp, #4]
   827a4:	68c9      	ldr	r1, [r1, #12]
   827a6:	9100      	str	r1, [sp, #0]
   827a8:	490d      	ldr	r1, [pc, #52]	; (827e0 <ADS_updateChannelData+0x9c>)
   827aa:	4620      	mov	r0, r4
   827ac:	4d0d      	ldr	r5, [pc, #52]	; (827e4 <ADS_updateChannelData+0xa0>)
   827ae:	47a8      	blx	r5
   827b0:	4b0d      	ldr	r3, [pc, #52]	; (827e8 <ADS_updateChannelData+0xa4>)
   827b2:	7018      	strb	r0, [r3, #0]
	udi_cdc_write_buf(DataToSend, MessageLength);
   827b4:	b2c1      	uxtb	r1, r0
   827b6:	4620      	mov	r0, r4
   827b8:	4b0c      	ldr	r3, [pc, #48]	; (827ec <ADS_updateChannelData+0xa8>)
   827ba:	4798      	blx	r3
   827bc:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   827c0:	4b03      	ldr	r3, [pc, #12]	; (827d0 <ADS_updateChannelData+0x8c>)
   827c2:	631a      	str	r2, [r3, #48]	; 0x30

	ioport_set_pin_level(CS, IOPORT_PIN_LEVEL_HIGH);
}
   827c4:	b006      	add	sp, #24
   827c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   827ca:	bf00      	nop
   827cc:	20070e50 	.word	0x20070e50
   827d0:	400e1200 	.word	0x400e1200
   827d4:	20070e54 	.word	0x20070e54
   827d8:	00082709 	.word	0x00082709
   827dc:	20070e2c 	.word	0x20070e2c
   827e0:	00087340 	.word	0x00087340
   827e4:	00082c65 	.word	0x00082c65
   827e8:	20070dd5 	.word	0x20070dd5
   827ec:	0008074d 	.word	0x0008074d

000827f0 <ADS_SEND_COMMAND>:
{
   827f0:	b538      	push	{r3, r4, r5, lr}
   827f2:	4c05      	ldr	r4, [pc, #20]	; (82808 <ADS_SEND_COMMAND+0x18>)
   827f4:	f04f 5500 	mov.w	r5, #536870912	; 0x20000000
   827f8:	6325      	str	r5, [r4, #48]	; 0x30
	spi_sendrecv(cmd); 		//  opcode1
   827fa:	4b04      	ldr	r3, [pc, #16]	; (8280c <ADS_SEND_COMMAND+0x1c>)
   827fc:	4798      	blx	r3
	delay_us(1);
   827fe:	2006      	movs	r0, #6
   82800:	4b03      	ldr	r3, [pc, #12]	; (82810 <ADS_SEND_COMMAND+0x20>)
   82802:	4798      	blx	r3
   82804:	6325      	str	r5, [r4, #48]	; 0x30
   82806:	bd38      	pop	{r3, r4, r5, pc}
   82808:	400e1200 	.word	0x400e1200
   8280c:	00082709 	.word	0x00082709
   82810:	20070001 	.word	0x20070001

00082814 <ADS_RREG>:
{
   82814:	b570      	push	{r4, r5, r6, lr}
   82816:	4d09      	ldr	r5, [pc, #36]	; (8283c <ADS_RREG+0x28>)
   82818:	f04f 5600 	mov.w	r6, #536870912	; 0x20000000
   8281c:	632e      	str	r6, [r5, #48]	; 0x30
	spi_sendrecv(RREG | reg);
   8281e:	f040 0020 	orr.w	r0, r0, #32
   82822:	4c07      	ldr	r4, [pc, #28]	; (82840 <ADS_RREG+0x2c>)
   82824:	47a0      	blx	r4
	spi_sendrecv(0);
   82826:	2000      	movs	r0, #0
   82828:	47a0      	blx	r4
	vall = spi_sendrecv(0);
   8282a:	2000      	movs	r0, #0
   8282c:	47a0      	blx	r4
   8282e:	4604      	mov	r4, r0
	delay_us(1);
   82830:	2006      	movs	r0, #6
   82832:	4b04      	ldr	r3, [pc, #16]	; (82844 <ADS_RREG+0x30>)
   82834:	4798      	blx	r3
   82836:	632e      	str	r6, [r5, #48]	; 0x30
}
   82838:	4620      	mov	r0, r4
   8283a:	bd70      	pop	{r4, r5, r6, pc}
   8283c:	400e1200 	.word	0x400e1200
   82840:	00082709 	.word	0x00082709
   82844:	20070001 	.word	0x20070001

00082848 <ADS_WREG>:
{
   82848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8284a:	460f      	mov	r7, r1
   8284c:	4d06      	ldr	r5, [pc, #24]	; (82868 <ADS_WREG+0x20>)
   8284e:	f04f 5600 	mov.w	r6, #536870912	; 0x20000000
   82852:	632e      	str	r6, [r5, #48]	; 0x30
	spi_sendrecv(WREG |reg);
   82854:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   82858:	4c04      	ldr	r4, [pc, #16]	; (8286c <ADS_WREG+0x24>)
   8285a:	47a0      	blx	r4
	spi_sendrecv(0x00);
   8285c:	2000      	movs	r0, #0
   8285e:	47a0      	blx	r4
	spi_sendrecv(val);
   82860:	4638      	mov	r0, r7
   82862:	47a0      	blx	r4
   82864:	632e      	str	r6, [r5, #48]	; 0x30
   82866:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82868:	400e1200 	.word	0x400e1200
   8286c:	00082709 	.word	0x00082709

00082870 <READ_ID>:
{
   82870:	b570      	push	{r4, r5, r6, lr}
	delay_ms(400);
   82872:	4808      	ldr	r0, [pc, #32]	; (82894 <READ_ID+0x24>)
   82874:	4c08      	ldr	r4, [pc, #32]	; (82898 <READ_ID+0x28>)
   82876:	47a0      	blx	r4
	ADS_SEND_COMMAND(SDATAC);
   82878:	2011      	movs	r0, #17
   8287a:	4b08      	ldr	r3, [pc, #32]	; (8289c <READ_ID+0x2c>)
   8287c:	4798      	blx	r3
	delay_ms(100);
   8287e:	4d08      	ldr	r5, [pc, #32]	; (828a0 <READ_ID+0x30>)
   82880:	4628      	mov	r0, r5
   82882:	47a0      	blx	r4
	gIDval = ADS_RREG(ID);
   82884:	2000      	movs	r0, #0
   82886:	4b07      	ldr	r3, [pc, #28]	; (828a4 <READ_ID+0x34>)
   82888:	4798      	blx	r3
   8288a:	4606      	mov	r6, r0
	delay_ms(100);
   8288c:	4628      	mov	r0, r5
   8288e:	47a0      	blx	r4
}
   82890:	4630      	mov	r0, r6
   82892:	bd70      	pop	{r4, r5, r6, pc}
   82894:	00249f00 	.word	0x00249f00
   82898:	20070001 	.word	0x20070001
   8289c:	000827f1 	.word	0x000827f1
   828a0:	000927c0 	.word	0x000927c0
   828a4:	00082815 	.word	0x00082815

000828a8 <ADS1298_Init>:

void ADS1298_Init()
{
   828a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   828ac:	b083      	sub	sp, #12
	// CS (0) | Reset (1) | Start (2) | CLKSEL (3)
	delay_ms(100);
   828ae:	4d36      	ldr	r5, [pc, #216]	; (82988 <ADS1298_Init+0xe0>)
   828b0:	4628      	mov	r0, r5
   828b2:	4c36      	ldr	r4, [pc, #216]	; (8298c <ADS1298_Init+0xe4>)
   828b4:	47a0      	blx	r4
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   828b6:	4f36      	ldr	r7, [pc, #216]	; (82990 <ADS1298_Init+0xe8>)
   828b8:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
   828bc:	637e      	str	r6, [r7, #52]	; 0x34
	ioport_set_pin_level(ADS_RESET, IOPORT_PIN_LEVEL_LOW);
	delay_us(10);
   828be:	203c      	movs	r0, #60	; 0x3c
   828c0:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   828c2:	633e      	str	r6, [r7, #48]	; 0x30
	ioport_set_pin_level(ADS_RESET, IOPORT_PIN_LEVEL_HIGH);
	delay_ms(500);
   828c4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 829ac <ADS1298_Init+0x104>
   828c8:	4648      	mov	r0, r9
   828ca:	47a0      	blx	r4

	ADS_SEND_COMMAND(SDATAC);
   828cc:	2011      	movs	r0, #17
   828ce:	f8df 80e0 	ldr.w	r8, [pc, #224]	; 829b0 <ADS1298_Init+0x108>
   828d2:	47c0      	blx	r8
	delay_ms(100);
   828d4:	4628      	mov	r0, r5
   828d6:	47a0      	blx	r4

	ADS_WREG(CONFIG3,0xC0);
   828d8:	21c0      	movs	r1, #192	; 0xc0
   828da:	2003      	movs	r0, #3
   828dc:	4e2d      	ldr	r6, [pc, #180]	; (82994 <ADS1298_Init+0xec>)
   828de:	47b0      	blx	r6
	delay_ms(500);
   828e0:	4648      	mov	r0, r9
   828e2:	47a0      	blx	r4

	ADS_WREG(CONFIG1,0x06); //04 = 100,03 = 2000, 05 = 500, 06 = 250
   828e4:	2106      	movs	r1, #6
   828e6:	2001      	movs	r0, #1
   828e8:	47b0      	blx	r6
	delay_ms(100);
   828ea:	4628      	mov	r0, r5
   828ec:	47a0      	blx	r4

	ADS_WREG(CH1SET,0x10);
   828ee:	2110      	movs	r1, #16
   828f0:	2005      	movs	r0, #5
   828f2:	47b0      	blx	r6
	delay_ms(100);
   828f4:	4628      	mov	r0, r5
   828f6:	47a0      	blx	r4
	ADS_WREG(CH2SET,0x10);
   828f8:	2110      	movs	r1, #16
   828fa:	2006      	movs	r0, #6
   828fc:	47b0      	blx	r6
	delay_ms(100);
   828fe:	4628      	mov	r0, r5
   82900:	47a0      	blx	r4
	ADS_WREG(CH3SET,0x91);
   82902:	2191      	movs	r1, #145	; 0x91
   82904:	2007      	movs	r0, #7
   82906:	47b0      	blx	r6
	delay_ms(100);
   82908:	4628      	mov	r0, r5
   8290a:	47a0      	blx	r4
	ADS_WREG(CH4SET,0x91);
   8290c:	2191      	movs	r1, #145	; 0x91
   8290e:	2008      	movs	r0, #8
   82910:	47b0      	blx	r6
	delay_ms(100);
   82912:	4628      	mov	r0, r5
   82914:	47a0      	blx	r4
	ADS_WREG(CH5SET,0x91);
   82916:	2191      	movs	r1, #145	; 0x91
   82918:	2009      	movs	r0, #9
   8291a:	47b0      	blx	r6
	delay_ms(100);
   8291c:	4628      	mov	r0, r5
   8291e:	47a0      	blx	r4
	ADS_WREG(CH6SET,0x91);
   82920:	2191      	movs	r1, #145	; 0x91
   82922:	200a      	movs	r0, #10
   82924:	47b0      	blx	r6
	delay_ms(100);
   82926:	4628      	mov	r0, r5
   82928:	47a0      	blx	r4
	ADS_WREG(CH7SET,0x91);
   8292a:	2191      	movs	r1, #145	; 0x91
   8292c:	200b      	movs	r0, #11
   8292e:	47b0      	blx	r6
	delay_ms(100);
   82930:	4628      	mov	r0, r5
   82932:	47a0      	blx	r4
	ADS_WREG(CH8SET,0x91);
   82934:	2191      	movs	r1, #145	; 0x91
   82936:	200c      	movs	r0, #12
   82938:	47b0      	blx	r6
	delay_ms(100);
   8293a:	4628      	mov	r0, r5
   8293c:	47a0      	blx	r4

	ADS_WREG(GPIO, 0x00);
   8293e:	2100      	movs	r1, #0
   82940:	2014      	movs	r0, #20
   82942:	47b0      	blx	r6
	delay_ms(100);
   82944:	4628      	mov	r0, r5
   82946:	47a0      	blx	r4
   82948:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
   8294c:	633b      	str	r3, [r7, #48]	; 0x30

	ioport_set_pin_level(ADS_START, IOPORT_PIN_LEVEL_HIGH);

	ADS_SEND_COMMAND(RDATAC);
   8294e:	2010      	movs	r0, #16
   82950:	47c0      	blx	r8
	
	pio_set_input(PIOC, PIO_PA10, DISABLE);												//init drdy interrupt
   82952:	2200      	movs	r2, #0
   82954:	f44f 6180 	mov.w	r1, #1024	; 0x400
   82958:	4638      	mov	r0, r7
   8295a:	4b0f      	ldr	r3, [pc, #60]	; (82998 <ADS1298_Init+0xf0>)
   8295c:	4798      	blx	r3
	pio_handler_set(PIOC, ID_PIOC, PIO_PC25, PIO_IT_FALL_EDGE, ADS_updateChannelData);
   8295e:	4b0f      	ldr	r3, [pc, #60]	; (8299c <ADS1298_Init+0xf4>)
   82960:	9300      	str	r3, [sp, #0]
   82962:	2350      	movs	r3, #80	; 0x50
   82964:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   82968:	210d      	movs	r1, #13
   8296a:	4638      	mov	r0, r7
   8296c:	4c0c      	ldr	r4, [pc, #48]	; (829a0 <ADS1298_Init+0xf8>)
   8296e:	47a0      	blx	r4
	pio_enable_interrupt(PIOC, PIO_PC25);
   82970:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
   82974:	4638      	mov	r0, r7
   82976:	4b0b      	ldr	r3, [pc, #44]	; (829a4 <ADS1298_Init+0xfc>)
   82978:	4798      	blx	r3
   8297a:	f44f 6200 	mov.w	r2, #2048	; 0x800
   8297e:	4b0a      	ldr	r3, [pc, #40]	; (829a8 <ADS1298_Init+0x100>)
   82980:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(PIOA_IRQn); 
}
   82982:	b003      	add	sp, #12
   82984:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82988:	000927c0 	.word	0x000927c0
   8298c:	20070001 	.word	0x20070001
   82990:	400e1200 	.word	0x400e1200
   82994:	00082849 	.word	0x00082849
   82998:	00082297 	.word	0x00082297
   8299c:	00082745 	.word	0x00082745
   829a0:	00082449 	.word	0x00082449
   829a4:	0008231d 	.word	0x0008231d
   829a8:	e000e100 	.word	0xe000e100
   829ac:	002dc6c0 	.word	0x002dc6c0
   829b0:	000827f1 	.word	0x000827f1

000829b4 <main>:

int main(void)
{
   829b4:	b500      	push	{lr}
   829b6:	b087      	sub	sp, #28
	WDT->WDT_MR = WDT_MR_WDDIS; //switch off watchdog
   829b8:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   829bc:	4b23      	ldr	r3, [pc, #140]	; (82a4c <main+0x98>)
   829be:	605a      	str	r2, [r3, #4]
	
    /* Initialize the SAM system */
    SystemInit();
   829c0:	4b23      	ldr	r3, [pc, #140]	; (82a50 <main+0x9c>)
   829c2:	4798      	blx	r3
	udc_start();
   829c4:	4b23      	ldr	r3, [pc, #140]	; (82a54 <main+0xa0>)
   829c6:	4798      	blx	r3

	uint8_t mybuff[20] = "Hello world\r\n";
   829c8:	4b23      	ldr	r3, [pc, #140]	; (82a58 <main+0xa4>)
   829ca:	ac01      	add	r4, sp, #4
   829cc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   829ce:	c407      	stmia	r4!, {r0, r1, r2}
   829d0:	8023      	strh	r3, [r4, #0]
   829d2:	2300      	movs	r3, #0
   829d4:	f8cd 3012 	str.w	r3, [sp, #18]
   829d8:	f8ad 3016 	strh.w	r3, [sp, #22]
	udi_cdc_write_buf(mybuff, strlen((char *)mybuff));
   829dc:	a801      	add	r0, sp, #4
   829de:	4b1f      	ldr	r3, [pc, #124]	; (82a5c <main+0xa8>)
   829e0:	4798      	blx	r3
   829e2:	4601      	mov	r1, r0
   829e4:	a801      	add	r0, sp, #4
   829e6:	4d1e      	ldr	r5, [pc, #120]	; (82a60 <main+0xac>)
   829e8:	47a8      	blx	r5
   829ea:	200b      	movs	r0, #11
   829ec:	4c1d      	ldr	r4, [pc, #116]	; (82a64 <main+0xb0>)
   829ee:	47a0      	blx	r4
   829f0:	200c      	movs	r0, #12
   829f2:	47a0      	blx	r4
   829f4:	200d      	movs	r0, #13
   829f6:	47a0      	blx	r4
   829f8:	200e      	movs	r0, #14
   829fa:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   829fc:	4b1a      	ldr	r3, [pc, #104]	; (82a68 <main+0xb4>)
   829fe:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
   82a02:	6118      	str	r0, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   82a04:	f8c3 00a0 	str.w	r0, [r3, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   82a08:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   82a0c:	6119      	str	r1, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   82a0e:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   82a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   82a16:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   82a18:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   82a1c:	6318      	str	r0, [r3, #48]	; 0x30
   82a1e:	6319      	str	r1, [r3, #48]	; 0x30
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   82a20:	635a      	str	r2, [r3, #52]	; 0x34
	
	ioport_set_pin_level(CS, IOPORT_PIN_LEVEL_HIGH);  
	ioport_set_pin_level(ADS_RESET, IOPORT_PIN_LEVEL_HIGH);
	ioport_set_pin_level(ADS_START, IOPORT_PIN_LEVEL_LOW);
	
	spi_init();
   82a22:	4b12      	ldr	r3, [pc, #72]	; (82a6c <main+0xb8>)
   82a24:	4798      	blx	r3
		
	MessageCounter = READ_ID();
   82a26:	4b12      	ldr	r3, [pc, #72]	; (82a70 <main+0xbc>)
   82a28:	4798      	blx	r3
   82a2a:	4602      	mov	r2, r0
   82a2c:	4b11      	ldr	r3, [pc, #68]	; (82a74 <main+0xc0>)
   82a2e:	7018      	strb	r0, [r3, #0]
	MessageLength = sprintf(DataToSend, "Device ID = 0x%02X\n\r", MessageCounter);
   82a30:	4c11      	ldr	r4, [pc, #68]	; (82a78 <main+0xc4>)
   82a32:	4912      	ldr	r1, [pc, #72]	; (82a7c <main+0xc8>)
   82a34:	4620      	mov	r0, r4
   82a36:	4b12      	ldr	r3, [pc, #72]	; (82a80 <main+0xcc>)
   82a38:	4798      	blx	r3
   82a3a:	4b12      	ldr	r3, [pc, #72]	; (82a84 <main+0xd0>)
   82a3c:	7018      	strb	r0, [r3, #0]
	udi_cdc_write_buf(DataToSend, MessageLength);	
   82a3e:	b2c1      	uxtb	r1, r0
   82a40:	4620      	mov	r0, r4
   82a42:	47a8      	blx	r5
	
	ADS1298_Init();
   82a44:	4b10      	ldr	r3, [pc, #64]	; (82a88 <main+0xd4>)
   82a46:	4798      	blx	r3
   82a48:	e7fe      	b.n	82a48 <main+0x94>
   82a4a:	bf00      	nop
   82a4c:	400e1a50 	.word	0x400e1a50
   82a50:	2007000d 	.word	0x2007000d
   82a54:	000808fd 	.word	0x000808fd
   82a58:	0008732c 	.word	0x0008732c
   82a5c:	00082cb1 	.word	0x00082cb1
   82a60:	0008074d 	.word	0x0008074d
   82a64:	00082521 	.word	0x00082521
   82a68:	400e1200 	.word	0x400e1200
   82a6c:	00082659 	.word	0x00082659
   82a70:	00082871 	.word	0x00082871
   82a74:	20070dd4 	.word	0x20070dd4
   82a78:	20070e2c 	.word	0x20070e2c
   82a7c:	0008736c 	.word	0x0008736c
   82a80:	00082c65 	.word	0x00082c65
   82a84:	20070dd5 	.word	0x20070dd5
   82a88:	000828a9 	.word	0x000828a9

00082a8c <__libc_init_array>:
   82a8c:	b570      	push	{r4, r5, r6, lr}
   82a8e:	4e0f      	ldr	r6, [pc, #60]	; (82acc <__libc_init_array+0x40>)
   82a90:	4d0f      	ldr	r5, [pc, #60]	; (82ad0 <__libc_init_array+0x44>)
   82a92:	1b76      	subs	r6, r6, r5
   82a94:	10b6      	asrs	r6, r6, #2
   82a96:	bf18      	it	ne
   82a98:	2400      	movne	r4, #0
   82a9a:	d005      	beq.n	82aa8 <__libc_init_array+0x1c>
   82a9c:	3401      	adds	r4, #1
   82a9e:	f855 3b04 	ldr.w	r3, [r5], #4
   82aa2:	4798      	blx	r3
   82aa4:	42a6      	cmp	r6, r4
   82aa6:	d1f9      	bne.n	82a9c <__libc_init_array+0x10>
   82aa8:	4e0a      	ldr	r6, [pc, #40]	; (82ad4 <__libc_init_array+0x48>)
   82aaa:	4d0b      	ldr	r5, [pc, #44]	; (82ad8 <__libc_init_array+0x4c>)
   82aac:	f004 fdb0 	bl	87610 <_init>
   82ab0:	1b76      	subs	r6, r6, r5
   82ab2:	10b6      	asrs	r6, r6, #2
   82ab4:	bf18      	it	ne
   82ab6:	2400      	movne	r4, #0
   82ab8:	d006      	beq.n	82ac8 <__libc_init_array+0x3c>
   82aba:	3401      	adds	r4, #1
   82abc:	f855 3b04 	ldr.w	r3, [r5], #4
   82ac0:	4798      	blx	r3
   82ac2:	42a6      	cmp	r6, r4
   82ac4:	d1f9      	bne.n	82aba <__libc_init_array+0x2e>
   82ac6:	bd70      	pop	{r4, r5, r6, pc}
   82ac8:	bd70      	pop	{r4, r5, r6, pc}
   82aca:	bf00      	nop
   82acc:	0008761c 	.word	0x0008761c
   82ad0:	0008761c 	.word	0x0008761c
   82ad4:	00087624 	.word	0x00087624
   82ad8:	0008761c 	.word	0x0008761c

00082adc <memcpy>:
   82adc:	4684      	mov	ip, r0
   82ade:	ea41 0300 	orr.w	r3, r1, r0
   82ae2:	f013 0303 	ands.w	r3, r3, #3
   82ae6:	d149      	bne.n	82b7c <memcpy+0xa0>
   82ae8:	3a40      	subs	r2, #64	; 0x40
   82aea:	d323      	bcc.n	82b34 <memcpy+0x58>
   82aec:	680b      	ldr	r3, [r1, #0]
   82aee:	6003      	str	r3, [r0, #0]
   82af0:	684b      	ldr	r3, [r1, #4]
   82af2:	6043      	str	r3, [r0, #4]
   82af4:	688b      	ldr	r3, [r1, #8]
   82af6:	6083      	str	r3, [r0, #8]
   82af8:	68cb      	ldr	r3, [r1, #12]
   82afa:	60c3      	str	r3, [r0, #12]
   82afc:	690b      	ldr	r3, [r1, #16]
   82afe:	6103      	str	r3, [r0, #16]
   82b00:	694b      	ldr	r3, [r1, #20]
   82b02:	6143      	str	r3, [r0, #20]
   82b04:	698b      	ldr	r3, [r1, #24]
   82b06:	6183      	str	r3, [r0, #24]
   82b08:	69cb      	ldr	r3, [r1, #28]
   82b0a:	61c3      	str	r3, [r0, #28]
   82b0c:	6a0b      	ldr	r3, [r1, #32]
   82b0e:	6203      	str	r3, [r0, #32]
   82b10:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   82b12:	6243      	str	r3, [r0, #36]	; 0x24
   82b14:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   82b16:	6283      	str	r3, [r0, #40]	; 0x28
   82b18:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   82b1a:	62c3      	str	r3, [r0, #44]	; 0x2c
   82b1c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82b1e:	6303      	str	r3, [r0, #48]	; 0x30
   82b20:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   82b22:	6343      	str	r3, [r0, #52]	; 0x34
   82b24:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   82b26:	6383      	str	r3, [r0, #56]	; 0x38
   82b28:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   82b2a:	63c3      	str	r3, [r0, #60]	; 0x3c
   82b2c:	3040      	adds	r0, #64	; 0x40
   82b2e:	3140      	adds	r1, #64	; 0x40
   82b30:	3a40      	subs	r2, #64	; 0x40
   82b32:	d2db      	bcs.n	82aec <memcpy+0x10>
   82b34:	3230      	adds	r2, #48	; 0x30
   82b36:	d30b      	bcc.n	82b50 <memcpy+0x74>
   82b38:	680b      	ldr	r3, [r1, #0]
   82b3a:	6003      	str	r3, [r0, #0]
   82b3c:	684b      	ldr	r3, [r1, #4]
   82b3e:	6043      	str	r3, [r0, #4]
   82b40:	688b      	ldr	r3, [r1, #8]
   82b42:	6083      	str	r3, [r0, #8]
   82b44:	68cb      	ldr	r3, [r1, #12]
   82b46:	60c3      	str	r3, [r0, #12]
   82b48:	3010      	adds	r0, #16
   82b4a:	3110      	adds	r1, #16
   82b4c:	3a10      	subs	r2, #16
   82b4e:	d2f3      	bcs.n	82b38 <memcpy+0x5c>
   82b50:	320c      	adds	r2, #12
   82b52:	d305      	bcc.n	82b60 <memcpy+0x84>
   82b54:	f851 3b04 	ldr.w	r3, [r1], #4
   82b58:	f840 3b04 	str.w	r3, [r0], #4
   82b5c:	3a04      	subs	r2, #4
   82b5e:	d2f9      	bcs.n	82b54 <memcpy+0x78>
   82b60:	3204      	adds	r2, #4
   82b62:	d008      	beq.n	82b76 <memcpy+0x9a>
   82b64:	07d2      	lsls	r2, r2, #31
   82b66:	bf1c      	itt	ne
   82b68:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82b6c:	f800 3b01 	strbne.w	r3, [r0], #1
   82b70:	d301      	bcc.n	82b76 <memcpy+0x9a>
   82b72:	880b      	ldrh	r3, [r1, #0]
   82b74:	8003      	strh	r3, [r0, #0]
   82b76:	4660      	mov	r0, ip
   82b78:	4770      	bx	lr
   82b7a:	bf00      	nop
   82b7c:	2a08      	cmp	r2, #8
   82b7e:	d313      	bcc.n	82ba8 <memcpy+0xcc>
   82b80:	078b      	lsls	r3, r1, #30
   82b82:	d0b1      	beq.n	82ae8 <memcpy+0xc>
   82b84:	f010 0303 	ands.w	r3, r0, #3
   82b88:	d0ae      	beq.n	82ae8 <memcpy+0xc>
   82b8a:	f1c3 0304 	rsb	r3, r3, #4
   82b8e:	1ad2      	subs	r2, r2, r3
   82b90:	07db      	lsls	r3, r3, #31
   82b92:	bf1c      	itt	ne
   82b94:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82b98:	f800 3b01 	strbne.w	r3, [r0], #1
   82b9c:	d3a4      	bcc.n	82ae8 <memcpy+0xc>
   82b9e:	f831 3b02 	ldrh.w	r3, [r1], #2
   82ba2:	f820 3b02 	strh.w	r3, [r0], #2
   82ba6:	e79f      	b.n	82ae8 <memcpy+0xc>
   82ba8:	3a04      	subs	r2, #4
   82baa:	d3d9      	bcc.n	82b60 <memcpy+0x84>
   82bac:	3a01      	subs	r2, #1
   82bae:	f811 3b01 	ldrb.w	r3, [r1], #1
   82bb2:	f800 3b01 	strb.w	r3, [r0], #1
   82bb6:	d2f9      	bcs.n	82bac <memcpy+0xd0>
   82bb8:	780b      	ldrb	r3, [r1, #0]
   82bba:	7003      	strb	r3, [r0, #0]
   82bbc:	784b      	ldrb	r3, [r1, #1]
   82bbe:	7043      	strb	r3, [r0, #1]
   82bc0:	788b      	ldrb	r3, [r1, #2]
   82bc2:	7083      	strb	r3, [r0, #2]
   82bc4:	4660      	mov	r0, ip
   82bc6:	4770      	bx	lr

00082bc8 <memset>:
   82bc8:	b470      	push	{r4, r5, r6}
   82bca:	0786      	lsls	r6, r0, #30
   82bcc:	d046      	beq.n	82c5c <memset+0x94>
   82bce:	1e54      	subs	r4, r2, #1
   82bd0:	2a00      	cmp	r2, #0
   82bd2:	d041      	beq.n	82c58 <memset+0x90>
   82bd4:	b2ca      	uxtb	r2, r1
   82bd6:	4603      	mov	r3, r0
   82bd8:	e002      	b.n	82be0 <memset+0x18>
   82bda:	f114 34ff 	adds.w	r4, r4, #4294967295
   82bde:	d33b      	bcc.n	82c58 <memset+0x90>
   82be0:	f803 2b01 	strb.w	r2, [r3], #1
   82be4:	079d      	lsls	r5, r3, #30
   82be6:	d1f8      	bne.n	82bda <memset+0x12>
   82be8:	2c03      	cmp	r4, #3
   82bea:	d92e      	bls.n	82c4a <memset+0x82>
   82bec:	b2cd      	uxtb	r5, r1
   82bee:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   82bf2:	2c0f      	cmp	r4, #15
   82bf4:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   82bf8:	d919      	bls.n	82c2e <memset+0x66>
   82bfa:	4626      	mov	r6, r4
   82bfc:	f103 0210 	add.w	r2, r3, #16
   82c00:	3e10      	subs	r6, #16
   82c02:	2e0f      	cmp	r6, #15
   82c04:	f842 5c10 	str.w	r5, [r2, #-16]
   82c08:	f842 5c0c 	str.w	r5, [r2, #-12]
   82c0c:	f842 5c08 	str.w	r5, [r2, #-8]
   82c10:	f842 5c04 	str.w	r5, [r2, #-4]
   82c14:	f102 0210 	add.w	r2, r2, #16
   82c18:	d8f2      	bhi.n	82c00 <memset+0x38>
   82c1a:	f1a4 0210 	sub.w	r2, r4, #16
   82c1e:	f022 020f 	bic.w	r2, r2, #15
   82c22:	f004 040f 	and.w	r4, r4, #15
   82c26:	3210      	adds	r2, #16
   82c28:	2c03      	cmp	r4, #3
   82c2a:	4413      	add	r3, r2
   82c2c:	d90d      	bls.n	82c4a <memset+0x82>
   82c2e:	461e      	mov	r6, r3
   82c30:	4622      	mov	r2, r4
   82c32:	3a04      	subs	r2, #4
   82c34:	2a03      	cmp	r2, #3
   82c36:	f846 5b04 	str.w	r5, [r6], #4
   82c3a:	d8fa      	bhi.n	82c32 <memset+0x6a>
   82c3c:	1f22      	subs	r2, r4, #4
   82c3e:	f022 0203 	bic.w	r2, r2, #3
   82c42:	3204      	adds	r2, #4
   82c44:	4413      	add	r3, r2
   82c46:	f004 0403 	and.w	r4, r4, #3
   82c4a:	b12c      	cbz	r4, 82c58 <memset+0x90>
   82c4c:	b2c9      	uxtb	r1, r1
   82c4e:	441c      	add	r4, r3
   82c50:	f803 1b01 	strb.w	r1, [r3], #1
   82c54:	429c      	cmp	r4, r3
   82c56:	d1fb      	bne.n	82c50 <memset+0x88>
   82c58:	bc70      	pop	{r4, r5, r6}
   82c5a:	4770      	bx	lr
   82c5c:	4614      	mov	r4, r2
   82c5e:	4603      	mov	r3, r0
   82c60:	e7c2      	b.n	82be8 <memset+0x20>
   82c62:	bf00      	nop

00082c64 <sprintf>:
   82c64:	b40e      	push	{r1, r2, r3}
   82c66:	4601      	mov	r1, r0
   82c68:	b5f0      	push	{r4, r5, r6, r7, lr}
   82c6a:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   82c6e:	f44f 7702 	mov.w	r7, #520	; 0x208
   82c72:	f64f 76ff 	movw	r6, #65535	; 0xffff
   82c76:	b09c      	sub	sp, #112	; 0x70
   82c78:	ac21      	add	r4, sp, #132	; 0x84
   82c7a:	f854 2b04 	ldr.w	r2, [r4], #4
   82c7e:	4b0b      	ldr	r3, [pc, #44]	; (82cac <sprintf+0x48>)
   82c80:	9102      	str	r1, [sp, #8]
   82c82:	9106      	str	r1, [sp, #24]
   82c84:	6818      	ldr	r0, [r3, #0]
   82c86:	a902      	add	r1, sp, #8
   82c88:	4623      	mov	r3, r4
   82c8a:	9401      	str	r4, [sp, #4]
   82c8c:	f8ad 7014 	strh.w	r7, [sp, #20]
   82c90:	9504      	str	r5, [sp, #16]
   82c92:	9507      	str	r5, [sp, #28]
   82c94:	f8ad 6016 	strh.w	r6, [sp, #22]
   82c98:	f000 f838 	bl	82d0c <_svfprintf_r>
   82c9c:	2200      	movs	r2, #0
   82c9e:	9b02      	ldr	r3, [sp, #8]
   82ca0:	701a      	strb	r2, [r3, #0]
   82ca2:	b01c      	add	sp, #112	; 0x70
   82ca4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   82ca8:	b003      	add	sp, #12
   82caa:	4770      	bx	lr
   82cac:	200701e0 	.word	0x200701e0

00082cb0 <strlen>:
   82cb0:	f020 0103 	bic.w	r1, r0, #3
   82cb4:	f010 0003 	ands.w	r0, r0, #3
   82cb8:	f1c0 0000 	rsb	r0, r0, #0
   82cbc:	f851 3b04 	ldr.w	r3, [r1], #4
   82cc0:	f100 0c04 	add.w	ip, r0, #4
   82cc4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   82cc8:	f06f 0200 	mvn.w	r2, #0
   82ccc:	bf1c      	itt	ne
   82cce:	fa22 f20c 	lsrne.w	r2, r2, ip
   82cd2:	4313      	orrne	r3, r2
   82cd4:	f04f 0c01 	mov.w	ip, #1
   82cd8:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   82cdc:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   82ce0:	eba3 020c 	sub.w	r2, r3, ip
   82ce4:	ea22 0203 	bic.w	r2, r2, r3
   82ce8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   82cec:	bf04      	itt	eq
   82cee:	f851 3b04 	ldreq.w	r3, [r1], #4
   82cf2:	3004      	addeq	r0, #4
   82cf4:	d0f4      	beq.n	82ce0 <strlen+0x30>
   82cf6:	f1c2 0100 	rsb	r1, r2, #0
   82cfa:	ea02 0201 	and.w	r2, r2, r1
   82cfe:	fab2 f282 	clz	r2, r2
   82d02:	f1c2 021f 	rsb	r2, r2, #31
   82d06:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   82d0a:	4770      	bx	lr

00082d0c <_svfprintf_r>:
   82d0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82d10:	b0c3      	sub	sp, #268	; 0x10c
   82d12:	460c      	mov	r4, r1
   82d14:	910b      	str	r1, [sp, #44]	; 0x2c
   82d16:	4692      	mov	sl, r2
   82d18:	930f      	str	r3, [sp, #60]	; 0x3c
   82d1a:	900c      	str	r0, [sp, #48]	; 0x30
   82d1c:	f002 fa58 	bl	851d0 <_localeconv_r>
   82d20:	6803      	ldr	r3, [r0, #0]
   82d22:	4618      	mov	r0, r3
   82d24:	931a      	str	r3, [sp, #104]	; 0x68
   82d26:	f7ff ffc3 	bl	82cb0 <strlen>
   82d2a:	89a3      	ldrh	r3, [r4, #12]
   82d2c:	9019      	str	r0, [sp, #100]	; 0x64
   82d2e:	0619      	lsls	r1, r3, #24
   82d30:	d503      	bpl.n	82d3a <_svfprintf_r+0x2e>
   82d32:	6923      	ldr	r3, [r4, #16]
   82d34:	2b00      	cmp	r3, #0
   82d36:	f001 8035 	beq.w	83da4 <_svfprintf_r+0x1098>
   82d3a:	2300      	movs	r3, #0
   82d3c:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   82d40:	46c8      	mov	r8, r9
   82d42:	9315      	str	r3, [sp, #84]	; 0x54
   82d44:	9313      	str	r3, [sp, #76]	; 0x4c
   82d46:	9314      	str	r3, [sp, #80]	; 0x50
   82d48:	9318      	str	r3, [sp, #96]	; 0x60
   82d4a:	931b      	str	r3, [sp, #108]	; 0x6c
   82d4c:	9309      	str	r3, [sp, #36]	; 0x24
   82d4e:	9316      	str	r3, [sp, #88]	; 0x58
   82d50:	9317      	str	r3, [sp, #92]	; 0x5c
   82d52:	9327      	str	r3, [sp, #156]	; 0x9c
   82d54:	9326      	str	r3, [sp, #152]	; 0x98
   82d56:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   82d5a:	f89a 3000 	ldrb.w	r3, [sl]
   82d5e:	4654      	mov	r4, sl
   82d60:	b1eb      	cbz	r3, 82d9e <_svfprintf_r+0x92>
   82d62:	2b25      	cmp	r3, #37	; 0x25
   82d64:	d102      	bne.n	82d6c <_svfprintf_r+0x60>
   82d66:	e01a      	b.n	82d9e <_svfprintf_r+0x92>
   82d68:	2b25      	cmp	r3, #37	; 0x25
   82d6a:	d003      	beq.n	82d74 <_svfprintf_r+0x68>
   82d6c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   82d70:	2b00      	cmp	r3, #0
   82d72:	d1f9      	bne.n	82d68 <_svfprintf_r+0x5c>
   82d74:	eba4 050a 	sub.w	r5, r4, sl
   82d78:	b18d      	cbz	r5, 82d9e <_svfprintf_r+0x92>
   82d7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82d7c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82d7e:	3301      	adds	r3, #1
   82d80:	442a      	add	r2, r5
   82d82:	2b07      	cmp	r3, #7
   82d84:	f8c8 a000 	str.w	sl, [r8]
   82d88:	f8c8 5004 	str.w	r5, [r8, #4]
   82d8c:	9227      	str	r2, [sp, #156]	; 0x9c
   82d8e:	9326      	str	r3, [sp, #152]	; 0x98
   82d90:	f300 808a 	bgt.w	82ea8 <_svfprintf_r+0x19c>
   82d94:	f108 0808 	add.w	r8, r8, #8
   82d98:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82d9a:	442b      	add	r3, r5
   82d9c:	9309      	str	r3, [sp, #36]	; 0x24
   82d9e:	7823      	ldrb	r3, [r4, #0]
   82da0:	2b00      	cmp	r3, #0
   82da2:	f000 8089 	beq.w	82eb8 <_svfprintf_r+0x1ac>
   82da6:	2300      	movs	r3, #0
   82da8:	f04f 30ff 	mov.w	r0, #4294967295
   82dac:	461a      	mov	r2, r3
   82dae:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82db2:	4619      	mov	r1, r3
   82db4:	930d      	str	r3, [sp, #52]	; 0x34
   82db6:	469b      	mov	fp, r3
   82db8:	7863      	ldrb	r3, [r4, #1]
   82dba:	f104 0a01 	add.w	sl, r4, #1
   82dbe:	900a      	str	r0, [sp, #40]	; 0x28
   82dc0:	f10a 0a01 	add.w	sl, sl, #1
   82dc4:	f1a3 0020 	sub.w	r0, r3, #32
   82dc8:	2858      	cmp	r0, #88	; 0x58
   82dca:	f200 83b7 	bhi.w	8353c <_svfprintf_r+0x830>
   82dce:	e8df f010 	tbh	[pc, r0, lsl #1]
   82dd2:	034c      	.short	0x034c
   82dd4:	03b503b5 	.word	0x03b503b5
   82dd8:	03b50354 	.word	0x03b50354
   82ddc:	03b503b5 	.word	0x03b503b5
   82de0:	03b503b5 	.word	0x03b503b5
   82de4:	005903b5 	.word	0x005903b5
   82de8:	03b50359 	.word	0x03b50359
   82dec:	02140066 	.word	0x02140066
   82df0:	022f03b5 	.word	0x022f03b5
   82df4:	03a503a5 	.word	0x03a503a5
   82df8:	03a503a5 	.word	0x03a503a5
   82dfc:	03a503a5 	.word	0x03a503a5
   82e00:	03a503a5 	.word	0x03a503a5
   82e04:	03b503a5 	.word	0x03b503a5
   82e08:	03b503b5 	.word	0x03b503b5
   82e0c:	03b503b5 	.word	0x03b503b5
   82e10:	03b503b5 	.word	0x03b503b5
   82e14:	03b503b5 	.word	0x03b503b5
   82e18:	028b03b5 	.word	0x028b03b5
   82e1c:	03b502d3 	.word	0x03b502d3
   82e20:	03b502d3 	.word	0x03b502d3
   82e24:	03b503b5 	.word	0x03b503b5
   82e28:	031b03b5 	.word	0x031b03b5
   82e2c:	03b503b5 	.word	0x03b503b5
   82e30:	03b50320 	.word	0x03b50320
   82e34:	03b503b5 	.word	0x03b503b5
   82e38:	03b503b5 	.word	0x03b503b5
   82e3c:	03b50234 	.word	0x03b50234
   82e40:	024b03b5 	.word	0x024b03b5
   82e44:	03b503b5 	.word	0x03b503b5
   82e48:	03b503b5 	.word	0x03b503b5
   82e4c:	03b503b5 	.word	0x03b503b5
   82e50:	03b503b5 	.word	0x03b503b5
   82e54:	03b503b5 	.word	0x03b503b5
   82e58:	039e0276 	.word	0x039e0276
   82e5c:	02d302d3 	.word	0x02d302d3
   82e60:	036302d3 	.word	0x036302d3
   82e64:	03b5039e 	.word	0x03b5039e
   82e68:	036803b5 	.word	0x036803b5
   82e6c:	037503b5 	.word	0x037503b5
   82e70:	038c01dd 	.word	0x038c01dd
   82e74:	03b5035e 	.word	0x03b5035e
   82e78:	03b501f2 	.word	0x03b501f2
   82e7c:	03b50087 	.word	0x03b50087
   82e80:	033203b5 	.word	0x033203b5
   82e84:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82e86:	6823      	ldr	r3, [r4, #0]
   82e88:	4618      	mov	r0, r3
   82e8a:	930d      	str	r3, [sp, #52]	; 0x34
   82e8c:	4623      	mov	r3, r4
   82e8e:	2800      	cmp	r0, #0
   82e90:	f103 0304 	add.w	r3, r3, #4
   82e94:	930f      	str	r3, [sp, #60]	; 0x3c
   82e96:	da04      	bge.n	82ea2 <_svfprintf_r+0x196>
   82e98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82e9a:	425b      	negs	r3, r3
   82e9c:	930d      	str	r3, [sp, #52]	; 0x34
   82e9e:	f04b 0b04 	orr.w	fp, fp, #4
   82ea2:	f89a 3000 	ldrb.w	r3, [sl]
   82ea6:	e78b      	b.n	82dc0 <_svfprintf_r+0xb4>
   82ea8:	aa25      	add	r2, sp, #148	; 0x94
   82eaa:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82eac:	980c      	ldr	r0, [sp, #48]	; 0x30
   82eae:	f002 ffa3 	bl	85df8 <__ssprint_r>
   82eb2:	b940      	cbnz	r0, 82ec6 <_svfprintf_r+0x1ba>
   82eb4:	46c8      	mov	r8, r9
   82eb6:	e76f      	b.n	82d98 <_svfprintf_r+0x8c>
   82eb8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   82eba:	b123      	cbz	r3, 82ec6 <_svfprintf_r+0x1ba>
   82ebc:	980c      	ldr	r0, [sp, #48]	; 0x30
   82ebe:	aa25      	add	r2, sp, #148	; 0x94
   82ec0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82ec2:	f002 ff99 	bl	85df8 <__ssprint_r>
   82ec6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82ec8:	899b      	ldrh	r3, [r3, #12]
   82eca:	f013 0f40 	tst.w	r3, #64	; 0x40
   82ece:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82ed0:	bf18      	it	ne
   82ed2:	f04f 33ff 	movne.w	r3, #4294967295
   82ed6:	9309      	str	r3, [sp, #36]	; 0x24
   82ed8:	9809      	ldr	r0, [sp, #36]	; 0x24
   82eda:	b043      	add	sp, #268	; 0x10c
   82edc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82ee0:	f01b 0f20 	tst.w	fp, #32
   82ee4:	9311      	str	r3, [sp, #68]	; 0x44
   82ee6:	f040 81af 	bne.w	83248 <_svfprintf_r+0x53c>
   82eea:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82eec:	f01b 0f10 	tst.w	fp, #16
   82ef0:	4613      	mov	r3, r2
   82ef2:	f040 859a 	bne.w	83a2a <_svfprintf_r+0xd1e>
   82ef6:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82efa:	f000 8596 	beq.w	83a2a <_svfprintf_r+0xd1e>
   82efe:	2500      	movs	r5, #0
   82f00:	2301      	movs	r3, #1
   82f02:	8814      	ldrh	r4, [r2, #0]
   82f04:	3204      	adds	r2, #4
   82f06:	920f      	str	r2, [sp, #60]	; 0x3c
   82f08:	2200      	movs	r2, #0
   82f0a:	4617      	mov	r7, r2
   82f0c:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   82f10:	990a      	ldr	r1, [sp, #40]	; 0x28
   82f12:	1c4a      	adds	r2, r1, #1
   82f14:	f000 8210 	beq.w	83338 <_svfprintf_r+0x62c>
   82f18:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   82f1c:	9207      	str	r2, [sp, #28]
   82f1e:	ea54 0205 	orrs.w	r2, r4, r5
   82f22:	f040 820f 	bne.w	83344 <_svfprintf_r+0x638>
   82f26:	2900      	cmp	r1, #0
   82f28:	f040 8431 	bne.w	8378e <_svfprintf_r+0xa82>
   82f2c:	2b00      	cmp	r3, #0
   82f2e:	f040 8539 	bne.w	839a4 <_svfprintf_r+0xc98>
   82f32:	f01b 0301 	ands.w	r3, fp, #1
   82f36:	930e      	str	r3, [sp, #56]	; 0x38
   82f38:	f000 8662 	beq.w	83c00 <_svfprintf_r+0xef4>
   82f3c:	2330      	movs	r3, #48	; 0x30
   82f3e:	ae42      	add	r6, sp, #264	; 0x108
   82f40:	f806 3d41 	strb.w	r3, [r6, #-65]!
   82f44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82f46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82f48:	4293      	cmp	r3, r2
   82f4a:	bfb8      	it	lt
   82f4c:	4613      	movlt	r3, r2
   82f4e:	9308      	str	r3, [sp, #32]
   82f50:	2300      	movs	r3, #0
   82f52:	9312      	str	r3, [sp, #72]	; 0x48
   82f54:	b117      	cbz	r7, 82f5c <_svfprintf_r+0x250>
   82f56:	9b08      	ldr	r3, [sp, #32]
   82f58:	3301      	adds	r3, #1
   82f5a:	9308      	str	r3, [sp, #32]
   82f5c:	9b07      	ldr	r3, [sp, #28]
   82f5e:	f013 0302 	ands.w	r3, r3, #2
   82f62:	9310      	str	r3, [sp, #64]	; 0x40
   82f64:	d002      	beq.n	82f6c <_svfprintf_r+0x260>
   82f66:	9b08      	ldr	r3, [sp, #32]
   82f68:	3302      	adds	r3, #2
   82f6a:	9308      	str	r3, [sp, #32]
   82f6c:	9b07      	ldr	r3, [sp, #28]
   82f6e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   82f72:	f040 8310 	bne.w	83596 <_svfprintf_r+0x88a>
   82f76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82f78:	9a08      	ldr	r2, [sp, #32]
   82f7a:	eba3 0b02 	sub.w	fp, r3, r2
   82f7e:	f1bb 0f00 	cmp.w	fp, #0
   82f82:	f340 8308 	ble.w	83596 <_svfprintf_r+0x88a>
   82f86:	f1bb 0f10 	cmp.w	fp, #16
   82f8a:	f340 87b2 	ble.w	83ef2 <_svfprintf_r+0x11e6>
   82f8e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82f90:	4643      	mov	r3, r8
   82f92:	4621      	mov	r1, r4
   82f94:	46a8      	mov	r8, r5
   82f96:	2710      	movs	r7, #16
   82f98:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82f9a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82f9c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82f9e:	e006      	b.n	82fae <_svfprintf_r+0x2a2>
   82fa0:	f1ab 0b10 	sub.w	fp, fp, #16
   82fa4:	f1bb 0f10 	cmp.w	fp, #16
   82fa8:	f103 0308 	add.w	r3, r3, #8
   82fac:	dd18      	ble.n	82fe0 <_svfprintf_r+0x2d4>
   82fae:	3201      	adds	r2, #1
   82fb0:	48ab      	ldr	r0, [pc, #684]	; (83260 <_svfprintf_r+0x554>)
   82fb2:	3110      	adds	r1, #16
   82fb4:	2a07      	cmp	r2, #7
   82fb6:	9127      	str	r1, [sp, #156]	; 0x9c
   82fb8:	9226      	str	r2, [sp, #152]	; 0x98
   82fba:	e883 0081 	stmia.w	r3, {r0, r7}
   82fbe:	ddef      	ble.n	82fa0 <_svfprintf_r+0x294>
   82fc0:	aa25      	add	r2, sp, #148	; 0x94
   82fc2:	4629      	mov	r1, r5
   82fc4:	4620      	mov	r0, r4
   82fc6:	f002 ff17 	bl	85df8 <__ssprint_r>
   82fca:	2800      	cmp	r0, #0
   82fcc:	f47f af7b 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   82fd0:	f1ab 0b10 	sub.w	fp, fp, #16
   82fd4:	f1bb 0f10 	cmp.w	fp, #16
   82fd8:	464b      	mov	r3, r9
   82fda:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82fdc:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82fde:	dce6      	bgt.n	82fae <_svfprintf_r+0x2a2>
   82fe0:	4645      	mov	r5, r8
   82fe2:	460c      	mov	r4, r1
   82fe4:	4698      	mov	r8, r3
   82fe6:	3201      	adds	r2, #1
   82fe8:	4b9d      	ldr	r3, [pc, #628]	; (83260 <_svfprintf_r+0x554>)
   82fea:	445c      	add	r4, fp
   82fec:	2a07      	cmp	r2, #7
   82fee:	9427      	str	r4, [sp, #156]	; 0x9c
   82ff0:	9226      	str	r2, [sp, #152]	; 0x98
   82ff2:	e888 0808 	stmia.w	r8, {r3, fp}
   82ff6:	f300 82c3 	bgt.w	83580 <_svfprintf_r+0x874>
   82ffa:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82ffe:	f108 0808 	add.w	r8, r8, #8
   83002:	b187      	cbz	r7, 83026 <_svfprintf_r+0x31a>
   83004:	2101      	movs	r1, #1
   83006:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83008:	440c      	add	r4, r1
   8300a:	440b      	add	r3, r1
   8300c:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   83010:	2b07      	cmp	r3, #7
   83012:	9427      	str	r4, [sp, #156]	; 0x9c
   83014:	9326      	str	r3, [sp, #152]	; 0x98
   83016:	f8c8 1004 	str.w	r1, [r8, #4]
   8301a:	f8c8 2000 	str.w	r2, [r8]
   8301e:	f300 83cd 	bgt.w	837bc <_svfprintf_r+0xab0>
   83022:	f108 0808 	add.w	r8, r8, #8
   83026:	9b10      	ldr	r3, [sp, #64]	; 0x40
   83028:	b17b      	cbz	r3, 8304a <_svfprintf_r+0x33e>
   8302a:	2102      	movs	r1, #2
   8302c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8302e:	440c      	add	r4, r1
   83030:	3301      	adds	r3, #1
   83032:	aa1e      	add	r2, sp, #120	; 0x78
   83034:	2b07      	cmp	r3, #7
   83036:	9427      	str	r4, [sp, #156]	; 0x9c
   83038:	9326      	str	r3, [sp, #152]	; 0x98
   8303a:	f8c8 1004 	str.w	r1, [r8, #4]
   8303e:	f8c8 2000 	str.w	r2, [r8]
   83042:	f300 8411 	bgt.w	83868 <_svfprintf_r+0xb5c>
   83046:	f108 0808 	add.w	r8, r8, #8
   8304a:	2d80      	cmp	r5, #128	; 0x80
   8304c:	f000 8304 	beq.w	83658 <_svfprintf_r+0x94c>
   83050:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83052:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   83054:	1a9f      	subs	r7, r3, r2
   83056:	2f00      	cmp	r7, #0
   83058:	dd37      	ble.n	830ca <_svfprintf_r+0x3be>
   8305a:	2f10      	cmp	r7, #16
   8305c:	f340 8679 	ble.w	83d52 <_svfprintf_r+0x1046>
   83060:	4d80      	ldr	r5, [pc, #512]	; (83264 <_svfprintf_r+0x558>)
   83062:	4642      	mov	r2, r8
   83064:	4621      	mov	r1, r4
   83066:	46b0      	mov	r8, r6
   83068:	f04f 0b10 	mov.w	fp, #16
   8306c:	462e      	mov	r6, r5
   8306e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83070:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   83072:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   83074:	e004      	b.n	83080 <_svfprintf_r+0x374>
   83076:	3f10      	subs	r7, #16
   83078:	2f10      	cmp	r7, #16
   8307a:	f102 0208 	add.w	r2, r2, #8
   8307e:	dd15      	ble.n	830ac <_svfprintf_r+0x3a0>
   83080:	3301      	adds	r3, #1
   83082:	3110      	adds	r1, #16
   83084:	2b07      	cmp	r3, #7
   83086:	9127      	str	r1, [sp, #156]	; 0x9c
   83088:	9326      	str	r3, [sp, #152]	; 0x98
   8308a:	e882 0840 	stmia.w	r2, {r6, fp}
   8308e:	ddf2      	ble.n	83076 <_svfprintf_r+0x36a>
   83090:	aa25      	add	r2, sp, #148	; 0x94
   83092:	4629      	mov	r1, r5
   83094:	4620      	mov	r0, r4
   83096:	f002 feaf 	bl	85df8 <__ssprint_r>
   8309a:	2800      	cmp	r0, #0
   8309c:	f47f af13 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   830a0:	3f10      	subs	r7, #16
   830a2:	2f10      	cmp	r7, #16
   830a4:	464a      	mov	r2, r9
   830a6:	9927      	ldr	r1, [sp, #156]	; 0x9c
   830a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   830aa:	dce9      	bgt.n	83080 <_svfprintf_r+0x374>
   830ac:	4635      	mov	r5, r6
   830ae:	460c      	mov	r4, r1
   830b0:	4646      	mov	r6, r8
   830b2:	4690      	mov	r8, r2
   830b4:	3301      	adds	r3, #1
   830b6:	443c      	add	r4, r7
   830b8:	2b07      	cmp	r3, #7
   830ba:	9427      	str	r4, [sp, #156]	; 0x9c
   830bc:	9326      	str	r3, [sp, #152]	; 0x98
   830be:	e888 00a0 	stmia.w	r8, {r5, r7}
   830c2:	f300 8370 	bgt.w	837a6 <_svfprintf_r+0xa9a>
   830c6:	f108 0808 	add.w	r8, r8, #8
   830ca:	9b07      	ldr	r3, [sp, #28]
   830cc:	05df      	lsls	r7, r3, #23
   830ce:	f100 8264 	bmi.w	8359a <_svfprintf_r+0x88e>
   830d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   830d4:	990e      	ldr	r1, [sp, #56]	; 0x38
   830d6:	3301      	adds	r3, #1
   830d8:	440c      	add	r4, r1
   830da:	2b07      	cmp	r3, #7
   830dc:	9427      	str	r4, [sp, #156]	; 0x9c
   830de:	f8c8 6000 	str.w	r6, [r8]
   830e2:	f8c8 1004 	str.w	r1, [r8, #4]
   830e6:	9326      	str	r3, [sp, #152]	; 0x98
   830e8:	f300 83b3 	bgt.w	83852 <_svfprintf_r+0xb46>
   830ec:	f108 0808 	add.w	r8, r8, #8
   830f0:	9b07      	ldr	r3, [sp, #28]
   830f2:	075b      	lsls	r3, r3, #29
   830f4:	d53b      	bpl.n	8316e <_svfprintf_r+0x462>
   830f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   830f8:	9a08      	ldr	r2, [sp, #32]
   830fa:	1a9d      	subs	r5, r3, r2
   830fc:	2d00      	cmp	r5, #0
   830fe:	dd36      	ble.n	8316e <_svfprintf_r+0x462>
   83100:	2d10      	cmp	r5, #16
   83102:	f340 8721 	ble.w	83f48 <_svfprintf_r+0x123c>
   83106:	2610      	movs	r6, #16
   83108:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8310a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   8310c:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   83110:	e004      	b.n	8311c <_svfprintf_r+0x410>
   83112:	3d10      	subs	r5, #16
   83114:	2d10      	cmp	r5, #16
   83116:	f108 0808 	add.w	r8, r8, #8
   8311a:	dd16      	ble.n	8314a <_svfprintf_r+0x43e>
   8311c:	3301      	adds	r3, #1
   8311e:	4a50      	ldr	r2, [pc, #320]	; (83260 <_svfprintf_r+0x554>)
   83120:	3410      	adds	r4, #16
   83122:	2b07      	cmp	r3, #7
   83124:	9427      	str	r4, [sp, #156]	; 0x9c
   83126:	9326      	str	r3, [sp, #152]	; 0x98
   83128:	e888 0044 	stmia.w	r8, {r2, r6}
   8312c:	ddf1      	ble.n	83112 <_svfprintf_r+0x406>
   8312e:	aa25      	add	r2, sp, #148	; 0x94
   83130:	4659      	mov	r1, fp
   83132:	4638      	mov	r0, r7
   83134:	f002 fe60 	bl	85df8 <__ssprint_r>
   83138:	2800      	cmp	r0, #0
   8313a:	f47f aec4 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   8313e:	3d10      	subs	r5, #16
   83140:	2d10      	cmp	r5, #16
   83142:	46c8      	mov	r8, r9
   83144:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83146:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83148:	dce8      	bgt.n	8311c <_svfprintf_r+0x410>
   8314a:	3301      	adds	r3, #1
   8314c:	4a44      	ldr	r2, [pc, #272]	; (83260 <_svfprintf_r+0x554>)
   8314e:	442c      	add	r4, r5
   83150:	2b07      	cmp	r3, #7
   83152:	9427      	str	r4, [sp, #156]	; 0x9c
   83154:	9326      	str	r3, [sp, #152]	; 0x98
   83156:	e888 0024 	stmia.w	r8, {r2, r5}
   8315a:	dd08      	ble.n	8316e <_svfprintf_r+0x462>
   8315c:	aa25      	add	r2, sp, #148	; 0x94
   8315e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83160:	980c      	ldr	r0, [sp, #48]	; 0x30
   83162:	f002 fe49 	bl	85df8 <__ssprint_r>
   83166:	2800      	cmp	r0, #0
   83168:	f47f aead 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   8316c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8316e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83170:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   83172:	9908      	ldr	r1, [sp, #32]
   83174:	428a      	cmp	r2, r1
   83176:	bfac      	ite	ge
   83178:	189b      	addge	r3, r3, r2
   8317a:	185b      	addlt	r3, r3, r1
   8317c:	9309      	str	r3, [sp, #36]	; 0x24
   8317e:	2c00      	cmp	r4, #0
   83180:	f040 82fb 	bne.w	8377a <_svfprintf_r+0xa6e>
   83184:	2300      	movs	r3, #0
   83186:	46c8      	mov	r8, r9
   83188:	9326      	str	r3, [sp, #152]	; 0x98
   8318a:	e5e6      	b.n	82d5a <_svfprintf_r+0x4e>
   8318c:	9311      	str	r3, [sp, #68]	; 0x44
   8318e:	f01b 0320 	ands.w	r3, fp, #32
   83192:	f040 8145 	bne.w	83420 <_svfprintf_r+0x714>
   83196:	f01b 0210 	ands.w	r2, fp, #16
   8319a:	f040 8466 	bne.w	83a6a <_svfprintf_r+0xd5e>
   8319e:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   831a2:	f000 8462 	beq.w	83a6a <_svfprintf_r+0xd5e>
   831a6:	990f      	ldr	r1, [sp, #60]	; 0x3c
   831a8:	4613      	mov	r3, r2
   831aa:	460a      	mov	r2, r1
   831ac:	3204      	adds	r2, #4
   831ae:	880c      	ldrh	r4, [r1, #0]
   831b0:	2500      	movs	r5, #0
   831b2:	920f      	str	r2, [sp, #60]	; 0x3c
   831b4:	e6a8      	b.n	82f08 <_svfprintf_r+0x1fc>
   831b6:	2500      	movs	r5, #0
   831b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   831ba:	9311      	str	r3, [sp, #68]	; 0x44
   831bc:	6816      	ldr	r6, [r2, #0]
   831be:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   831c2:	1d14      	adds	r4, r2, #4
   831c4:	2e00      	cmp	r6, #0
   831c6:	f000 86cd 	beq.w	83f64 <_svfprintf_r+0x1258>
   831ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   831cc:	1c53      	adds	r3, r2, #1
   831ce:	f000 861b 	beq.w	83e08 <_svfprintf_r+0x10fc>
   831d2:	4629      	mov	r1, r5
   831d4:	4630      	mov	r0, r6
   831d6:	f002 faaf 	bl	85738 <memchr>
   831da:	2800      	cmp	r0, #0
   831dc:	f000 870d 	beq.w	83ffa <_svfprintf_r+0x12ee>
   831e0:	1b83      	subs	r3, r0, r6
   831e2:	950a      	str	r5, [sp, #40]	; 0x28
   831e4:	930e      	str	r3, [sp, #56]	; 0x38
   831e6:	940f      	str	r4, [sp, #60]	; 0x3c
   831e8:	f8cd b01c 	str.w	fp, [sp, #28]
   831ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   831f0:	9308      	str	r3, [sp, #32]
   831f2:	9512      	str	r5, [sp, #72]	; 0x48
   831f4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   831f8:	e6ac      	b.n	82f54 <_svfprintf_r+0x248>
   831fa:	f89a 3000 	ldrb.w	r3, [sl]
   831fe:	f10a 0401 	add.w	r4, sl, #1
   83202:	2b2a      	cmp	r3, #42	; 0x2a
   83204:	f000 87c2 	beq.w	8418c <_svfprintf_r+0x1480>
   83208:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   8320c:	2809      	cmp	r0, #9
   8320e:	46a2      	mov	sl, r4
   83210:	f200 8718 	bhi.w	84044 <_svfprintf_r+0x1338>
   83214:	2300      	movs	r3, #0
   83216:	461c      	mov	r4, r3
   83218:	f81a 3b01 	ldrb.w	r3, [sl], #1
   8321c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   83220:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   83224:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   83228:	2809      	cmp	r0, #9
   8322a:	d9f5      	bls.n	83218 <_svfprintf_r+0x50c>
   8322c:	940a      	str	r4, [sp, #40]	; 0x28
   8322e:	e5c9      	b.n	82dc4 <_svfprintf_r+0xb8>
   83230:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   83234:	f89a 3000 	ldrb.w	r3, [sl]
   83238:	e5c2      	b.n	82dc0 <_svfprintf_r+0xb4>
   8323a:	f04b 0b10 	orr.w	fp, fp, #16
   8323e:	f01b 0f20 	tst.w	fp, #32
   83242:	9311      	str	r3, [sp, #68]	; 0x44
   83244:	f43f ae51 	beq.w	82eea <_svfprintf_r+0x1de>
   83248:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8324a:	3407      	adds	r4, #7
   8324c:	f024 0307 	bic.w	r3, r4, #7
   83250:	f103 0208 	add.w	r2, r3, #8
   83254:	e9d3 4500 	ldrd	r4, r5, [r3]
   83258:	920f      	str	r2, [sp, #60]	; 0x3c
   8325a:	2301      	movs	r3, #1
   8325c:	e654      	b.n	82f08 <_svfprintf_r+0x1fc>
   8325e:	bf00      	nop
   83260:	000873cc 	.word	0x000873cc
   83264:	000873dc 	.word	0x000873dc
   83268:	9311      	str	r3, [sp, #68]	; 0x44
   8326a:	2a00      	cmp	r2, #0
   8326c:	f040 87ad 	bne.w	841ca <_svfprintf_r+0x14be>
   83270:	4bbe      	ldr	r3, [pc, #760]	; (8356c <_svfprintf_r+0x860>)
   83272:	f01b 0f20 	tst.w	fp, #32
   83276:	9318      	str	r3, [sp, #96]	; 0x60
   83278:	f040 80e7 	bne.w	8344a <_svfprintf_r+0x73e>
   8327c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8327e:	f01b 0f10 	tst.w	fp, #16
   83282:	4613      	mov	r3, r2
   83284:	f040 83d8 	bne.w	83a38 <_svfprintf_r+0xd2c>
   83288:	f01b 0f40 	tst.w	fp, #64	; 0x40
   8328c:	f000 83d4 	beq.w	83a38 <_svfprintf_r+0xd2c>
   83290:	2500      	movs	r5, #0
   83292:	3304      	adds	r3, #4
   83294:	8814      	ldrh	r4, [r2, #0]
   83296:	930f      	str	r3, [sp, #60]	; 0x3c
   83298:	f01b 0f01 	tst.w	fp, #1
   8329c:	f000 80e3 	beq.w	83466 <_svfprintf_r+0x75a>
   832a0:	ea54 0305 	orrs.w	r3, r4, r5
   832a4:	f000 80df 	beq.w	83466 <_svfprintf_r+0x75a>
   832a8:	2330      	movs	r3, #48	; 0x30
   832aa:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   832ae:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   832b2:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   832b6:	f04b 0b02 	orr.w	fp, fp, #2
   832ba:	2302      	movs	r3, #2
   832bc:	e624      	b.n	82f08 <_svfprintf_r+0x1fc>
   832be:	2201      	movs	r2, #1
   832c0:	9311      	str	r3, [sp, #68]	; 0x44
   832c2:	2300      	movs	r3, #0
   832c4:	4611      	mov	r1, r2
   832c6:	980f      	ldr	r0, [sp, #60]	; 0x3c
   832c8:	9208      	str	r2, [sp, #32]
   832ca:	6802      	ldr	r2, [r0, #0]
   832cc:	461f      	mov	r7, r3
   832ce:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   832d2:	930a      	str	r3, [sp, #40]	; 0x28
   832d4:	9312      	str	r3, [sp, #72]	; 0x48
   832d6:	1d03      	adds	r3, r0, #4
   832d8:	f8cd b01c 	str.w	fp, [sp, #28]
   832dc:	910e      	str	r1, [sp, #56]	; 0x38
   832de:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   832e2:	930f      	str	r3, [sp, #60]	; 0x3c
   832e4:	ae28      	add	r6, sp, #160	; 0xa0
   832e6:	e639      	b.n	82f5c <_svfprintf_r+0x250>
   832e8:	9311      	str	r3, [sp, #68]	; 0x44
   832ea:	2a00      	cmp	r2, #0
   832ec:	f040 8784 	bne.w	841f8 <_svfprintf_r+0x14ec>
   832f0:	f04b 0b10 	orr.w	fp, fp, #16
   832f4:	f01b 0f20 	tst.w	fp, #32
   832f8:	f040 8475 	bne.w	83be6 <_svfprintf_r+0xeda>
   832fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   832fe:	f01b 0f10 	tst.w	fp, #16
   83302:	4613      	mov	r3, r2
   83304:	f040 839d 	bne.w	83a42 <_svfprintf_r+0xd36>
   83308:	f01b 0f40 	tst.w	fp, #64	; 0x40
   8330c:	f000 8399 	beq.w	83a42 <_svfprintf_r+0xd36>
   83310:	f9b2 4000 	ldrsh.w	r4, [r2]
   83314:	3304      	adds	r3, #4
   83316:	17e5      	asrs	r5, r4, #31
   83318:	930f      	str	r3, [sp, #60]	; 0x3c
   8331a:	4622      	mov	r2, r4
   8331c:	462b      	mov	r3, r5
   8331e:	2a00      	cmp	r2, #0
   83320:	f173 0300 	sbcs.w	r3, r3, #0
   83324:	f2c0 8398 	blt.w	83a58 <_svfprintf_r+0xd4c>
   83328:	990a      	ldr	r1, [sp, #40]	; 0x28
   8332a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8332e:	1c4a      	adds	r2, r1, #1
   83330:	f04f 0301 	mov.w	r3, #1
   83334:	f47f adf0 	bne.w	82f18 <_svfprintf_r+0x20c>
   83338:	ea54 0205 	orrs.w	r2, r4, r5
   8333c:	f000 8229 	beq.w	83792 <_svfprintf_r+0xa86>
   83340:	f8cd b01c 	str.w	fp, [sp, #28]
   83344:	2b01      	cmp	r3, #1
   83346:	f000 830e 	beq.w	83966 <_svfprintf_r+0xc5a>
   8334a:	2b02      	cmp	r3, #2
   8334c:	f040 829c 	bne.w	83888 <_svfprintf_r+0xb7c>
   83350:	464e      	mov	r6, r9
   83352:	9818      	ldr	r0, [sp, #96]	; 0x60
   83354:	0923      	lsrs	r3, r4, #4
   83356:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   8335a:	0929      	lsrs	r1, r5, #4
   8335c:	f004 020f 	and.w	r2, r4, #15
   83360:	460d      	mov	r5, r1
   83362:	461c      	mov	r4, r3
   83364:	5c83      	ldrb	r3, [r0, r2]
   83366:	f806 3d01 	strb.w	r3, [r6, #-1]!
   8336a:	ea54 0305 	orrs.w	r3, r4, r5
   8336e:	d1f1      	bne.n	83354 <_svfprintf_r+0x648>
   83370:	eba9 0306 	sub.w	r3, r9, r6
   83374:	930e      	str	r3, [sp, #56]	; 0x38
   83376:	e5e5      	b.n	82f44 <_svfprintf_r+0x238>
   83378:	9311      	str	r3, [sp, #68]	; 0x44
   8337a:	2a00      	cmp	r2, #0
   8337c:	f040 8738 	bne.w	841f0 <_svfprintf_r+0x14e4>
   83380:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   83382:	f01b 0f08 	tst.w	fp, #8
   83386:	f104 0407 	add.w	r4, r4, #7
   8338a:	f000 84cf 	beq.w	83d2c <_svfprintf_r+0x1020>
   8338e:	f024 0307 	bic.w	r3, r4, #7
   83392:	f103 0208 	add.w	r2, r3, #8
   83396:	920f      	str	r2, [sp, #60]	; 0x3c
   83398:	681a      	ldr	r2, [r3, #0]
   8339a:	685b      	ldr	r3, [r3, #4]
   8339c:	9215      	str	r2, [sp, #84]	; 0x54
   8339e:	9314      	str	r3, [sp, #80]	; 0x50
   833a0:	9b14      	ldr	r3, [sp, #80]	; 0x50
   833a2:	9d15      	ldr	r5, [sp, #84]	; 0x54
   833a4:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   833a8:	4628      	mov	r0, r5
   833aa:	4621      	mov	r1, r4
   833ac:	f04f 32ff 	mov.w	r2, #4294967295
   833b0:	4b6f      	ldr	r3, [pc, #444]	; (83570 <_svfprintf_r+0x864>)
   833b2:	f003 fdf5 	bl	86fa0 <__aeabi_dcmpun>
   833b6:	2800      	cmp	r0, #0
   833b8:	f040 8434 	bne.w	83c24 <_svfprintf_r+0xf18>
   833bc:	4628      	mov	r0, r5
   833be:	4621      	mov	r1, r4
   833c0:	f04f 32ff 	mov.w	r2, #4294967295
   833c4:	4b6a      	ldr	r3, [pc, #424]	; (83570 <_svfprintf_r+0x864>)
   833c6:	f003 fdcd 	bl	86f64 <__aeabi_dcmple>
   833ca:	2800      	cmp	r0, #0
   833cc:	f040 842a 	bne.w	83c24 <_svfprintf_r+0xf18>
   833d0:	a815      	add	r0, sp, #84	; 0x54
   833d2:	c80d      	ldmia	r0, {r0, r2, r3}
   833d4:	9914      	ldr	r1, [sp, #80]	; 0x50
   833d6:	f003 fdbb 	bl	86f50 <__aeabi_dcmplt>
   833da:	2800      	cmp	r0, #0
   833dc:	f040 85d4 	bne.w	83f88 <_svfprintf_r+0x127c>
   833e0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   833e4:	2303      	movs	r3, #3
   833e6:	461a      	mov	r2, r3
   833e8:	9308      	str	r3, [sp, #32]
   833ea:	2300      	movs	r3, #0
   833ec:	4e61      	ldr	r6, [pc, #388]	; (83574 <_svfprintf_r+0x868>)
   833ee:	4619      	mov	r1, r3
   833f0:	930a      	str	r3, [sp, #40]	; 0x28
   833f2:	4b61      	ldr	r3, [pc, #388]	; (83578 <_svfprintf_r+0x86c>)
   833f4:	920e      	str	r2, [sp, #56]	; 0x38
   833f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
   833f8:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   833fc:	9007      	str	r0, [sp, #28]
   833fe:	9112      	str	r1, [sp, #72]	; 0x48
   83400:	2a47      	cmp	r2, #71	; 0x47
   83402:	bfd8      	it	le
   83404:	461e      	movle	r6, r3
   83406:	e5a5      	b.n	82f54 <_svfprintf_r+0x248>
   83408:	f04b 0b08 	orr.w	fp, fp, #8
   8340c:	f89a 3000 	ldrb.w	r3, [sl]
   83410:	e4d6      	b.n	82dc0 <_svfprintf_r+0xb4>
   83412:	f04b 0b10 	orr.w	fp, fp, #16
   83416:	9311      	str	r3, [sp, #68]	; 0x44
   83418:	f01b 0320 	ands.w	r3, fp, #32
   8341c:	f43f aebb 	beq.w	83196 <_svfprintf_r+0x48a>
   83420:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   83422:	3407      	adds	r4, #7
   83424:	f024 0307 	bic.w	r3, r4, #7
   83428:	f103 0208 	add.w	r2, r3, #8
   8342c:	e9d3 4500 	ldrd	r4, r5, [r3]
   83430:	920f      	str	r2, [sp, #60]	; 0x3c
   83432:	2300      	movs	r3, #0
   83434:	e568      	b.n	82f08 <_svfprintf_r+0x1fc>
   83436:	9311      	str	r3, [sp, #68]	; 0x44
   83438:	2a00      	cmp	r2, #0
   8343a:	f040 86c2 	bne.w	841c2 <_svfprintf_r+0x14b6>
   8343e:	4b4f      	ldr	r3, [pc, #316]	; (8357c <_svfprintf_r+0x870>)
   83440:	f01b 0f20 	tst.w	fp, #32
   83444:	9318      	str	r3, [sp, #96]	; 0x60
   83446:	f43f af19 	beq.w	8327c <_svfprintf_r+0x570>
   8344a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8344c:	f01b 0f01 	tst.w	fp, #1
   83450:	f104 0407 	add.w	r4, r4, #7
   83454:	f024 0307 	bic.w	r3, r4, #7
   83458:	f103 0208 	add.w	r2, r3, #8
   8345c:	920f      	str	r2, [sp, #60]	; 0x3c
   8345e:	e9d3 4500 	ldrd	r4, r5, [r3]
   83462:	f47f af1d 	bne.w	832a0 <_svfprintf_r+0x594>
   83466:	2302      	movs	r3, #2
   83468:	e54e      	b.n	82f08 <_svfprintf_r+0x1fc>
   8346a:	f89a 3000 	ldrb.w	r3, [sl]
   8346e:	2900      	cmp	r1, #0
   83470:	f47f aca6 	bne.w	82dc0 <_svfprintf_r+0xb4>
   83474:	2201      	movs	r2, #1
   83476:	2120      	movs	r1, #32
   83478:	e4a2      	b.n	82dc0 <_svfprintf_r+0xb4>
   8347a:	f04b 0b01 	orr.w	fp, fp, #1
   8347e:	f89a 3000 	ldrb.w	r3, [sl]
   83482:	e49d      	b.n	82dc0 <_svfprintf_r+0xb4>
   83484:	f89a 3000 	ldrb.w	r3, [sl]
   83488:	2201      	movs	r2, #1
   8348a:	212b      	movs	r1, #43	; 0x2b
   8348c:	e498      	b.n	82dc0 <_svfprintf_r+0xb4>
   8348e:	f04b 0b20 	orr.w	fp, fp, #32
   83492:	f89a 3000 	ldrb.w	r3, [sl]
   83496:	e493      	b.n	82dc0 <_svfprintf_r+0xb4>
   83498:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   8349c:	f89a 3000 	ldrb.w	r3, [sl]
   834a0:	e48e      	b.n	82dc0 <_svfprintf_r+0xb4>
   834a2:	f89a 3000 	ldrb.w	r3, [sl]
   834a6:	2b6c      	cmp	r3, #108	; 0x6c
   834a8:	bf03      	ittte	eq
   834aa:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   834ae:	f04b 0b20 	orreq.w	fp, fp, #32
   834b2:	f10a 0a01 	addeq.w	sl, sl, #1
   834b6:	f04b 0b10 	orrne.w	fp, fp, #16
   834ba:	e481      	b.n	82dc0 <_svfprintf_r+0xb4>
   834bc:	2a00      	cmp	r2, #0
   834be:	f040 867c 	bne.w	841ba <_svfprintf_r+0x14ae>
   834c2:	f01b 0f20 	tst.w	fp, #32
   834c6:	f040 8452 	bne.w	83d6e <_svfprintf_r+0x1062>
   834ca:	f01b 0f10 	tst.w	fp, #16
   834ce:	f040 8438 	bne.w	83d42 <_svfprintf_r+0x1036>
   834d2:	f01b 0f40 	tst.w	fp, #64	; 0x40
   834d6:	f000 8434 	beq.w	83d42 <_svfprintf_r+0x1036>
   834da:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   834dc:	6813      	ldr	r3, [r2, #0]
   834de:	3204      	adds	r2, #4
   834e0:	920f      	str	r2, [sp, #60]	; 0x3c
   834e2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   834e6:	801a      	strh	r2, [r3, #0]
   834e8:	e437      	b.n	82d5a <_svfprintf_r+0x4e>
   834ea:	2378      	movs	r3, #120	; 0x78
   834ec:	2230      	movs	r2, #48	; 0x30
   834ee:	980f      	ldr	r0, [sp, #60]	; 0x3c
   834f0:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   834f4:	9311      	str	r3, [sp, #68]	; 0x44
   834f6:	1d03      	adds	r3, r0, #4
   834f8:	930f      	str	r3, [sp, #60]	; 0x3c
   834fa:	4b20      	ldr	r3, [pc, #128]	; (8357c <_svfprintf_r+0x870>)
   834fc:	6804      	ldr	r4, [r0, #0]
   834fe:	9318      	str	r3, [sp, #96]	; 0x60
   83500:	f04b 0b02 	orr.w	fp, fp, #2
   83504:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   83508:	2500      	movs	r5, #0
   8350a:	2302      	movs	r3, #2
   8350c:	e4fc      	b.n	82f08 <_svfprintf_r+0x1fc>
   8350e:	9311      	str	r3, [sp, #68]	; 0x44
   83510:	2a00      	cmp	r2, #0
   83512:	f43f aeef 	beq.w	832f4 <_svfprintf_r+0x5e8>
   83516:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8351a:	e6eb      	b.n	832f4 <_svfprintf_r+0x5e8>
   8351c:	2000      	movs	r0, #0
   8351e:	4604      	mov	r4, r0
   83520:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   83524:	f81a 3b01 	ldrb.w	r3, [sl], #1
   83528:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   8352c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   83530:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   83534:	2809      	cmp	r0, #9
   83536:	d9f5      	bls.n	83524 <_svfprintf_r+0x818>
   83538:	940d      	str	r4, [sp, #52]	; 0x34
   8353a:	e443      	b.n	82dc4 <_svfprintf_r+0xb8>
   8353c:	9311      	str	r3, [sp, #68]	; 0x44
   8353e:	2a00      	cmp	r2, #0
   83540:	f040 864a 	bne.w	841d8 <_svfprintf_r+0x14cc>
   83544:	9a11      	ldr	r2, [sp, #68]	; 0x44
   83546:	2a00      	cmp	r2, #0
   83548:	f43f acb6 	beq.w	82eb8 <_svfprintf_r+0x1ac>
   8354c:	2300      	movs	r3, #0
   8354e:	2101      	movs	r1, #1
   83550:	461f      	mov	r7, r3
   83552:	9108      	str	r1, [sp, #32]
   83554:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   83558:	f8cd b01c 	str.w	fp, [sp, #28]
   8355c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   83560:	930a      	str	r3, [sp, #40]	; 0x28
   83562:	9312      	str	r3, [sp, #72]	; 0x48
   83564:	910e      	str	r1, [sp, #56]	; 0x38
   83566:	ae28      	add	r6, sp, #160	; 0xa0
   83568:	e4f8      	b.n	82f5c <_svfprintf_r+0x250>
   8356a:	bf00      	nop
   8356c:	00087398 	.word	0x00087398
   83570:	7fefffff 	.word	0x7fefffff
   83574:	0008738c 	.word	0x0008738c
   83578:	00087388 	.word	0x00087388
   8357c:	000873ac 	.word	0x000873ac
   83580:	aa25      	add	r2, sp, #148	; 0x94
   83582:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83584:	980c      	ldr	r0, [sp, #48]	; 0x30
   83586:	f002 fc37 	bl	85df8 <__ssprint_r>
   8358a:	2800      	cmp	r0, #0
   8358c:	f47f ac9b 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83590:	46c8      	mov	r8, r9
   83592:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   83596:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83598:	e533      	b.n	83002 <_svfprintf_r+0x2f6>
   8359a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8359c:	2b65      	cmp	r3, #101	; 0x65
   8359e:	f340 809a 	ble.w	836d6 <_svfprintf_r+0x9ca>
   835a2:	a815      	add	r0, sp, #84	; 0x54
   835a4:	c80d      	ldmia	r0, {r0, r2, r3}
   835a6:	9914      	ldr	r1, [sp, #80]	; 0x50
   835a8:	f003 fcc8 	bl	86f3c <__aeabi_dcmpeq>
   835ac:	2800      	cmp	r0, #0
   835ae:	f000 8193 	beq.w	838d8 <_svfprintf_r+0xbcc>
   835b2:	2101      	movs	r1, #1
   835b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   835b6:	4ab5      	ldr	r2, [pc, #724]	; (8388c <_svfprintf_r+0xb80>)
   835b8:	440b      	add	r3, r1
   835ba:	440c      	add	r4, r1
   835bc:	2b07      	cmp	r3, #7
   835be:	9427      	str	r4, [sp, #156]	; 0x9c
   835c0:	9326      	str	r3, [sp, #152]	; 0x98
   835c2:	f8c8 1004 	str.w	r1, [r8, #4]
   835c6:	f8c8 2000 	str.w	r2, [r8]
   835ca:	f300 83c6 	bgt.w	83d5a <_svfprintf_r+0x104e>
   835ce:	f108 0808 	add.w	r8, r8, #8
   835d2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   835d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   835d6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   835d8:	4293      	cmp	r3, r2
   835da:	db03      	blt.n	835e4 <_svfprintf_r+0x8d8>
   835dc:	9b07      	ldr	r3, [sp, #28]
   835de:	07dd      	lsls	r5, r3, #31
   835e0:	f57f ad86 	bpl.w	830f0 <_svfprintf_r+0x3e4>
   835e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   835e6:	9919      	ldr	r1, [sp, #100]	; 0x64
   835e8:	3301      	adds	r3, #1
   835ea:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   835ec:	440c      	add	r4, r1
   835ee:	2b07      	cmp	r3, #7
   835f0:	f8c8 2000 	str.w	r2, [r8]
   835f4:	f8c8 1004 	str.w	r1, [r8, #4]
   835f8:	9427      	str	r4, [sp, #156]	; 0x9c
   835fa:	9326      	str	r3, [sp, #152]	; 0x98
   835fc:	f300 83c4 	bgt.w	83d88 <_svfprintf_r+0x107c>
   83600:	f108 0808 	add.w	r8, r8, #8
   83604:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83606:	1e5e      	subs	r6, r3, #1
   83608:	2e00      	cmp	r6, #0
   8360a:	f77f ad71 	ble.w	830f0 <_svfprintf_r+0x3e4>
   8360e:	2e10      	cmp	r6, #16
   83610:	f340 8575 	ble.w	840fe <_svfprintf_r+0x13f2>
   83614:	4622      	mov	r2, r4
   83616:	2710      	movs	r7, #16
   83618:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8361a:	4d9d      	ldr	r5, [pc, #628]	; (83890 <_svfprintf_r+0xb84>)
   8361c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   83620:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83622:	e005      	b.n	83630 <_svfprintf_r+0x924>
   83624:	f108 0808 	add.w	r8, r8, #8
   83628:	3e10      	subs	r6, #16
   8362a:	2e10      	cmp	r6, #16
   8362c:	f340 8225 	ble.w	83a7a <_svfprintf_r+0xd6e>
   83630:	3301      	adds	r3, #1
   83632:	3210      	adds	r2, #16
   83634:	2b07      	cmp	r3, #7
   83636:	9227      	str	r2, [sp, #156]	; 0x9c
   83638:	9326      	str	r3, [sp, #152]	; 0x98
   8363a:	e888 00a0 	stmia.w	r8, {r5, r7}
   8363e:	ddf1      	ble.n	83624 <_svfprintf_r+0x918>
   83640:	aa25      	add	r2, sp, #148	; 0x94
   83642:	4621      	mov	r1, r4
   83644:	4658      	mov	r0, fp
   83646:	f002 fbd7 	bl	85df8 <__ssprint_r>
   8364a:	2800      	cmp	r0, #0
   8364c:	f47f ac3b 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83650:	46c8      	mov	r8, r9
   83652:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83654:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83656:	e7e7      	b.n	83628 <_svfprintf_r+0x91c>
   83658:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8365a:	9a08      	ldr	r2, [sp, #32]
   8365c:	1a9f      	subs	r7, r3, r2
   8365e:	2f00      	cmp	r7, #0
   83660:	f77f acf6 	ble.w	83050 <_svfprintf_r+0x344>
   83664:	2f10      	cmp	r7, #16
   83666:	f340 84a8 	ble.w	83fba <_svfprintf_r+0x12ae>
   8366a:	4d89      	ldr	r5, [pc, #548]	; (83890 <_svfprintf_r+0xb84>)
   8366c:	4642      	mov	r2, r8
   8366e:	4621      	mov	r1, r4
   83670:	46b0      	mov	r8, r6
   83672:	f04f 0b10 	mov.w	fp, #16
   83676:	462e      	mov	r6, r5
   83678:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8367a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8367c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8367e:	e004      	b.n	8368a <_svfprintf_r+0x97e>
   83680:	3f10      	subs	r7, #16
   83682:	2f10      	cmp	r7, #16
   83684:	f102 0208 	add.w	r2, r2, #8
   83688:	dd15      	ble.n	836b6 <_svfprintf_r+0x9aa>
   8368a:	3301      	adds	r3, #1
   8368c:	3110      	adds	r1, #16
   8368e:	2b07      	cmp	r3, #7
   83690:	9127      	str	r1, [sp, #156]	; 0x9c
   83692:	9326      	str	r3, [sp, #152]	; 0x98
   83694:	e882 0840 	stmia.w	r2, {r6, fp}
   83698:	ddf2      	ble.n	83680 <_svfprintf_r+0x974>
   8369a:	aa25      	add	r2, sp, #148	; 0x94
   8369c:	4629      	mov	r1, r5
   8369e:	4620      	mov	r0, r4
   836a0:	f002 fbaa 	bl	85df8 <__ssprint_r>
   836a4:	2800      	cmp	r0, #0
   836a6:	f47f ac0e 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   836aa:	3f10      	subs	r7, #16
   836ac:	2f10      	cmp	r7, #16
   836ae:	464a      	mov	r2, r9
   836b0:	9927      	ldr	r1, [sp, #156]	; 0x9c
   836b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   836b4:	dce9      	bgt.n	8368a <_svfprintf_r+0x97e>
   836b6:	4635      	mov	r5, r6
   836b8:	460c      	mov	r4, r1
   836ba:	4646      	mov	r6, r8
   836bc:	4690      	mov	r8, r2
   836be:	3301      	adds	r3, #1
   836c0:	443c      	add	r4, r7
   836c2:	2b07      	cmp	r3, #7
   836c4:	9427      	str	r4, [sp, #156]	; 0x9c
   836c6:	9326      	str	r3, [sp, #152]	; 0x98
   836c8:	e888 00a0 	stmia.w	r8, {r5, r7}
   836cc:	f300 829e 	bgt.w	83c0c <_svfprintf_r+0xf00>
   836d0:	f108 0808 	add.w	r8, r8, #8
   836d4:	e4bc      	b.n	83050 <_svfprintf_r+0x344>
   836d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   836d8:	2b01      	cmp	r3, #1
   836da:	f340 824f 	ble.w	83b7c <_svfprintf_r+0xe70>
   836de:	2301      	movs	r3, #1
   836e0:	9f26      	ldr	r7, [sp, #152]	; 0x98
   836e2:	441c      	add	r4, r3
   836e4:	441f      	add	r7, r3
   836e6:	2f07      	cmp	r7, #7
   836e8:	9427      	str	r4, [sp, #156]	; 0x9c
   836ea:	f8c8 6000 	str.w	r6, [r8]
   836ee:	9726      	str	r7, [sp, #152]	; 0x98
   836f0:	f8c8 3004 	str.w	r3, [r8, #4]
   836f4:	f300 825f 	bgt.w	83bb6 <_svfprintf_r+0xeaa>
   836f8:	f108 0808 	add.w	r8, r8, #8
   836fc:	9a19      	ldr	r2, [sp, #100]	; 0x64
   836fe:	3701      	adds	r7, #1
   83700:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   83702:	4414      	add	r4, r2
   83704:	2f07      	cmp	r7, #7
   83706:	9427      	str	r4, [sp, #156]	; 0x9c
   83708:	9726      	str	r7, [sp, #152]	; 0x98
   8370a:	f8c8 3000 	str.w	r3, [r8]
   8370e:	f8c8 2004 	str.w	r2, [r8, #4]
   83712:	f300 825c 	bgt.w	83bce <_svfprintf_r+0xec2>
   83716:	f108 0808 	add.w	r8, r8, #8
   8371a:	a815      	add	r0, sp, #84	; 0x54
   8371c:	c80d      	ldmia	r0, {r0, r2, r3}
   8371e:	9914      	ldr	r1, [sp, #80]	; 0x50
   83720:	f003 fc0c 	bl	86f3c <__aeabi_dcmpeq>
   83724:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83726:	2800      	cmp	r0, #0
   83728:	f040 8141 	bne.w	839ae <_svfprintf_r+0xca2>
   8372c:	3b01      	subs	r3, #1
   8372e:	3701      	adds	r7, #1
   83730:	3601      	adds	r6, #1
   83732:	441c      	add	r4, r3
   83734:	2f07      	cmp	r7, #7
   83736:	f8c8 6000 	str.w	r6, [r8]
   8373a:	9726      	str	r7, [sp, #152]	; 0x98
   8373c:	9427      	str	r4, [sp, #156]	; 0x9c
   8373e:	f8c8 3004 	str.w	r3, [r8, #4]
   83742:	f300 8166 	bgt.w	83a12 <_svfprintf_r+0xd06>
   83746:	f108 0808 	add.w	r8, r8, #8
   8374a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   8374c:	3701      	adds	r7, #1
   8374e:	4414      	add	r4, r2
   83750:	ab21      	add	r3, sp, #132	; 0x84
   83752:	2f07      	cmp	r7, #7
   83754:	9427      	str	r4, [sp, #156]	; 0x9c
   83756:	9726      	str	r7, [sp, #152]	; 0x98
   83758:	f8c8 2004 	str.w	r2, [r8, #4]
   8375c:	f8c8 3000 	str.w	r3, [r8]
   83760:	f77f acc4 	ble.w	830ec <_svfprintf_r+0x3e0>
   83764:	aa25      	add	r2, sp, #148	; 0x94
   83766:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83768:	980c      	ldr	r0, [sp, #48]	; 0x30
   8376a:	f002 fb45 	bl	85df8 <__ssprint_r>
   8376e:	2800      	cmp	r0, #0
   83770:	f47f aba9 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83774:	46c8      	mov	r8, r9
   83776:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83778:	e4ba      	b.n	830f0 <_svfprintf_r+0x3e4>
   8377a:	aa25      	add	r2, sp, #148	; 0x94
   8377c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8377e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83780:	f002 fb3a 	bl	85df8 <__ssprint_r>
   83784:	2800      	cmp	r0, #0
   83786:	f43f acfd 	beq.w	83184 <_svfprintf_r+0x478>
   8378a:	f7ff bb9c 	b.w	82ec6 <_svfprintf_r+0x1ba>
   8378e:	f8dd b01c 	ldr.w	fp, [sp, #28]
   83792:	2b01      	cmp	r3, #1
   83794:	f000 817e 	beq.w	83a94 <_svfprintf_r+0xd88>
   83798:	2b02      	cmp	r3, #2
   8379a:	d171      	bne.n	83880 <_svfprintf_r+0xb74>
   8379c:	f8cd b01c 	str.w	fp, [sp, #28]
   837a0:	2400      	movs	r4, #0
   837a2:	2500      	movs	r5, #0
   837a4:	e5d4      	b.n	83350 <_svfprintf_r+0x644>
   837a6:	aa25      	add	r2, sp, #148	; 0x94
   837a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   837aa:	980c      	ldr	r0, [sp, #48]	; 0x30
   837ac:	f002 fb24 	bl	85df8 <__ssprint_r>
   837b0:	2800      	cmp	r0, #0
   837b2:	f47f ab88 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   837b6:	46c8      	mov	r8, r9
   837b8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   837ba:	e486      	b.n	830ca <_svfprintf_r+0x3be>
   837bc:	aa25      	add	r2, sp, #148	; 0x94
   837be:	990b      	ldr	r1, [sp, #44]	; 0x2c
   837c0:	980c      	ldr	r0, [sp, #48]	; 0x30
   837c2:	f002 fb19 	bl	85df8 <__ssprint_r>
   837c6:	2800      	cmp	r0, #0
   837c8:	f47f ab7d 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   837cc:	46c8      	mov	r8, r9
   837ce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   837d0:	e429      	b.n	83026 <_svfprintf_r+0x31a>
   837d2:	2001      	movs	r0, #1
   837d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   837d6:	4a2d      	ldr	r2, [pc, #180]	; (8388c <_svfprintf_r+0xb80>)
   837d8:	4403      	add	r3, r0
   837da:	4404      	add	r4, r0
   837dc:	2b07      	cmp	r3, #7
   837de:	9427      	str	r4, [sp, #156]	; 0x9c
   837e0:	9326      	str	r3, [sp, #152]	; 0x98
   837e2:	f8c8 0004 	str.w	r0, [r8, #4]
   837e6:	f8c8 2000 	str.w	r2, [r8]
   837ea:	f340 82d8 	ble.w	83d9e <_svfprintf_r+0x1092>
   837ee:	aa25      	add	r2, sp, #148	; 0x94
   837f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   837f2:	980c      	ldr	r0, [sp, #48]	; 0x30
   837f4:	f002 fb00 	bl	85df8 <__ssprint_r>
   837f8:	2800      	cmp	r0, #0
   837fa:	f47f ab64 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   837fe:	46c8      	mov	r8, r9
   83800:	991f      	ldr	r1, [sp, #124]	; 0x7c
   83802:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83804:	b929      	cbnz	r1, 83812 <_svfprintf_r+0xb06>
   83806:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83808:	b91b      	cbnz	r3, 83812 <_svfprintf_r+0xb06>
   8380a:	9b07      	ldr	r3, [sp, #28]
   8380c:	07d8      	lsls	r0, r3, #31
   8380e:	f57f ac6f 	bpl.w	830f0 <_svfprintf_r+0x3e4>
   83812:	9819      	ldr	r0, [sp, #100]	; 0x64
   83814:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83816:	4602      	mov	r2, r0
   83818:	3301      	adds	r3, #1
   8381a:	4422      	add	r2, r4
   8381c:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   8381e:	2b07      	cmp	r3, #7
   83820:	9227      	str	r2, [sp, #156]	; 0x9c
   83822:	f8c8 4000 	str.w	r4, [r8]
   83826:	f8c8 0004 	str.w	r0, [r8, #4]
   8382a:	9326      	str	r3, [sp, #152]	; 0x98
   8382c:	f300 8431 	bgt.w	84092 <_svfprintf_r+0x1386>
   83830:	f108 0808 	add.w	r8, r8, #8
   83834:	2900      	cmp	r1, #0
   83836:	f2c0 8409 	blt.w	8404c <_svfprintf_r+0x1340>
   8383a:	9913      	ldr	r1, [sp, #76]	; 0x4c
   8383c:	3301      	adds	r3, #1
   8383e:	188c      	adds	r4, r1, r2
   83840:	2b07      	cmp	r3, #7
   83842:	9427      	str	r4, [sp, #156]	; 0x9c
   83844:	9326      	str	r3, [sp, #152]	; 0x98
   83846:	f8c8 6000 	str.w	r6, [r8]
   8384a:	f8c8 1004 	str.w	r1, [r8, #4]
   8384e:	f77f ac4d 	ble.w	830ec <_svfprintf_r+0x3e0>
   83852:	aa25      	add	r2, sp, #148	; 0x94
   83854:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83856:	980c      	ldr	r0, [sp, #48]	; 0x30
   83858:	f002 face 	bl	85df8 <__ssprint_r>
   8385c:	2800      	cmp	r0, #0
   8385e:	f47f ab32 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83862:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83864:	46c8      	mov	r8, r9
   83866:	e443      	b.n	830f0 <_svfprintf_r+0x3e4>
   83868:	aa25      	add	r2, sp, #148	; 0x94
   8386a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8386c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8386e:	f002 fac3 	bl	85df8 <__ssprint_r>
   83872:	2800      	cmp	r0, #0
   83874:	f47f ab27 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83878:	46c8      	mov	r8, r9
   8387a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8387c:	f7ff bbe5 	b.w	8304a <_svfprintf_r+0x33e>
   83880:	2400      	movs	r4, #0
   83882:	2500      	movs	r5, #0
   83884:	f8cd b01c 	str.w	fp, [sp, #28]
   83888:	4649      	mov	r1, r9
   8388a:	e004      	b.n	83896 <_svfprintf_r+0xb8a>
   8388c:	000873c8 	.word	0x000873c8
   83890:	000873dc 	.word	0x000873dc
   83894:	4631      	mov	r1, r6
   83896:	08e2      	lsrs	r2, r4, #3
   83898:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   8389c:	08e8      	lsrs	r0, r5, #3
   8389e:	f004 0307 	and.w	r3, r4, #7
   838a2:	4605      	mov	r5, r0
   838a4:	4614      	mov	r4, r2
   838a6:	3330      	adds	r3, #48	; 0x30
   838a8:	ea54 0205 	orrs.w	r2, r4, r5
   838ac:	f801 3c01 	strb.w	r3, [r1, #-1]
   838b0:	f101 36ff 	add.w	r6, r1, #4294967295
   838b4:	d1ee      	bne.n	83894 <_svfprintf_r+0xb88>
   838b6:	9a07      	ldr	r2, [sp, #28]
   838b8:	07d2      	lsls	r2, r2, #31
   838ba:	f57f ad59 	bpl.w	83370 <_svfprintf_r+0x664>
   838be:	2b30      	cmp	r3, #48	; 0x30
   838c0:	f43f ad56 	beq.w	83370 <_svfprintf_r+0x664>
   838c4:	2330      	movs	r3, #48	; 0x30
   838c6:	3902      	subs	r1, #2
   838c8:	f806 3c01 	strb.w	r3, [r6, #-1]
   838cc:	eba9 0301 	sub.w	r3, r9, r1
   838d0:	930e      	str	r3, [sp, #56]	; 0x38
   838d2:	460e      	mov	r6, r1
   838d4:	f7ff bb36 	b.w	82f44 <_svfprintf_r+0x238>
   838d8:	991f      	ldr	r1, [sp, #124]	; 0x7c
   838da:	2900      	cmp	r1, #0
   838dc:	f77f af79 	ble.w	837d2 <_svfprintf_r+0xac6>
   838e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   838e2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   838e4:	4293      	cmp	r3, r2
   838e6:	bfa8      	it	ge
   838e8:	4613      	movge	r3, r2
   838ea:	2b00      	cmp	r3, #0
   838ec:	461f      	mov	r7, r3
   838ee:	dd0b      	ble.n	83908 <_svfprintf_r+0xbfc>
   838f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   838f2:	443c      	add	r4, r7
   838f4:	3301      	adds	r3, #1
   838f6:	2b07      	cmp	r3, #7
   838f8:	9427      	str	r4, [sp, #156]	; 0x9c
   838fa:	e888 00c0 	stmia.w	r8, {r6, r7}
   838fe:	9326      	str	r3, [sp, #152]	; 0x98
   83900:	f300 82fb 	bgt.w	83efa <_svfprintf_r+0x11ee>
   83904:	f108 0808 	add.w	r8, r8, #8
   83908:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8390a:	2f00      	cmp	r7, #0
   8390c:	bfa8      	it	ge
   8390e:	1bdb      	subge	r3, r3, r7
   83910:	2b00      	cmp	r3, #0
   83912:	461f      	mov	r7, r3
   83914:	f340 80d7 	ble.w	83ac6 <_svfprintf_r+0xdba>
   83918:	2b10      	cmp	r3, #16
   8391a:	f340 8434 	ble.w	84186 <_svfprintf_r+0x147a>
   8391e:	4dba      	ldr	r5, [pc, #744]	; (83c08 <_svfprintf_r+0xefc>)
   83920:	4642      	mov	r2, r8
   83922:	4621      	mov	r1, r4
   83924:	46b0      	mov	r8, r6
   83926:	f04f 0b10 	mov.w	fp, #16
   8392a:	462e      	mov	r6, r5
   8392c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8392e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   83930:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   83932:	e004      	b.n	8393e <_svfprintf_r+0xc32>
   83934:	3208      	adds	r2, #8
   83936:	3f10      	subs	r7, #16
   83938:	2f10      	cmp	r7, #16
   8393a:	f340 80b5 	ble.w	83aa8 <_svfprintf_r+0xd9c>
   8393e:	3301      	adds	r3, #1
   83940:	3110      	adds	r1, #16
   83942:	2b07      	cmp	r3, #7
   83944:	9127      	str	r1, [sp, #156]	; 0x9c
   83946:	9326      	str	r3, [sp, #152]	; 0x98
   83948:	e882 0840 	stmia.w	r2, {r6, fp}
   8394c:	ddf2      	ble.n	83934 <_svfprintf_r+0xc28>
   8394e:	aa25      	add	r2, sp, #148	; 0x94
   83950:	4629      	mov	r1, r5
   83952:	4620      	mov	r0, r4
   83954:	f002 fa50 	bl	85df8 <__ssprint_r>
   83958:	2800      	cmp	r0, #0
   8395a:	f47f aab4 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   8395e:	464a      	mov	r2, r9
   83960:	9927      	ldr	r1, [sp, #156]	; 0x9c
   83962:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83964:	e7e7      	b.n	83936 <_svfprintf_r+0xc2a>
   83966:	2d00      	cmp	r5, #0
   83968:	bf08      	it	eq
   8396a:	2c0a      	cmpeq	r4, #10
   8396c:	f0c0 8090 	bcc.w	83a90 <_svfprintf_r+0xd84>
   83970:	464e      	mov	r6, r9
   83972:	4620      	mov	r0, r4
   83974:	4629      	mov	r1, r5
   83976:	220a      	movs	r2, #10
   83978:	2300      	movs	r3, #0
   8397a:	f003 fb4f 	bl	8701c <__aeabi_uldivmod>
   8397e:	3230      	adds	r2, #48	; 0x30
   83980:	f806 2d01 	strb.w	r2, [r6, #-1]!
   83984:	4620      	mov	r0, r4
   83986:	4629      	mov	r1, r5
   83988:	2300      	movs	r3, #0
   8398a:	220a      	movs	r2, #10
   8398c:	f003 fb46 	bl	8701c <__aeabi_uldivmod>
   83990:	4604      	mov	r4, r0
   83992:	460d      	mov	r5, r1
   83994:	ea54 0305 	orrs.w	r3, r4, r5
   83998:	d1eb      	bne.n	83972 <_svfprintf_r+0xc66>
   8399a:	eba9 0306 	sub.w	r3, r9, r6
   8399e:	930e      	str	r3, [sp, #56]	; 0x38
   839a0:	f7ff bad0 	b.w	82f44 <_svfprintf_r+0x238>
   839a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   839a6:	464e      	mov	r6, r9
   839a8:	930e      	str	r3, [sp, #56]	; 0x38
   839aa:	f7ff bacb 	b.w	82f44 <_svfprintf_r+0x238>
   839ae:	1e5e      	subs	r6, r3, #1
   839b0:	2e00      	cmp	r6, #0
   839b2:	f77f aeca 	ble.w	8374a <_svfprintf_r+0xa3e>
   839b6:	2e10      	cmp	r6, #16
   839b8:	f340 83e3 	ble.w	84182 <_svfprintf_r+0x1476>
   839bc:	4622      	mov	r2, r4
   839be:	f04f 0b10 	mov.w	fp, #16
   839c2:	4d91      	ldr	r5, [pc, #580]	; (83c08 <_svfprintf_r+0xefc>)
   839c4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   839c6:	e004      	b.n	839d2 <_svfprintf_r+0xcc6>
   839c8:	3e10      	subs	r6, #16
   839ca:	2e10      	cmp	r6, #16
   839cc:	f108 0808 	add.w	r8, r8, #8
   839d0:	dd15      	ble.n	839fe <_svfprintf_r+0xcf2>
   839d2:	3701      	adds	r7, #1
   839d4:	3210      	adds	r2, #16
   839d6:	2f07      	cmp	r7, #7
   839d8:	9227      	str	r2, [sp, #156]	; 0x9c
   839da:	9726      	str	r7, [sp, #152]	; 0x98
   839dc:	e888 0820 	stmia.w	r8, {r5, fp}
   839e0:	ddf2      	ble.n	839c8 <_svfprintf_r+0xcbc>
   839e2:	aa25      	add	r2, sp, #148	; 0x94
   839e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   839e6:	4620      	mov	r0, r4
   839e8:	f002 fa06 	bl	85df8 <__ssprint_r>
   839ec:	2800      	cmp	r0, #0
   839ee:	f47f aa6a 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   839f2:	3e10      	subs	r6, #16
   839f4:	2e10      	cmp	r6, #16
   839f6:	46c8      	mov	r8, r9
   839f8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   839fa:	9f26      	ldr	r7, [sp, #152]	; 0x98
   839fc:	dce9      	bgt.n	839d2 <_svfprintf_r+0xcc6>
   839fe:	4614      	mov	r4, r2
   83a00:	3701      	adds	r7, #1
   83a02:	4434      	add	r4, r6
   83a04:	2f07      	cmp	r7, #7
   83a06:	9427      	str	r4, [sp, #156]	; 0x9c
   83a08:	9726      	str	r7, [sp, #152]	; 0x98
   83a0a:	e888 0060 	stmia.w	r8, {r5, r6}
   83a0e:	f77f ae9a 	ble.w	83746 <_svfprintf_r+0xa3a>
   83a12:	aa25      	add	r2, sp, #148	; 0x94
   83a14:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83a16:	980c      	ldr	r0, [sp, #48]	; 0x30
   83a18:	f002 f9ee 	bl	85df8 <__ssprint_r>
   83a1c:	2800      	cmp	r0, #0
   83a1e:	f47f aa52 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83a22:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83a24:	9f26      	ldr	r7, [sp, #152]	; 0x98
   83a26:	46c8      	mov	r8, r9
   83a28:	e68f      	b.n	8374a <_svfprintf_r+0xa3e>
   83a2a:	3204      	adds	r2, #4
   83a2c:	681c      	ldr	r4, [r3, #0]
   83a2e:	2500      	movs	r5, #0
   83a30:	2301      	movs	r3, #1
   83a32:	920f      	str	r2, [sp, #60]	; 0x3c
   83a34:	f7ff ba68 	b.w	82f08 <_svfprintf_r+0x1fc>
   83a38:	681c      	ldr	r4, [r3, #0]
   83a3a:	3304      	adds	r3, #4
   83a3c:	930f      	str	r3, [sp, #60]	; 0x3c
   83a3e:	2500      	movs	r5, #0
   83a40:	e42a      	b.n	83298 <_svfprintf_r+0x58c>
   83a42:	681c      	ldr	r4, [r3, #0]
   83a44:	3304      	adds	r3, #4
   83a46:	17e5      	asrs	r5, r4, #31
   83a48:	4622      	mov	r2, r4
   83a4a:	930f      	str	r3, [sp, #60]	; 0x3c
   83a4c:	462b      	mov	r3, r5
   83a4e:	2a00      	cmp	r2, #0
   83a50:	f173 0300 	sbcs.w	r3, r3, #0
   83a54:	f6bf ac68 	bge.w	83328 <_svfprintf_r+0x61c>
   83a58:	272d      	movs	r7, #45	; 0x2d
   83a5a:	4264      	negs	r4, r4
   83a5c:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   83a60:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   83a64:	2301      	movs	r3, #1
   83a66:	f7ff ba53 	b.w	82f10 <_svfprintf_r+0x204>
   83a6a:	990f      	ldr	r1, [sp, #60]	; 0x3c
   83a6c:	2500      	movs	r5, #0
   83a6e:	460a      	mov	r2, r1
   83a70:	3204      	adds	r2, #4
   83a72:	680c      	ldr	r4, [r1, #0]
   83a74:	920f      	str	r2, [sp, #60]	; 0x3c
   83a76:	f7ff ba47 	b.w	82f08 <_svfprintf_r+0x1fc>
   83a7a:	4614      	mov	r4, r2
   83a7c:	3301      	adds	r3, #1
   83a7e:	4434      	add	r4, r6
   83a80:	2b07      	cmp	r3, #7
   83a82:	9427      	str	r4, [sp, #156]	; 0x9c
   83a84:	9326      	str	r3, [sp, #152]	; 0x98
   83a86:	e888 0060 	stmia.w	r8, {r5, r6}
   83a8a:	f77f ab2f 	ble.w	830ec <_svfprintf_r+0x3e0>
   83a8e:	e6e0      	b.n	83852 <_svfprintf_r+0xb46>
   83a90:	f8dd b01c 	ldr.w	fp, [sp, #28]
   83a94:	2301      	movs	r3, #1
   83a96:	ae42      	add	r6, sp, #264	; 0x108
   83a98:	3430      	adds	r4, #48	; 0x30
   83a9a:	f8cd b01c 	str.w	fp, [sp, #28]
   83a9e:	f806 4d41 	strb.w	r4, [r6, #-65]!
   83aa2:	930e      	str	r3, [sp, #56]	; 0x38
   83aa4:	f7ff ba4e 	b.w	82f44 <_svfprintf_r+0x238>
   83aa8:	4635      	mov	r5, r6
   83aaa:	460c      	mov	r4, r1
   83aac:	4646      	mov	r6, r8
   83aae:	4690      	mov	r8, r2
   83ab0:	3301      	adds	r3, #1
   83ab2:	443c      	add	r4, r7
   83ab4:	2b07      	cmp	r3, #7
   83ab6:	9427      	str	r4, [sp, #156]	; 0x9c
   83ab8:	9326      	str	r3, [sp, #152]	; 0x98
   83aba:	e888 00a0 	stmia.w	r8, {r5, r7}
   83abe:	f300 8246 	bgt.w	83f4e <_svfprintf_r+0x1242>
   83ac2:	f108 0808 	add.w	r8, r8, #8
   83ac6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   83ac8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83aca:	429a      	cmp	r2, r3
   83acc:	db45      	blt.n	83b5a <_svfprintf_r+0xe4e>
   83ace:	9b07      	ldr	r3, [sp, #28]
   83ad0:	07d9      	lsls	r1, r3, #31
   83ad2:	d442      	bmi.n	83b5a <_svfprintf_r+0xe4e>
   83ad4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83ad6:	9812      	ldr	r0, [sp, #72]	; 0x48
   83ad8:	1a9a      	subs	r2, r3, r2
   83ada:	1a1d      	subs	r5, r3, r0
   83adc:	4295      	cmp	r5, r2
   83ade:	bfa8      	it	ge
   83ae0:	4615      	movge	r5, r2
   83ae2:	2d00      	cmp	r5, #0
   83ae4:	dd0e      	ble.n	83b04 <_svfprintf_r+0xdf8>
   83ae6:	9926      	ldr	r1, [sp, #152]	; 0x98
   83ae8:	4406      	add	r6, r0
   83aea:	3101      	adds	r1, #1
   83aec:	442c      	add	r4, r5
   83aee:	2907      	cmp	r1, #7
   83af0:	f8c8 6000 	str.w	r6, [r8]
   83af4:	9427      	str	r4, [sp, #156]	; 0x9c
   83af6:	f8c8 5004 	str.w	r5, [r8, #4]
   83afa:	9126      	str	r1, [sp, #152]	; 0x98
   83afc:	f300 8216 	bgt.w	83f2c <_svfprintf_r+0x1220>
   83b00:	f108 0808 	add.w	r8, r8, #8
   83b04:	2d00      	cmp	r5, #0
   83b06:	bfb4      	ite	lt
   83b08:	4616      	movlt	r6, r2
   83b0a:	1b56      	subge	r6, r2, r5
   83b0c:	2e00      	cmp	r6, #0
   83b0e:	f77f aaef 	ble.w	830f0 <_svfprintf_r+0x3e4>
   83b12:	2e10      	cmp	r6, #16
   83b14:	f340 82f3 	ble.w	840fe <_svfprintf_r+0x13f2>
   83b18:	4622      	mov	r2, r4
   83b1a:	2710      	movs	r7, #16
   83b1c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83b1e:	4d3a      	ldr	r5, [pc, #232]	; (83c08 <_svfprintf_r+0xefc>)
   83b20:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   83b24:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83b26:	e004      	b.n	83b32 <_svfprintf_r+0xe26>
   83b28:	f108 0808 	add.w	r8, r8, #8
   83b2c:	3e10      	subs	r6, #16
   83b2e:	2e10      	cmp	r6, #16
   83b30:	dda3      	ble.n	83a7a <_svfprintf_r+0xd6e>
   83b32:	3301      	adds	r3, #1
   83b34:	3210      	adds	r2, #16
   83b36:	2b07      	cmp	r3, #7
   83b38:	9227      	str	r2, [sp, #156]	; 0x9c
   83b3a:	9326      	str	r3, [sp, #152]	; 0x98
   83b3c:	e888 00a0 	stmia.w	r8, {r5, r7}
   83b40:	ddf2      	ble.n	83b28 <_svfprintf_r+0xe1c>
   83b42:	aa25      	add	r2, sp, #148	; 0x94
   83b44:	4621      	mov	r1, r4
   83b46:	4658      	mov	r0, fp
   83b48:	f002 f956 	bl	85df8 <__ssprint_r>
   83b4c:	2800      	cmp	r0, #0
   83b4e:	f47f a9ba 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83b52:	46c8      	mov	r8, r9
   83b54:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83b56:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83b58:	e7e8      	b.n	83b2c <_svfprintf_r+0xe20>
   83b5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83b5c:	9819      	ldr	r0, [sp, #100]	; 0x64
   83b5e:	3301      	adds	r3, #1
   83b60:	991a      	ldr	r1, [sp, #104]	; 0x68
   83b62:	4404      	add	r4, r0
   83b64:	2b07      	cmp	r3, #7
   83b66:	9427      	str	r4, [sp, #156]	; 0x9c
   83b68:	f8c8 1000 	str.w	r1, [r8]
   83b6c:	f8c8 0004 	str.w	r0, [r8, #4]
   83b70:	9326      	str	r3, [sp, #152]	; 0x98
   83b72:	f300 81cf 	bgt.w	83f14 <_svfprintf_r+0x1208>
   83b76:	f108 0808 	add.w	r8, r8, #8
   83b7a:	e7ab      	b.n	83ad4 <_svfprintf_r+0xdc8>
   83b7c:	9b07      	ldr	r3, [sp, #28]
   83b7e:	07da      	lsls	r2, r3, #31
   83b80:	f53f adad 	bmi.w	836de <_svfprintf_r+0x9d2>
   83b84:	2301      	movs	r3, #1
   83b86:	9f26      	ldr	r7, [sp, #152]	; 0x98
   83b88:	441c      	add	r4, r3
   83b8a:	441f      	add	r7, r3
   83b8c:	2f07      	cmp	r7, #7
   83b8e:	9427      	str	r4, [sp, #156]	; 0x9c
   83b90:	f8c8 6000 	str.w	r6, [r8]
   83b94:	9726      	str	r7, [sp, #152]	; 0x98
   83b96:	f8c8 3004 	str.w	r3, [r8, #4]
   83b9a:	f77f add4 	ble.w	83746 <_svfprintf_r+0xa3a>
   83b9e:	aa25      	add	r2, sp, #148	; 0x94
   83ba0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83ba2:	980c      	ldr	r0, [sp, #48]	; 0x30
   83ba4:	f002 f928 	bl	85df8 <__ssprint_r>
   83ba8:	2800      	cmp	r0, #0
   83baa:	f47f a98c 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83bae:	46c8      	mov	r8, r9
   83bb0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83bb2:	9f26      	ldr	r7, [sp, #152]	; 0x98
   83bb4:	e5c9      	b.n	8374a <_svfprintf_r+0xa3e>
   83bb6:	aa25      	add	r2, sp, #148	; 0x94
   83bb8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83bba:	980c      	ldr	r0, [sp, #48]	; 0x30
   83bbc:	f002 f91c 	bl	85df8 <__ssprint_r>
   83bc0:	2800      	cmp	r0, #0
   83bc2:	f47f a980 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83bc6:	46c8      	mov	r8, r9
   83bc8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83bca:	9f26      	ldr	r7, [sp, #152]	; 0x98
   83bcc:	e596      	b.n	836fc <_svfprintf_r+0x9f0>
   83bce:	aa25      	add	r2, sp, #148	; 0x94
   83bd0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83bd2:	980c      	ldr	r0, [sp, #48]	; 0x30
   83bd4:	f002 f910 	bl	85df8 <__ssprint_r>
   83bd8:	2800      	cmp	r0, #0
   83bda:	f47f a974 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83bde:	46c8      	mov	r8, r9
   83be0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83be2:	9f26      	ldr	r7, [sp, #152]	; 0x98
   83be4:	e599      	b.n	8371a <_svfprintf_r+0xa0e>
   83be6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   83be8:	3407      	adds	r4, #7
   83bea:	f024 0407 	bic.w	r4, r4, #7
   83bee:	f104 0108 	add.w	r1, r4, #8
   83bf2:	e9d4 2300 	ldrd	r2, r3, [r4]
   83bf6:	910f      	str	r1, [sp, #60]	; 0x3c
   83bf8:	4614      	mov	r4, r2
   83bfa:	461d      	mov	r5, r3
   83bfc:	f7ff bb8f 	b.w	8331e <_svfprintf_r+0x612>
   83c00:	464e      	mov	r6, r9
   83c02:	f7ff b99f 	b.w	82f44 <_svfprintf_r+0x238>
   83c06:	bf00      	nop
   83c08:	000873dc 	.word	0x000873dc
   83c0c:	aa25      	add	r2, sp, #148	; 0x94
   83c0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83c10:	980c      	ldr	r0, [sp, #48]	; 0x30
   83c12:	f002 f8f1 	bl	85df8 <__ssprint_r>
   83c16:	2800      	cmp	r0, #0
   83c18:	f47f a955 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83c1c:	46c8      	mov	r8, r9
   83c1e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83c20:	f7ff ba16 	b.w	83050 <_svfprintf_r+0x344>
   83c24:	9c15      	ldr	r4, [sp, #84]	; 0x54
   83c26:	4622      	mov	r2, r4
   83c28:	4620      	mov	r0, r4
   83c2a:	9c14      	ldr	r4, [sp, #80]	; 0x50
   83c2c:	4623      	mov	r3, r4
   83c2e:	4621      	mov	r1, r4
   83c30:	f003 f9b6 	bl	86fa0 <__aeabi_dcmpun>
   83c34:	2800      	cmp	r0, #0
   83c36:	f040 8273 	bne.w	84120 <_svfprintf_r+0x1414>
   83c3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83c3c:	3301      	adds	r3, #1
   83c3e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83c40:	f023 0320 	bic.w	r3, r3, #32
   83c44:	930e      	str	r3, [sp, #56]	; 0x38
   83c46:	f000 819c 	beq.w	83f82 <_svfprintf_r+0x1276>
   83c4a:	2b47      	cmp	r3, #71	; 0x47
   83c4c:	f000 80d6 	beq.w	83dfc <_svfprintf_r+0x10f0>
   83c50:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   83c54:	9307      	str	r3, [sp, #28]
   83c56:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83c58:	1e1f      	subs	r7, r3, #0
   83c5a:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83c5c:	9308      	str	r3, [sp, #32]
   83c5e:	bfb7      	itett	lt
   83c60:	463b      	movlt	r3, r7
   83c62:	2300      	movge	r3, #0
   83c64:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   83c68:	232d      	movlt	r3, #45	; 0x2d
   83c6a:	9310      	str	r3, [sp, #64]	; 0x40
   83c6c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83c6e:	2b66      	cmp	r3, #102	; 0x66
   83c70:	f000 8190 	beq.w	83f94 <_svfprintf_r+0x1288>
   83c74:	2b46      	cmp	r3, #70	; 0x46
   83c76:	f000 80a4 	beq.w	83dc2 <_svfprintf_r+0x10b6>
   83c7a:	2002      	movs	r0, #2
   83c7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83c7e:	a923      	add	r1, sp, #140	; 0x8c
   83c80:	2b45      	cmp	r3, #69	; 0x45
   83c82:	bf0a      	itet	eq
   83c84:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   83c86:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   83c88:	1c5d      	addeq	r5, r3, #1
   83c8a:	e88d 0021 	stmia.w	sp, {r0, r5}
   83c8e:	9104      	str	r1, [sp, #16]
   83c90:	a820      	add	r0, sp, #128	; 0x80
   83c92:	a91f      	add	r1, sp, #124	; 0x7c
   83c94:	463b      	mov	r3, r7
   83c96:	9003      	str	r0, [sp, #12]
   83c98:	9a08      	ldr	r2, [sp, #32]
   83c9a:	9102      	str	r1, [sp, #8]
   83c9c:	980c      	ldr	r0, [sp, #48]	; 0x30
   83c9e:	f000 fb5b 	bl	84358 <_dtoa_r>
   83ca2:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83ca4:	4606      	mov	r6, r0
   83ca6:	2b67      	cmp	r3, #103	; 0x67
   83ca8:	f040 81ba 	bne.w	84020 <_svfprintf_r+0x1314>
   83cac:	f01b 0f01 	tst.w	fp, #1
   83cb0:	f000 8223 	beq.w	840fa <_svfprintf_r+0x13ee>
   83cb4:	1974      	adds	r4, r6, r5
   83cb6:	9a16      	ldr	r2, [sp, #88]	; 0x58
   83cb8:	9808      	ldr	r0, [sp, #32]
   83cba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   83cbc:	4639      	mov	r1, r7
   83cbe:	f003 f93d 	bl	86f3c <__aeabi_dcmpeq>
   83cc2:	2800      	cmp	r0, #0
   83cc4:	f040 8124 	bne.w	83f10 <_svfprintf_r+0x1204>
   83cc8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83cca:	42a3      	cmp	r3, r4
   83ccc:	d206      	bcs.n	83cdc <_svfprintf_r+0xfd0>
   83cce:	2130      	movs	r1, #48	; 0x30
   83cd0:	1c5a      	adds	r2, r3, #1
   83cd2:	9223      	str	r2, [sp, #140]	; 0x8c
   83cd4:	7019      	strb	r1, [r3, #0]
   83cd6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83cd8:	429c      	cmp	r4, r3
   83cda:	d8f9      	bhi.n	83cd0 <_svfprintf_r+0xfc4>
   83cdc:	1b9b      	subs	r3, r3, r6
   83cde:	9313      	str	r3, [sp, #76]	; 0x4c
   83ce0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83ce2:	2b47      	cmp	r3, #71	; 0x47
   83ce4:	f000 80a2 	beq.w	83e2c <_svfprintf_r+0x1120>
   83ce8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83cea:	2b65      	cmp	r3, #101	; 0x65
   83cec:	f340 81a7 	ble.w	8403e <_svfprintf_r+0x1332>
   83cf0:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83cf2:	2b66      	cmp	r3, #102	; 0x66
   83cf4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   83cf6:	9312      	str	r3, [sp, #72]	; 0x48
   83cf8:	f000 8171 	beq.w	83fde <_svfprintf_r+0x12d2>
   83cfc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83cfe:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83d00:	4619      	mov	r1, r3
   83d02:	4291      	cmp	r1, r2
   83d04:	f300 815d 	bgt.w	83fc2 <_svfprintf_r+0x12b6>
   83d08:	f01b 0f01 	tst.w	fp, #1
   83d0c:	f040 81f0 	bne.w	840f0 <_svfprintf_r+0x13e4>
   83d10:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   83d14:	9308      	str	r3, [sp, #32]
   83d16:	2367      	movs	r3, #103	; 0x67
   83d18:	920e      	str	r2, [sp, #56]	; 0x38
   83d1a:	9311      	str	r3, [sp, #68]	; 0x44
   83d1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
   83d1e:	2b00      	cmp	r3, #0
   83d20:	d17d      	bne.n	83e1e <_svfprintf_r+0x1112>
   83d22:	930a      	str	r3, [sp, #40]	; 0x28
   83d24:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   83d28:	f7ff b914 	b.w	82f54 <_svfprintf_r+0x248>
   83d2c:	f024 0407 	bic.w	r4, r4, #7
   83d30:	6823      	ldr	r3, [r4, #0]
   83d32:	9315      	str	r3, [sp, #84]	; 0x54
   83d34:	6863      	ldr	r3, [r4, #4]
   83d36:	9314      	str	r3, [sp, #80]	; 0x50
   83d38:	f104 0308 	add.w	r3, r4, #8
   83d3c:	930f      	str	r3, [sp, #60]	; 0x3c
   83d3e:	f7ff bb2f 	b.w	833a0 <_svfprintf_r+0x694>
   83d42:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   83d44:	6813      	ldr	r3, [r2, #0]
   83d46:	3204      	adds	r2, #4
   83d48:	920f      	str	r2, [sp, #60]	; 0x3c
   83d4a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   83d4c:	601a      	str	r2, [r3, #0]
   83d4e:	f7ff b804 	b.w	82d5a <_svfprintf_r+0x4e>
   83d52:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83d54:	4daf      	ldr	r5, [pc, #700]	; (84014 <_svfprintf_r+0x1308>)
   83d56:	f7ff b9ad 	b.w	830b4 <_svfprintf_r+0x3a8>
   83d5a:	aa25      	add	r2, sp, #148	; 0x94
   83d5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83d5e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83d60:	f002 f84a 	bl	85df8 <__ssprint_r>
   83d64:	2800      	cmp	r0, #0
   83d66:	f47f a8ae 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83d6a:	46c8      	mov	r8, r9
   83d6c:	e431      	b.n	835d2 <_svfprintf_r+0x8c6>
   83d6e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   83d70:	4613      	mov	r3, r2
   83d72:	3304      	adds	r3, #4
   83d74:	930f      	str	r3, [sp, #60]	; 0x3c
   83d76:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83d78:	6811      	ldr	r1, [r2, #0]
   83d7a:	17dd      	asrs	r5, r3, #31
   83d7c:	461a      	mov	r2, r3
   83d7e:	462b      	mov	r3, r5
   83d80:	e9c1 2300 	strd	r2, r3, [r1]
   83d84:	f7fe bfe9 	b.w	82d5a <_svfprintf_r+0x4e>
   83d88:	aa25      	add	r2, sp, #148	; 0x94
   83d8a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83d8c:	980c      	ldr	r0, [sp, #48]	; 0x30
   83d8e:	f002 f833 	bl	85df8 <__ssprint_r>
   83d92:	2800      	cmp	r0, #0
   83d94:	f47f a897 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83d98:	46c8      	mov	r8, r9
   83d9a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83d9c:	e432      	b.n	83604 <_svfprintf_r+0x8f8>
   83d9e:	f108 0808 	add.w	r8, r8, #8
   83da2:	e52f      	b.n	83804 <_svfprintf_r+0xaf8>
   83da4:	2140      	movs	r1, #64	; 0x40
   83da6:	980c      	ldr	r0, [sp, #48]	; 0x30
   83da8:	f001 fa24 	bl	851f4 <_malloc_r>
   83dac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83dae:	6010      	str	r0, [r2, #0]
   83db0:	6110      	str	r0, [r2, #16]
   83db2:	2800      	cmp	r0, #0
   83db4:	f000 8214 	beq.w	841e0 <_svfprintf_r+0x14d4>
   83db8:	2340      	movs	r3, #64	; 0x40
   83dba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83dbc:	6153      	str	r3, [r2, #20]
   83dbe:	f7fe bfbc 	b.w	82d3a <_svfprintf_r+0x2e>
   83dc2:	2003      	movs	r0, #3
   83dc4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   83dc6:	a923      	add	r1, sp, #140	; 0x8c
   83dc8:	e88d 0011 	stmia.w	sp, {r0, r4}
   83dcc:	9104      	str	r1, [sp, #16]
   83dce:	a820      	add	r0, sp, #128	; 0x80
   83dd0:	a91f      	add	r1, sp, #124	; 0x7c
   83dd2:	9003      	str	r0, [sp, #12]
   83dd4:	9a08      	ldr	r2, [sp, #32]
   83dd6:	463b      	mov	r3, r7
   83dd8:	9102      	str	r1, [sp, #8]
   83dda:	980c      	ldr	r0, [sp, #48]	; 0x30
   83ddc:	f000 fabc 	bl	84358 <_dtoa_r>
   83de0:	4625      	mov	r5, r4
   83de2:	4606      	mov	r6, r0
   83de4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83de6:	1974      	adds	r4, r6, r5
   83de8:	2b46      	cmp	r3, #70	; 0x46
   83dea:	f47f af64 	bne.w	83cb6 <_svfprintf_r+0xfaa>
   83dee:	7833      	ldrb	r3, [r6, #0]
   83df0:	2b30      	cmp	r3, #48	; 0x30
   83df2:	f000 8187 	beq.w	84104 <_svfprintf_r+0x13f8>
   83df6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   83df8:	442c      	add	r4, r5
   83dfa:	e75c      	b.n	83cb6 <_svfprintf_r+0xfaa>
   83dfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83dfe:	2b00      	cmp	r3, #0
   83e00:	bf08      	it	eq
   83e02:	2301      	moveq	r3, #1
   83e04:	930a      	str	r3, [sp, #40]	; 0x28
   83e06:	e723      	b.n	83c50 <_svfprintf_r+0xf44>
   83e08:	4630      	mov	r0, r6
   83e0a:	950a      	str	r5, [sp, #40]	; 0x28
   83e0c:	f7fe ff50 	bl	82cb0 <strlen>
   83e10:	940f      	str	r4, [sp, #60]	; 0x3c
   83e12:	900e      	str	r0, [sp, #56]	; 0x38
   83e14:	f8cd b01c 	str.w	fp, [sp, #28]
   83e18:	4603      	mov	r3, r0
   83e1a:	f7ff b9e7 	b.w	831ec <_svfprintf_r+0x4e0>
   83e1e:	272d      	movs	r7, #45	; 0x2d
   83e20:	2300      	movs	r3, #0
   83e22:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   83e26:	930a      	str	r3, [sp, #40]	; 0x28
   83e28:	f7ff b895 	b.w	82f56 <_svfprintf_r+0x24a>
   83e2c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   83e2e:	461a      	mov	r2, r3
   83e30:	9312      	str	r3, [sp, #72]	; 0x48
   83e32:	3303      	adds	r3, #3
   83e34:	db04      	blt.n	83e40 <_svfprintf_r+0x1134>
   83e36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83e38:	4619      	mov	r1, r3
   83e3a:	4291      	cmp	r1, r2
   83e3c:	f6bf af5e 	bge.w	83cfc <_svfprintf_r+0xff0>
   83e40:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83e42:	3b02      	subs	r3, #2
   83e44:	9311      	str	r3, [sp, #68]	; 0x44
   83e46:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83e48:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   83e4c:	3b01      	subs	r3, #1
   83e4e:	2b00      	cmp	r3, #0
   83e50:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   83e54:	bfb4      	ite	lt
   83e56:	222d      	movlt	r2, #45	; 0x2d
   83e58:	222b      	movge	r2, #43	; 0x2b
   83e5a:	931f      	str	r3, [sp, #124]	; 0x7c
   83e5c:	bfb8      	it	lt
   83e5e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   83e60:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   83e64:	bfb8      	it	lt
   83e66:	f1c3 0301 	rsblt	r3, r3, #1
   83e6a:	2b09      	cmp	r3, #9
   83e6c:	f340 811f 	ble.w	840ae <_svfprintf_r+0x13a2>
   83e70:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   83e74:	4601      	mov	r1, r0
   83e76:	4c68      	ldr	r4, [pc, #416]	; (84018 <_svfprintf_r+0x130c>)
   83e78:	e000      	b.n	83e7c <_svfprintf_r+0x1170>
   83e7a:	4611      	mov	r1, r2
   83e7c:	fb84 5203 	smull	r5, r2, r4, r3
   83e80:	17dd      	asrs	r5, r3, #31
   83e82:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   83e86:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   83e8a:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   83e8e:	3230      	adds	r2, #48	; 0x30
   83e90:	2d09      	cmp	r5, #9
   83e92:	f801 2c01 	strb.w	r2, [r1, #-1]
   83e96:	462b      	mov	r3, r5
   83e98:	f101 32ff 	add.w	r2, r1, #4294967295
   83e9c:	dced      	bgt.n	83e7a <_svfprintf_r+0x116e>
   83e9e:	3330      	adds	r3, #48	; 0x30
   83ea0:	3902      	subs	r1, #2
   83ea2:	b2dc      	uxtb	r4, r3
   83ea4:	4288      	cmp	r0, r1
   83ea6:	f802 4c01 	strb.w	r4, [r2, #-1]
   83eaa:	f240 8192 	bls.w	841d2 <_svfprintf_r+0x14c6>
   83eae:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   83eb2:	4613      	mov	r3, r2
   83eb4:	e001      	b.n	83eba <_svfprintf_r+0x11ae>
   83eb6:	f813 4b01 	ldrb.w	r4, [r3], #1
   83eba:	4283      	cmp	r3, r0
   83ebc:	f801 4b01 	strb.w	r4, [r1], #1
   83ec0:	d1f9      	bne.n	83eb6 <_svfprintf_r+0x11aa>
   83ec2:	3301      	adds	r3, #1
   83ec4:	1a9b      	subs	r3, r3, r2
   83ec6:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   83eca:	4413      	add	r3, r2
   83ecc:	aa21      	add	r2, sp, #132	; 0x84
   83ece:	1a9b      	subs	r3, r3, r2
   83ed0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   83ed2:	931b      	str	r3, [sp, #108]	; 0x6c
   83ed4:	2a01      	cmp	r2, #1
   83ed6:	4413      	add	r3, r2
   83ed8:	930e      	str	r3, [sp, #56]	; 0x38
   83eda:	f340 8148 	ble.w	8416e <_svfprintf_r+0x1462>
   83ede:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83ee0:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83ee2:	4413      	add	r3, r2
   83ee4:	930e      	str	r3, [sp, #56]	; 0x38
   83ee6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83eea:	9308      	str	r3, [sp, #32]
   83eec:	2300      	movs	r3, #0
   83eee:	9312      	str	r3, [sp, #72]	; 0x48
   83ef0:	e714      	b.n	83d1c <_svfprintf_r+0x1010>
   83ef2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83ef4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83ef6:	f7ff b876 	b.w	82fe6 <_svfprintf_r+0x2da>
   83efa:	aa25      	add	r2, sp, #148	; 0x94
   83efc:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83efe:	980c      	ldr	r0, [sp, #48]	; 0x30
   83f00:	f001 ff7a 	bl	85df8 <__ssprint_r>
   83f04:	2800      	cmp	r0, #0
   83f06:	f47e afde 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83f0a:	46c8      	mov	r8, r9
   83f0c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83f0e:	e4fb      	b.n	83908 <_svfprintf_r+0xbfc>
   83f10:	4623      	mov	r3, r4
   83f12:	e6e3      	b.n	83cdc <_svfprintf_r+0xfd0>
   83f14:	aa25      	add	r2, sp, #148	; 0x94
   83f16:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83f18:	980c      	ldr	r0, [sp, #48]	; 0x30
   83f1a:	f001 ff6d 	bl	85df8 <__ssprint_r>
   83f1e:	2800      	cmp	r0, #0
   83f20:	f47e afd1 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83f24:	46c8      	mov	r8, r9
   83f26:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   83f28:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83f2a:	e5d3      	b.n	83ad4 <_svfprintf_r+0xdc8>
   83f2c:	aa25      	add	r2, sp, #148	; 0x94
   83f2e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83f30:	980c      	ldr	r0, [sp, #48]	; 0x30
   83f32:	f001 ff61 	bl	85df8 <__ssprint_r>
   83f36:	2800      	cmp	r0, #0
   83f38:	f47e afc5 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83f3c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   83f3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83f40:	46c8      	mov	r8, r9
   83f42:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83f44:	1a9a      	subs	r2, r3, r2
   83f46:	e5dd      	b.n	83b04 <_svfprintf_r+0xdf8>
   83f48:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83f4a:	f7ff b8fe 	b.w	8314a <_svfprintf_r+0x43e>
   83f4e:	aa25      	add	r2, sp, #148	; 0x94
   83f50:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83f52:	980c      	ldr	r0, [sp, #48]	; 0x30
   83f54:	f001 ff50 	bl	85df8 <__ssprint_r>
   83f58:	2800      	cmp	r0, #0
   83f5a:	f47e afb4 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   83f5e:	46c8      	mov	r8, r9
   83f60:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83f62:	e5b0      	b.n	83ac6 <_svfprintf_r+0xdba>
   83f64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83f66:	4637      	mov	r7, r6
   83f68:	2b06      	cmp	r3, #6
   83f6a:	bf28      	it	cs
   83f6c:	2306      	movcs	r3, #6
   83f6e:	960a      	str	r6, [sp, #40]	; 0x28
   83f70:	9612      	str	r6, [sp, #72]	; 0x48
   83f72:	9308      	str	r3, [sp, #32]
   83f74:	940f      	str	r4, [sp, #60]	; 0x3c
   83f76:	f8cd b01c 	str.w	fp, [sp, #28]
   83f7a:	930e      	str	r3, [sp, #56]	; 0x38
   83f7c:	4e27      	ldr	r6, [pc, #156]	; (8401c <_svfprintf_r+0x1310>)
   83f7e:	f7fe bfe9 	b.w	82f54 <_svfprintf_r+0x248>
   83f82:	2306      	movs	r3, #6
   83f84:	930a      	str	r3, [sp, #40]	; 0x28
   83f86:	e663      	b.n	83c50 <_svfprintf_r+0xf44>
   83f88:	232d      	movs	r3, #45	; 0x2d
   83f8a:	461f      	mov	r7, r3
   83f8c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   83f90:	f7ff ba28 	b.w	833e4 <_svfprintf_r+0x6d8>
   83f94:	2003      	movs	r0, #3
   83f96:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   83f98:	a923      	add	r1, sp, #140	; 0x8c
   83f9a:	e88d 0011 	stmia.w	sp, {r0, r4}
   83f9e:	9104      	str	r1, [sp, #16]
   83fa0:	a820      	add	r0, sp, #128	; 0x80
   83fa2:	a91f      	add	r1, sp, #124	; 0x7c
   83fa4:	9003      	str	r0, [sp, #12]
   83fa6:	9a08      	ldr	r2, [sp, #32]
   83fa8:	463b      	mov	r3, r7
   83faa:	9102      	str	r1, [sp, #8]
   83fac:	980c      	ldr	r0, [sp, #48]	; 0x30
   83fae:	f000 f9d3 	bl	84358 <_dtoa_r>
   83fb2:	4625      	mov	r5, r4
   83fb4:	4606      	mov	r6, r0
   83fb6:	1904      	adds	r4, r0, r4
   83fb8:	e719      	b.n	83dee <_svfprintf_r+0x10e2>
   83fba:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83fbc:	4d15      	ldr	r5, [pc, #84]	; (84014 <_svfprintf_r+0x1308>)
   83fbe:	f7ff bb7e 	b.w	836be <_svfprintf_r+0x9b2>
   83fc2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83fc4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83fc6:	4413      	add	r3, r2
   83fc8:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83fca:	930e      	str	r3, [sp, #56]	; 0x38
   83fcc:	2a00      	cmp	r2, #0
   83fce:	f340 80c7 	ble.w	84160 <_svfprintf_r+0x1454>
   83fd2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83fd6:	9308      	str	r3, [sp, #32]
   83fd8:	2367      	movs	r3, #103	; 0x67
   83fda:	9311      	str	r3, [sp, #68]	; 0x44
   83fdc:	e69e      	b.n	83d1c <_svfprintf_r+0x1010>
   83fde:	2b00      	cmp	r3, #0
   83fe0:	f340 80e1 	ble.w	841a6 <_svfprintf_r+0x149a>
   83fe4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83fe6:	2a00      	cmp	r2, #0
   83fe8:	f040 80b0 	bne.w	8414c <_svfprintf_r+0x1440>
   83fec:	f01b 0f01 	tst.w	fp, #1
   83ff0:	f040 80ac 	bne.w	8414c <_svfprintf_r+0x1440>
   83ff4:	9308      	str	r3, [sp, #32]
   83ff6:	930e      	str	r3, [sp, #56]	; 0x38
   83ff8:	e690      	b.n	83d1c <_svfprintf_r+0x1010>
   83ffa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83ffc:	940f      	str	r4, [sp, #60]	; 0x3c
   83ffe:	9308      	str	r3, [sp, #32]
   84000:	930e      	str	r3, [sp, #56]	; 0x38
   84002:	900a      	str	r0, [sp, #40]	; 0x28
   84004:	f8cd b01c 	str.w	fp, [sp, #28]
   84008:	9012      	str	r0, [sp, #72]	; 0x48
   8400a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8400e:	f7fe bfa1 	b.w	82f54 <_svfprintf_r+0x248>
   84012:	bf00      	nop
   84014:	000873dc 	.word	0x000873dc
   84018:	66666667 	.word	0x66666667
   8401c:	000873c0 	.word	0x000873c0
   84020:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84022:	2b47      	cmp	r3, #71	; 0x47
   84024:	f47f ae46 	bne.w	83cb4 <_svfprintf_r+0xfa8>
   84028:	f01b 0f01 	tst.w	fp, #1
   8402c:	f47f aeda 	bne.w	83de4 <_svfprintf_r+0x10d8>
   84030:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   84032:	1b9b      	subs	r3, r3, r6
   84034:	9313      	str	r3, [sp, #76]	; 0x4c
   84036:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84038:	2b47      	cmp	r3, #71	; 0x47
   8403a:	f43f aef7 	beq.w	83e2c <_svfprintf_r+0x1120>
   8403e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   84040:	9312      	str	r3, [sp, #72]	; 0x48
   84042:	e700      	b.n	83e46 <_svfprintf_r+0x113a>
   84044:	2000      	movs	r0, #0
   84046:	900a      	str	r0, [sp, #40]	; 0x28
   84048:	f7fe bebc 	b.w	82dc4 <_svfprintf_r+0xb8>
   8404c:	424f      	negs	r7, r1
   8404e:	3110      	adds	r1, #16
   84050:	da35      	bge.n	840be <_svfprintf_r+0x13b2>
   84052:	2410      	movs	r4, #16
   84054:	4d6a      	ldr	r5, [pc, #424]	; (84200 <_svfprintf_r+0x14f4>)
   84056:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   8405a:	e004      	b.n	84066 <_svfprintf_r+0x135a>
   8405c:	f108 0808 	add.w	r8, r8, #8
   84060:	3f10      	subs	r7, #16
   84062:	2f10      	cmp	r7, #16
   84064:	dd2c      	ble.n	840c0 <_svfprintf_r+0x13b4>
   84066:	3301      	adds	r3, #1
   84068:	3210      	adds	r2, #16
   8406a:	2b07      	cmp	r3, #7
   8406c:	9227      	str	r2, [sp, #156]	; 0x9c
   8406e:	9326      	str	r3, [sp, #152]	; 0x98
   84070:	f8c8 5000 	str.w	r5, [r8]
   84074:	f8c8 4004 	str.w	r4, [r8, #4]
   84078:	ddf0      	ble.n	8405c <_svfprintf_r+0x1350>
   8407a:	aa25      	add	r2, sp, #148	; 0x94
   8407c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8407e:	4658      	mov	r0, fp
   84080:	f001 feba 	bl	85df8 <__ssprint_r>
   84084:	2800      	cmp	r0, #0
   84086:	f47e af1e 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   8408a:	46c8      	mov	r8, r9
   8408c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8408e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84090:	e7e6      	b.n	84060 <_svfprintf_r+0x1354>
   84092:	aa25      	add	r2, sp, #148	; 0x94
   84094:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84096:	980c      	ldr	r0, [sp, #48]	; 0x30
   84098:	f001 feae 	bl	85df8 <__ssprint_r>
   8409c:	2800      	cmp	r0, #0
   8409e:	f47e af12 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   840a2:	46c8      	mov	r8, r9
   840a4:	991f      	ldr	r1, [sp, #124]	; 0x7c
   840a6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   840a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   840aa:	f7ff bbc3 	b.w	83834 <_svfprintf_r+0xb28>
   840ae:	2230      	movs	r2, #48	; 0x30
   840b0:	4413      	add	r3, r2
   840b2:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   840b6:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   840ba:	ab22      	add	r3, sp, #136	; 0x88
   840bc:	e706      	b.n	83ecc <_svfprintf_r+0x11c0>
   840be:	4d50      	ldr	r5, [pc, #320]	; (84200 <_svfprintf_r+0x14f4>)
   840c0:	3301      	adds	r3, #1
   840c2:	443a      	add	r2, r7
   840c4:	2b07      	cmp	r3, #7
   840c6:	e888 00a0 	stmia.w	r8, {r5, r7}
   840ca:	9227      	str	r2, [sp, #156]	; 0x9c
   840cc:	9326      	str	r3, [sp, #152]	; 0x98
   840ce:	f108 0808 	add.w	r8, r8, #8
   840d2:	f77f abb2 	ble.w	8383a <_svfprintf_r+0xb2e>
   840d6:	aa25      	add	r2, sp, #148	; 0x94
   840d8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   840da:	980c      	ldr	r0, [sp, #48]	; 0x30
   840dc:	f001 fe8c 	bl	85df8 <__ssprint_r>
   840e0:	2800      	cmp	r0, #0
   840e2:	f47e aef0 	bne.w	82ec6 <_svfprintf_r+0x1ba>
   840e6:	46c8      	mov	r8, r9
   840e8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   840ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
   840ec:	f7ff bba5 	b.w	8383a <_svfprintf_r+0xb2e>
   840f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   840f2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   840f4:	4413      	add	r3, r2
   840f6:	930e      	str	r3, [sp, #56]	; 0x38
   840f8:	e76b      	b.n	83fd2 <_svfprintf_r+0x12c6>
   840fa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   840fc:	e5ee      	b.n	83cdc <_svfprintf_r+0xfd0>
   840fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84100:	4d3f      	ldr	r5, [pc, #252]	; (84200 <_svfprintf_r+0x14f4>)
   84102:	e4bb      	b.n	83a7c <_svfprintf_r+0xd70>
   84104:	9a16      	ldr	r2, [sp, #88]	; 0x58
   84106:	9808      	ldr	r0, [sp, #32]
   84108:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   8410a:	4639      	mov	r1, r7
   8410c:	f002 ff16 	bl	86f3c <__aeabi_dcmpeq>
   84110:	2800      	cmp	r0, #0
   84112:	f47f ae70 	bne.w	83df6 <_svfprintf_r+0x10ea>
   84116:	f1c5 0501 	rsb	r5, r5, #1
   8411a:	951f      	str	r5, [sp, #124]	; 0x7c
   8411c:	442c      	add	r4, r5
   8411e:	e5ca      	b.n	83cb6 <_svfprintf_r+0xfaa>
   84120:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84122:	4e38      	ldr	r6, [pc, #224]	; (84204 <_svfprintf_r+0x14f8>)
   84124:	2b00      	cmp	r3, #0
   84126:	bfbe      	ittt	lt
   84128:	232d      	movlt	r3, #45	; 0x2d
   8412a:	461f      	movlt	r7, r3
   8412c:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   84130:	f04f 0303 	mov.w	r3, #3
   84134:	461a      	mov	r2, r3
   84136:	9308      	str	r3, [sp, #32]
   84138:	f04f 0300 	mov.w	r3, #0
   8413c:	bfa8      	it	ge
   8413e:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   84142:	4619      	mov	r1, r3
   84144:	930a      	str	r3, [sp, #40]	; 0x28
   84146:	4b30      	ldr	r3, [pc, #192]	; (84208 <_svfprintf_r+0x14fc>)
   84148:	f7ff b954 	b.w	833f4 <_svfprintf_r+0x6e8>
   8414c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8414e:	9a19      	ldr	r2, [sp, #100]	; 0x64
   84150:	4413      	add	r3, r2
   84152:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84154:	441a      	add	r2, r3
   84156:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   8415a:	920e      	str	r2, [sp, #56]	; 0x38
   8415c:	9308      	str	r3, [sp, #32]
   8415e:	e5dd      	b.n	83d1c <_svfprintf_r+0x1010>
   84160:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84162:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   84164:	f1c3 0301 	rsb	r3, r3, #1
   84168:	441a      	add	r2, r3
   8416a:	4613      	mov	r3, r2
   8416c:	e7c3      	b.n	840f6 <_svfprintf_r+0x13ea>
   8416e:	f01b 0301 	ands.w	r3, fp, #1
   84172:	9312      	str	r3, [sp, #72]	; 0x48
   84174:	f47f aeb3 	bne.w	83ede <_svfprintf_r+0x11d2>
   84178:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8417a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8417e:	9308      	str	r3, [sp, #32]
   84180:	e5cc      	b.n	83d1c <_svfprintf_r+0x1010>
   84182:	4d1f      	ldr	r5, [pc, #124]	; (84200 <_svfprintf_r+0x14f4>)
   84184:	e43c      	b.n	83a00 <_svfprintf_r+0xcf4>
   84186:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84188:	4d1d      	ldr	r5, [pc, #116]	; (84200 <_svfprintf_r+0x14f4>)
   8418a:	e491      	b.n	83ab0 <_svfprintf_r+0xda4>
   8418c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   8418e:	f89a 3001 	ldrb.w	r3, [sl, #1]
   84192:	6828      	ldr	r0, [r5, #0]
   84194:	46a2      	mov	sl, r4
   84196:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   8419a:	900a      	str	r0, [sp, #40]	; 0x28
   8419c:	4628      	mov	r0, r5
   8419e:	3004      	adds	r0, #4
   841a0:	900f      	str	r0, [sp, #60]	; 0x3c
   841a2:	f7fe be0d 	b.w	82dc0 <_svfprintf_r+0xb4>
   841a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   841a8:	b913      	cbnz	r3, 841b0 <_svfprintf_r+0x14a4>
   841aa:	f01b 0f01 	tst.w	fp, #1
   841ae:	d002      	beq.n	841b6 <_svfprintf_r+0x14aa>
   841b0:	9b19      	ldr	r3, [sp, #100]	; 0x64
   841b2:	3301      	adds	r3, #1
   841b4:	e7cd      	b.n	84152 <_svfprintf_r+0x1446>
   841b6:	2301      	movs	r3, #1
   841b8:	e71c      	b.n	83ff4 <_svfprintf_r+0x12e8>
   841ba:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   841be:	f7ff b980 	b.w	834c2 <_svfprintf_r+0x7b6>
   841c2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   841c6:	f7ff b93a 	b.w	8343e <_svfprintf_r+0x732>
   841ca:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   841ce:	f7ff b84f 	b.w	83270 <_svfprintf_r+0x564>
   841d2:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   841d6:	e679      	b.n	83ecc <_svfprintf_r+0x11c0>
   841d8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   841dc:	f7ff b9b2 	b.w	83544 <_svfprintf_r+0x838>
   841e0:	f04f 32ff 	mov.w	r2, #4294967295
   841e4:	230c      	movs	r3, #12
   841e6:	9209      	str	r2, [sp, #36]	; 0x24
   841e8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   841ea:	6013      	str	r3, [r2, #0]
   841ec:	f7fe be74 	b.w	82ed8 <_svfprintf_r+0x1cc>
   841f0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   841f4:	f7ff b8c4 	b.w	83380 <_svfprintf_r+0x674>
   841f8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   841fc:	f7ff b878 	b.w	832f0 <_svfprintf_r+0x5e4>
   84200:	000873dc 	.word	0x000873dc
   84204:	00087394 	.word	0x00087394
   84208:	00087390 	.word	0x00087390

0008420c <register_fini>:
   8420c:	4b02      	ldr	r3, [pc, #8]	; (84218 <register_fini+0xc>)
   8420e:	b113      	cbz	r3, 84216 <register_fini+0xa>
   84210:	4802      	ldr	r0, [pc, #8]	; (8421c <register_fini+0x10>)
   84212:	f000 b805 	b.w	84220 <atexit>
   84216:	4770      	bx	lr
   84218:	00000000 	.word	0x00000000
   8421c:	0008519d 	.word	0x0008519d

00084220 <atexit>:
   84220:	2300      	movs	r3, #0
   84222:	4601      	mov	r1, r0
   84224:	461a      	mov	r2, r3
   84226:	4618      	mov	r0, r3
   84228:	f001 be64 	b.w	85ef4 <__register_exitproc>

0008422c <quorem>:
   8422c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84230:	6903      	ldr	r3, [r0, #16]
   84232:	690f      	ldr	r7, [r1, #16]
   84234:	b083      	sub	sp, #12
   84236:	429f      	cmp	r7, r3
   84238:	f300 8088 	bgt.w	8434c <quorem+0x120>
   8423c:	3f01      	subs	r7, #1
   8423e:	f101 0614 	add.w	r6, r1, #20
   84242:	f100 0a14 	add.w	sl, r0, #20
   84246:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   8424a:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   8424e:	3301      	adds	r3, #1
   84250:	fbb2 f8f3 	udiv	r8, r2, r3
   84254:	00bb      	lsls	r3, r7, #2
   84256:	9300      	str	r3, [sp, #0]
   84258:	eb06 0903 	add.w	r9, r6, r3
   8425c:	4453      	add	r3, sl
   8425e:	9301      	str	r3, [sp, #4]
   84260:	f1b8 0f00 	cmp.w	r8, #0
   84264:	d03b      	beq.n	842de <quorem+0xb2>
   84266:	2300      	movs	r3, #0
   84268:	46b4      	mov	ip, r6
   8426a:	461c      	mov	r4, r3
   8426c:	46d6      	mov	lr, sl
   8426e:	f85c 2b04 	ldr.w	r2, [ip], #4
   84272:	f8de 5000 	ldr.w	r5, [lr]
   84276:	fa1f fb82 	uxth.w	fp, r2
   8427a:	fb08 330b 	mla	r3, r8, fp, r3
   8427e:	0c12      	lsrs	r2, r2, #16
   84280:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   84284:	fb08 bb02 	mla	fp, r8, r2, fp
   84288:	b29a      	uxth	r2, r3
   8428a:	1aa2      	subs	r2, r4, r2
   8428c:	b2ab      	uxth	r3, r5
   8428e:	fa1f f48b 	uxth.w	r4, fp
   84292:	441a      	add	r2, r3
   84294:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   84298:	eb04 4422 	add.w	r4, r4, r2, asr #16
   8429c:	b292      	uxth	r2, r2
   8429e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   842a2:	45e1      	cmp	r9, ip
   842a4:	f84e 2b04 	str.w	r2, [lr], #4
   842a8:	ea4f 4424 	mov.w	r4, r4, asr #16
   842ac:	ea4f 431b 	mov.w	r3, fp, lsr #16
   842b0:	d2dd      	bcs.n	8426e <quorem+0x42>
   842b2:	9b00      	ldr	r3, [sp, #0]
   842b4:	f85a 3003 	ldr.w	r3, [sl, r3]
   842b8:	b98b      	cbnz	r3, 842de <quorem+0xb2>
   842ba:	9c01      	ldr	r4, [sp, #4]
   842bc:	1f23      	subs	r3, r4, #4
   842be:	459a      	cmp	sl, r3
   842c0:	d20c      	bcs.n	842dc <quorem+0xb0>
   842c2:	f854 3c04 	ldr.w	r3, [r4, #-4]
   842c6:	b94b      	cbnz	r3, 842dc <quorem+0xb0>
   842c8:	f1a4 0308 	sub.w	r3, r4, #8
   842cc:	e002      	b.n	842d4 <quorem+0xa8>
   842ce:	681a      	ldr	r2, [r3, #0]
   842d0:	3b04      	subs	r3, #4
   842d2:	b91a      	cbnz	r2, 842dc <quorem+0xb0>
   842d4:	459a      	cmp	sl, r3
   842d6:	f107 37ff 	add.w	r7, r7, #4294967295
   842da:	d3f8      	bcc.n	842ce <quorem+0xa2>
   842dc:	6107      	str	r7, [r0, #16]
   842de:	4604      	mov	r4, r0
   842e0:	f001 fc7a 	bl	85bd8 <__mcmp>
   842e4:	2800      	cmp	r0, #0
   842e6:	db2d      	blt.n	84344 <quorem+0x118>
   842e8:	4655      	mov	r5, sl
   842ea:	2300      	movs	r3, #0
   842ec:	f108 0801 	add.w	r8, r8, #1
   842f0:	f856 1b04 	ldr.w	r1, [r6], #4
   842f4:	6828      	ldr	r0, [r5, #0]
   842f6:	b28a      	uxth	r2, r1
   842f8:	1a9a      	subs	r2, r3, r2
   842fa:	0c0b      	lsrs	r3, r1, #16
   842fc:	b281      	uxth	r1, r0
   842fe:	440a      	add	r2, r1
   84300:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   84304:	eb03 4322 	add.w	r3, r3, r2, asr #16
   84308:	b292      	uxth	r2, r2
   8430a:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   8430e:	45b1      	cmp	r9, r6
   84310:	f845 2b04 	str.w	r2, [r5], #4
   84314:	ea4f 4323 	mov.w	r3, r3, asr #16
   84318:	d2ea      	bcs.n	842f0 <quorem+0xc4>
   8431a:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   8431e:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   84322:	b97a      	cbnz	r2, 84344 <quorem+0x118>
   84324:	1f1a      	subs	r2, r3, #4
   84326:	4592      	cmp	sl, r2
   84328:	d20b      	bcs.n	84342 <quorem+0x116>
   8432a:	f853 2c04 	ldr.w	r2, [r3, #-4]
   8432e:	b942      	cbnz	r2, 84342 <quorem+0x116>
   84330:	3b08      	subs	r3, #8
   84332:	e002      	b.n	8433a <quorem+0x10e>
   84334:	681a      	ldr	r2, [r3, #0]
   84336:	3b04      	subs	r3, #4
   84338:	b91a      	cbnz	r2, 84342 <quorem+0x116>
   8433a:	459a      	cmp	sl, r3
   8433c:	f107 37ff 	add.w	r7, r7, #4294967295
   84340:	d3f8      	bcc.n	84334 <quorem+0x108>
   84342:	6127      	str	r7, [r4, #16]
   84344:	4640      	mov	r0, r8
   84346:	b003      	add	sp, #12
   84348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8434c:	2000      	movs	r0, #0
   8434e:	b003      	add	sp, #12
   84350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84354:	0000      	movs	r0, r0
	...

00084358 <_dtoa_r>:
   84358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8435c:	6c05      	ldr	r5, [r0, #64]	; 0x40
   8435e:	b09b      	sub	sp, #108	; 0x6c
   84360:	4604      	mov	r4, r0
   84362:	4692      	mov	sl, r2
   84364:	469b      	mov	fp, r3
   84366:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   84368:	b14d      	cbz	r5, 8437e <_dtoa_r+0x26>
   8436a:	2301      	movs	r3, #1
   8436c:	6c42      	ldr	r2, [r0, #68]	; 0x44
   8436e:	4629      	mov	r1, r5
   84370:	4093      	lsls	r3, r2
   84372:	60ab      	str	r3, [r5, #8]
   84374:	606a      	str	r2, [r5, #4]
   84376:	f001 fa57 	bl	85828 <_Bfree>
   8437a:	2300      	movs	r3, #0
   8437c:	6423      	str	r3, [r4, #64]	; 0x40
   8437e:	f1bb 0f00 	cmp.w	fp, #0
   84382:	465d      	mov	r5, fp
   84384:	db35      	blt.n	843f2 <_dtoa_r+0x9a>
   84386:	2300      	movs	r3, #0
   84388:	6033      	str	r3, [r6, #0]
   8438a:	4b9d      	ldr	r3, [pc, #628]	; (84600 <_dtoa_r+0x2a8>)
   8438c:	43ab      	bics	r3, r5
   8438e:	d015      	beq.n	843bc <_dtoa_r+0x64>
   84390:	2200      	movs	r2, #0
   84392:	2300      	movs	r3, #0
   84394:	4650      	mov	r0, sl
   84396:	4659      	mov	r1, fp
   84398:	f002 fdd0 	bl	86f3c <__aeabi_dcmpeq>
   8439c:	4680      	mov	r8, r0
   8439e:	2800      	cmp	r0, #0
   843a0:	d02d      	beq.n	843fe <_dtoa_r+0xa6>
   843a2:	2301      	movs	r3, #1
   843a4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   843a6:	6013      	str	r3, [r2, #0]
   843a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   843aa:	2b00      	cmp	r3, #0
   843ac:	f000 80bd 	beq.w	8452a <_dtoa_r+0x1d2>
   843b0:	4894      	ldr	r0, [pc, #592]	; (84604 <_dtoa_r+0x2ac>)
   843b2:	6018      	str	r0, [r3, #0]
   843b4:	3801      	subs	r0, #1
   843b6:	b01b      	add	sp, #108	; 0x6c
   843b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   843bc:	f242 730f 	movw	r3, #9999	; 0x270f
   843c0:	9a26      	ldr	r2, [sp, #152]	; 0x98
   843c2:	6013      	str	r3, [r2, #0]
   843c4:	f1ba 0f00 	cmp.w	sl, #0
   843c8:	d10d      	bne.n	843e6 <_dtoa_r+0x8e>
   843ca:	f3c5 0513 	ubfx	r5, r5, #0, #20
   843ce:	b955      	cbnz	r5, 843e6 <_dtoa_r+0x8e>
   843d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   843d2:	488d      	ldr	r0, [pc, #564]	; (84608 <_dtoa_r+0x2b0>)
   843d4:	2b00      	cmp	r3, #0
   843d6:	d0ee      	beq.n	843b6 <_dtoa_r+0x5e>
   843d8:	f100 0308 	add.w	r3, r0, #8
   843dc:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   843de:	6013      	str	r3, [r2, #0]
   843e0:	b01b      	add	sp, #108	; 0x6c
   843e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   843e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   843e8:	4888      	ldr	r0, [pc, #544]	; (8460c <_dtoa_r+0x2b4>)
   843ea:	2b00      	cmp	r3, #0
   843ec:	d0e3      	beq.n	843b6 <_dtoa_r+0x5e>
   843ee:	1cc3      	adds	r3, r0, #3
   843f0:	e7f4      	b.n	843dc <_dtoa_r+0x84>
   843f2:	2301      	movs	r3, #1
   843f4:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   843f8:	6033      	str	r3, [r6, #0]
   843fa:	46ab      	mov	fp, r5
   843fc:	e7c5      	b.n	8438a <_dtoa_r+0x32>
   843fe:	aa18      	add	r2, sp, #96	; 0x60
   84400:	ab19      	add	r3, sp, #100	; 0x64
   84402:	9201      	str	r2, [sp, #4]
   84404:	9300      	str	r3, [sp, #0]
   84406:	4652      	mov	r2, sl
   84408:	465b      	mov	r3, fp
   8440a:	4620      	mov	r0, r4
   8440c:	f001 fc8e 	bl	85d2c <__d2b>
   84410:	0d2b      	lsrs	r3, r5, #20
   84412:	4681      	mov	r9, r0
   84414:	d071      	beq.n	844fa <_dtoa_r+0x1a2>
   84416:	4650      	mov	r0, sl
   84418:	f3cb 0213 	ubfx	r2, fp, #0, #20
   8441c:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   84420:	9f18      	ldr	r7, [sp, #96]	; 0x60
   84422:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   84426:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   8442a:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   8442e:	2200      	movs	r2, #0
   84430:	4b77      	ldr	r3, [pc, #476]	; (84610 <_dtoa_r+0x2b8>)
   84432:	f002 f967 	bl	86704 <__aeabi_dsub>
   84436:	a36c      	add	r3, pc, #432	; (adr r3, 845e8 <_dtoa_r+0x290>)
   84438:	e9d3 2300 	ldrd	r2, r3, [r3]
   8443c:	f002 fb16 	bl	86a6c <__aeabi_dmul>
   84440:	a36b      	add	r3, pc, #428	; (adr r3, 845f0 <_dtoa_r+0x298>)
   84442:	e9d3 2300 	ldrd	r2, r3, [r3]
   84446:	f002 f95f 	bl	86708 <__adddf3>
   8444a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   8444e:	4630      	mov	r0, r6
   84450:	f002 faa6 	bl	869a0 <__aeabi_i2d>
   84454:	a368      	add	r3, pc, #416	; (adr r3, 845f8 <_dtoa_r+0x2a0>)
   84456:	e9d3 2300 	ldrd	r2, r3, [r3]
   8445a:	f002 fb07 	bl	86a6c <__aeabi_dmul>
   8445e:	4602      	mov	r2, r0
   84460:	460b      	mov	r3, r1
   84462:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   84466:	f002 f94f 	bl	86708 <__adddf3>
   8446a:	e9cd 0104 	strd	r0, r1, [sp, #16]
   8446e:	f002 fdad 	bl	86fcc <__aeabi_d2iz>
   84472:	2200      	movs	r2, #0
   84474:	9002      	str	r0, [sp, #8]
   84476:	2300      	movs	r3, #0
   84478:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   8447c:	f002 fd68 	bl	86f50 <__aeabi_dcmplt>
   84480:	2800      	cmp	r0, #0
   84482:	f040 816d 	bne.w	84760 <_dtoa_r+0x408>
   84486:	9d02      	ldr	r5, [sp, #8]
   84488:	2d16      	cmp	r5, #22
   8448a:	f200 8157 	bhi.w	8473c <_dtoa_r+0x3e4>
   8448e:	4961      	ldr	r1, [pc, #388]	; (84614 <_dtoa_r+0x2bc>)
   84490:	4652      	mov	r2, sl
   84492:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   84496:	465b      	mov	r3, fp
   84498:	e9d1 0100 	ldrd	r0, r1, [r1]
   8449c:	f002 fd76 	bl	86f8c <__aeabi_dcmpgt>
   844a0:	2800      	cmp	r0, #0
   844a2:	f000 81be 	beq.w	84822 <_dtoa_r+0x4ca>
   844a6:	1e6b      	subs	r3, r5, #1
   844a8:	9302      	str	r3, [sp, #8]
   844aa:	2300      	movs	r3, #0
   844ac:	930e      	str	r3, [sp, #56]	; 0x38
   844ae:	1bbf      	subs	r7, r7, r6
   844b0:	1e7b      	subs	r3, r7, #1
   844b2:	9308      	str	r3, [sp, #32]
   844b4:	f100 814e 	bmi.w	84754 <_dtoa_r+0x3fc>
   844b8:	2300      	movs	r3, #0
   844ba:	930a      	str	r3, [sp, #40]	; 0x28
   844bc:	9b02      	ldr	r3, [sp, #8]
   844be:	2b00      	cmp	r3, #0
   844c0:	f2c0 813f 	blt.w	84742 <_dtoa_r+0x3ea>
   844c4:	9a08      	ldr	r2, [sp, #32]
   844c6:	930d      	str	r3, [sp, #52]	; 0x34
   844c8:	4611      	mov	r1, r2
   844ca:	4419      	add	r1, r3
   844cc:	2300      	movs	r3, #0
   844ce:	9108      	str	r1, [sp, #32]
   844d0:	930c      	str	r3, [sp, #48]	; 0x30
   844d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
   844d4:	2b09      	cmp	r3, #9
   844d6:	d82a      	bhi.n	8452e <_dtoa_r+0x1d6>
   844d8:	2b05      	cmp	r3, #5
   844da:	f340 8658 	ble.w	8518e <_dtoa_r+0xe36>
   844de:	2500      	movs	r5, #0
   844e0:	3b04      	subs	r3, #4
   844e2:	9324      	str	r3, [sp, #144]	; 0x90
   844e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   844e6:	3b02      	subs	r3, #2
   844e8:	2b03      	cmp	r3, #3
   844ea:	f200 863f 	bhi.w	8516c <_dtoa_r+0xe14>
   844ee:	e8df f013 	tbh	[pc, r3, lsl #1]
   844f2:	03ce      	.short	0x03ce
   844f4:	03d902c3 	.word	0x03d902c3
   844f8:	045b      	.short	0x045b
   844fa:	9f18      	ldr	r7, [sp, #96]	; 0x60
   844fc:	9e19      	ldr	r6, [sp, #100]	; 0x64
   844fe:	443e      	add	r6, r7
   84500:	f206 4332 	addw	r3, r6, #1074	; 0x432
   84504:	2b20      	cmp	r3, #32
   84506:	f340 8187 	ble.w	84818 <_dtoa_r+0x4c0>
   8450a:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   8450e:	f206 4012 	addw	r0, r6, #1042	; 0x412
   84512:	409d      	lsls	r5, r3
   84514:	fa2a f000 	lsr.w	r0, sl, r0
   84518:	4328      	orrs	r0, r5
   8451a:	f002 fa31 	bl	86980 <__aeabi_ui2d>
   8451e:	2301      	movs	r3, #1
   84520:	3e01      	subs	r6, #1
   84522:	9314      	str	r3, [sp, #80]	; 0x50
   84524:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   84528:	e781      	b.n	8442e <_dtoa_r+0xd6>
   8452a:	483b      	ldr	r0, [pc, #236]	; (84618 <_dtoa_r+0x2c0>)
   8452c:	e743      	b.n	843b6 <_dtoa_r+0x5e>
   8452e:	2100      	movs	r1, #0
   84530:	4620      	mov	r0, r4
   84532:	6461      	str	r1, [r4, #68]	; 0x44
   84534:	9125      	str	r1, [sp, #148]	; 0x94
   84536:	f001 f951 	bl	857dc <_Balloc>
   8453a:	f04f 33ff 	mov.w	r3, #4294967295
   8453e:	9307      	str	r3, [sp, #28]
   84540:	930f      	str	r3, [sp, #60]	; 0x3c
   84542:	2301      	movs	r3, #1
   84544:	9a25      	ldr	r2, [sp, #148]	; 0x94
   84546:	9004      	str	r0, [sp, #16]
   84548:	6420      	str	r0, [r4, #64]	; 0x40
   8454a:	9224      	str	r2, [sp, #144]	; 0x90
   8454c:	930b      	str	r3, [sp, #44]	; 0x2c
   8454e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   84550:	2b00      	cmp	r3, #0
   84552:	f2c0 80d3 	blt.w	846fc <_dtoa_r+0x3a4>
   84556:	9a02      	ldr	r2, [sp, #8]
   84558:	2a0e      	cmp	r2, #14
   8455a:	f300 80cf 	bgt.w	846fc <_dtoa_r+0x3a4>
   8455e:	4b2d      	ldr	r3, [pc, #180]	; (84614 <_dtoa_r+0x2bc>)
   84560:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84564:	e9d3 2300 	ldrd	r2, r3, [r3]
   84568:	e9cd 2308 	strd	r2, r3, [sp, #32]
   8456c:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8456e:	2b00      	cmp	r3, #0
   84570:	f2c0 83b4 	blt.w	84cdc <_dtoa_r+0x984>
   84574:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   84578:	4650      	mov	r0, sl
   8457a:	462a      	mov	r2, r5
   8457c:	4633      	mov	r3, r6
   8457e:	4659      	mov	r1, fp
   84580:	f002 fb9e 	bl	86cc0 <__aeabi_ddiv>
   84584:	f002 fd22 	bl	86fcc <__aeabi_d2iz>
   84588:	4680      	mov	r8, r0
   8458a:	f002 fa09 	bl	869a0 <__aeabi_i2d>
   8458e:	462a      	mov	r2, r5
   84590:	4633      	mov	r3, r6
   84592:	f002 fa6b 	bl	86a6c <__aeabi_dmul>
   84596:	4602      	mov	r2, r0
   84598:	460b      	mov	r3, r1
   8459a:	4650      	mov	r0, sl
   8459c:	4659      	mov	r1, fp
   8459e:	f002 f8b1 	bl	86704 <__aeabi_dsub>
   845a2:	9e07      	ldr	r6, [sp, #28]
   845a4:	9f04      	ldr	r7, [sp, #16]
   845a6:	f108 0530 	add.w	r5, r8, #48	; 0x30
   845aa:	2e01      	cmp	r6, #1
   845ac:	703d      	strb	r5, [r7, #0]
   845ae:	4602      	mov	r2, r0
   845b0:	460b      	mov	r3, r1
   845b2:	f107 0501 	add.w	r5, r7, #1
   845b6:	d064      	beq.n	84682 <_dtoa_r+0x32a>
   845b8:	2200      	movs	r2, #0
   845ba:	4b18      	ldr	r3, [pc, #96]	; (8461c <_dtoa_r+0x2c4>)
   845bc:	f002 fa56 	bl	86a6c <__aeabi_dmul>
   845c0:	2200      	movs	r2, #0
   845c2:	2300      	movs	r3, #0
   845c4:	4606      	mov	r6, r0
   845c6:	460f      	mov	r7, r1
   845c8:	f002 fcb8 	bl	86f3c <__aeabi_dcmpeq>
   845cc:	2800      	cmp	r0, #0
   845ce:	f040 8082 	bne.w	846d6 <_dtoa_r+0x37e>
   845d2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   845d6:	f04f 0a00 	mov.w	sl, #0
   845da:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   845de:	f04f 0b00 	mov.w	fp, #0
   845e2:	940b      	str	r4, [sp, #44]	; 0x2c
   845e4:	e029      	b.n	8463a <_dtoa_r+0x2e2>
   845e6:	bf00      	nop
   845e8:	636f4361 	.word	0x636f4361
   845ec:	3fd287a7 	.word	0x3fd287a7
   845f0:	8b60c8b3 	.word	0x8b60c8b3
   845f4:	3fc68a28 	.word	0x3fc68a28
   845f8:	509f79fb 	.word	0x509f79fb
   845fc:	3fd34413 	.word	0x3fd34413
   84600:	7ff00000 	.word	0x7ff00000
   84604:	000873c9 	.word	0x000873c9
   84608:	000873ec 	.word	0x000873ec
   8460c:	000873f8 	.word	0x000873f8
   84610:	3ff80000 	.word	0x3ff80000
   84614:	00087428 	.word	0x00087428
   84618:	000873c8 	.word	0x000873c8
   8461c:	40240000 	.word	0x40240000
   84620:	2200      	movs	r2, #0
   84622:	4b81      	ldr	r3, [pc, #516]	; (84828 <_dtoa_r+0x4d0>)
   84624:	f002 fa22 	bl	86a6c <__aeabi_dmul>
   84628:	4652      	mov	r2, sl
   8462a:	465b      	mov	r3, fp
   8462c:	4606      	mov	r6, r0
   8462e:	460f      	mov	r7, r1
   84630:	f002 fc84 	bl	86f3c <__aeabi_dcmpeq>
   84634:	2800      	cmp	r0, #0
   84636:	f040 83ba 	bne.w	84dae <_dtoa_r+0xa56>
   8463a:	4642      	mov	r2, r8
   8463c:	464b      	mov	r3, r9
   8463e:	4630      	mov	r0, r6
   84640:	4639      	mov	r1, r7
   84642:	f002 fb3d 	bl	86cc0 <__aeabi_ddiv>
   84646:	f002 fcc1 	bl	86fcc <__aeabi_d2iz>
   8464a:	4604      	mov	r4, r0
   8464c:	f002 f9a8 	bl	869a0 <__aeabi_i2d>
   84650:	4642      	mov	r2, r8
   84652:	464b      	mov	r3, r9
   84654:	f002 fa0a 	bl	86a6c <__aeabi_dmul>
   84658:	4602      	mov	r2, r0
   8465a:	460b      	mov	r3, r1
   8465c:	4630      	mov	r0, r6
   8465e:	4639      	mov	r1, r7
   84660:	f002 f850 	bl	86704 <__aeabi_dsub>
   84664:	f104 0630 	add.w	r6, r4, #48	; 0x30
   84668:	f805 6b01 	strb.w	r6, [r5], #1
   8466c:	9e04      	ldr	r6, [sp, #16]
   8466e:	9f07      	ldr	r7, [sp, #28]
   84670:	1bae      	subs	r6, r5, r6
   84672:	42be      	cmp	r6, r7
   84674:	4602      	mov	r2, r0
   84676:	460b      	mov	r3, r1
   84678:	d1d2      	bne.n	84620 <_dtoa_r+0x2c8>
   8467a:	46a0      	mov	r8, r4
   8467c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   84680:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   84682:	4610      	mov	r0, r2
   84684:	4619      	mov	r1, r3
   84686:	f002 f83f 	bl	86708 <__adddf3>
   8468a:	4606      	mov	r6, r0
   8468c:	460f      	mov	r7, r1
   8468e:	4602      	mov	r2, r0
   84690:	460b      	mov	r3, r1
   84692:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   84696:	f002 fc5b 	bl	86f50 <__aeabi_dcmplt>
   8469a:	b948      	cbnz	r0, 846b0 <_dtoa_r+0x358>
   8469c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   846a0:	4632      	mov	r2, r6
   846a2:	463b      	mov	r3, r7
   846a4:	f002 fc4a 	bl	86f3c <__aeabi_dcmpeq>
   846a8:	b1a8      	cbz	r0, 846d6 <_dtoa_r+0x37e>
   846aa:	f018 0f01 	tst.w	r8, #1
   846ae:	d012      	beq.n	846d6 <_dtoa_r+0x37e>
   846b0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   846b4:	1e6b      	subs	r3, r5, #1
   846b6:	9a04      	ldr	r2, [sp, #16]
   846b8:	e004      	b.n	846c4 <_dtoa_r+0x36c>
   846ba:	429a      	cmp	r2, r3
   846bc:	f000 8402 	beq.w	84ec4 <_dtoa_r+0xb6c>
   846c0:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   846c4:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   846c8:	f103 0501 	add.w	r5, r3, #1
   846cc:	d0f5      	beq.n	846ba <_dtoa_r+0x362>
   846ce:	f108 0801 	add.w	r8, r8, #1
   846d2:	f883 8000 	strb.w	r8, [r3]
   846d6:	4649      	mov	r1, r9
   846d8:	4620      	mov	r0, r4
   846da:	f001 f8a5 	bl	85828 <_Bfree>
   846de:	2200      	movs	r2, #0
   846e0:	9b02      	ldr	r3, [sp, #8]
   846e2:	702a      	strb	r2, [r5, #0]
   846e4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   846e6:	3301      	adds	r3, #1
   846e8:	6013      	str	r3, [r2, #0]
   846ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   846ec:	2b00      	cmp	r3, #0
   846ee:	f000 839f 	beq.w	84e30 <_dtoa_r+0xad8>
   846f2:	9804      	ldr	r0, [sp, #16]
   846f4:	601d      	str	r5, [r3, #0]
   846f6:	b01b      	add	sp, #108	; 0x6c
   846f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   846fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   846fe:	2a00      	cmp	r2, #0
   84700:	d03e      	beq.n	84780 <_dtoa_r+0x428>
   84702:	9a24      	ldr	r2, [sp, #144]	; 0x90
   84704:	2a01      	cmp	r2, #1
   84706:	f340 8311 	ble.w	84d2c <_dtoa_r+0x9d4>
   8470a:	9b07      	ldr	r3, [sp, #28]
   8470c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8470e:	1e5f      	subs	r7, r3, #1
   84710:	42ba      	cmp	r2, r7
   84712:	f2c0 8390 	blt.w	84e36 <_dtoa_r+0xade>
   84716:	1bd7      	subs	r7, r2, r7
   84718:	9b07      	ldr	r3, [sp, #28]
   8471a:	2b00      	cmp	r3, #0
   8471c:	f2c0 848c 	blt.w	85038 <_dtoa_r+0xce0>
   84720:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   84722:	9b07      	ldr	r3, [sp, #28]
   84724:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84726:	2101      	movs	r1, #1
   84728:	441a      	add	r2, r3
   8472a:	920a      	str	r2, [sp, #40]	; 0x28
   8472c:	9a08      	ldr	r2, [sp, #32]
   8472e:	4620      	mov	r0, r4
   84730:	441a      	add	r2, r3
   84732:	9208      	str	r2, [sp, #32]
   84734:	f001 f914 	bl	85960 <__i2b>
   84738:	4606      	mov	r6, r0
   8473a:	e023      	b.n	84784 <_dtoa_r+0x42c>
   8473c:	2301      	movs	r3, #1
   8473e:	930e      	str	r3, [sp, #56]	; 0x38
   84740:	e6b5      	b.n	844ae <_dtoa_r+0x156>
   84742:	2300      	movs	r3, #0
   84744:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84746:	930d      	str	r3, [sp, #52]	; 0x34
   84748:	9b02      	ldr	r3, [sp, #8]
   8474a:	1ad2      	subs	r2, r2, r3
   8474c:	425b      	negs	r3, r3
   8474e:	920a      	str	r2, [sp, #40]	; 0x28
   84750:	930c      	str	r3, [sp, #48]	; 0x30
   84752:	e6be      	b.n	844d2 <_dtoa_r+0x17a>
   84754:	f1c7 0301 	rsb	r3, r7, #1
   84758:	930a      	str	r3, [sp, #40]	; 0x28
   8475a:	2300      	movs	r3, #0
   8475c:	9308      	str	r3, [sp, #32]
   8475e:	e6ad      	b.n	844bc <_dtoa_r+0x164>
   84760:	9d02      	ldr	r5, [sp, #8]
   84762:	4628      	mov	r0, r5
   84764:	f002 f91c 	bl	869a0 <__aeabi_i2d>
   84768:	4602      	mov	r2, r0
   8476a:	460b      	mov	r3, r1
   8476c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   84770:	f002 fbe4 	bl	86f3c <__aeabi_dcmpeq>
   84774:	2800      	cmp	r0, #0
   84776:	f47f ae86 	bne.w	84486 <_dtoa_r+0x12e>
   8477a:	1e6b      	subs	r3, r5, #1
   8477c:	9302      	str	r3, [sp, #8]
   8477e:	e682      	b.n	84486 <_dtoa_r+0x12e>
   84780:	ad0a      	add	r5, sp, #40	; 0x28
   84782:	cde0      	ldmia	r5, {r5, r6, r7}
   84784:	2d00      	cmp	r5, #0
   84786:	dd0c      	ble.n	847a2 <_dtoa_r+0x44a>
   84788:	9908      	ldr	r1, [sp, #32]
   8478a:	2900      	cmp	r1, #0
   8478c:	460b      	mov	r3, r1
   8478e:	dd08      	ble.n	847a2 <_dtoa_r+0x44a>
   84790:	42a9      	cmp	r1, r5
   84792:	bfa8      	it	ge
   84794:	462b      	movge	r3, r5
   84796:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84798:	1aed      	subs	r5, r5, r3
   8479a:	1ad2      	subs	r2, r2, r3
   8479c:	1acb      	subs	r3, r1, r3
   8479e:	920a      	str	r2, [sp, #40]	; 0x28
   847a0:	9308      	str	r3, [sp, #32]
   847a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   847a4:	b1d3      	cbz	r3, 847dc <_dtoa_r+0x484>
   847a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   847a8:	2b00      	cmp	r3, #0
   847aa:	f000 82b8 	beq.w	84d1e <_dtoa_r+0x9c6>
   847ae:	2f00      	cmp	r7, #0
   847b0:	dd10      	ble.n	847d4 <_dtoa_r+0x47c>
   847b2:	4631      	mov	r1, r6
   847b4:	463a      	mov	r2, r7
   847b6:	4620      	mov	r0, r4
   847b8:	f001 f96e 	bl	85a98 <__pow5mult>
   847bc:	464a      	mov	r2, r9
   847be:	4601      	mov	r1, r0
   847c0:	4606      	mov	r6, r0
   847c2:	4620      	mov	r0, r4
   847c4:	f001 f8d6 	bl	85974 <__multiply>
   847c8:	4603      	mov	r3, r0
   847ca:	4649      	mov	r1, r9
   847cc:	4620      	mov	r0, r4
   847ce:	4699      	mov	r9, r3
   847d0:	f001 f82a 	bl	85828 <_Bfree>
   847d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   847d6:	1bda      	subs	r2, r3, r7
   847d8:	f040 82a2 	bne.w	84d20 <_dtoa_r+0x9c8>
   847dc:	2101      	movs	r1, #1
   847de:	4620      	mov	r0, r4
   847e0:	f001 f8be 	bl	85960 <__i2b>
   847e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   847e6:	4680      	mov	r8, r0
   847e8:	2b00      	cmp	r3, #0
   847ea:	dd1f      	ble.n	8482c <_dtoa_r+0x4d4>
   847ec:	4601      	mov	r1, r0
   847ee:	461a      	mov	r2, r3
   847f0:	4620      	mov	r0, r4
   847f2:	f001 f951 	bl	85a98 <__pow5mult>
   847f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
   847f8:	4680      	mov	r8, r0
   847fa:	2b01      	cmp	r3, #1
   847fc:	f340 8255 	ble.w	84caa <_dtoa_r+0x952>
   84800:	2300      	movs	r3, #0
   84802:	930c      	str	r3, [sp, #48]	; 0x30
   84804:	f8d8 3010 	ldr.w	r3, [r8, #16]
   84808:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   8480c:	6918      	ldr	r0, [r3, #16]
   8480e:	f001 f857 	bl	858c0 <__hi0bits>
   84812:	f1c0 0020 	rsb	r0, r0, #32
   84816:	e013      	b.n	84840 <_dtoa_r+0x4e8>
   84818:	f1c3 0520 	rsb	r5, r3, #32
   8481c:	fa0a f005 	lsl.w	r0, sl, r5
   84820:	e67b      	b.n	8451a <_dtoa_r+0x1c2>
   84822:	900e      	str	r0, [sp, #56]	; 0x38
   84824:	e643      	b.n	844ae <_dtoa_r+0x156>
   84826:	bf00      	nop
   84828:	40240000 	.word	0x40240000
   8482c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8482e:	2b01      	cmp	r3, #1
   84830:	f340 8285 	ble.w	84d3e <_dtoa_r+0x9e6>
   84834:	2300      	movs	r3, #0
   84836:	930c      	str	r3, [sp, #48]	; 0x30
   84838:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8483a:	2001      	movs	r0, #1
   8483c:	2b00      	cmp	r3, #0
   8483e:	d1e1      	bne.n	84804 <_dtoa_r+0x4ac>
   84840:	9a08      	ldr	r2, [sp, #32]
   84842:	4410      	add	r0, r2
   84844:	f010 001f 	ands.w	r0, r0, #31
   84848:	f000 80a1 	beq.w	8498e <_dtoa_r+0x636>
   8484c:	f1c0 0320 	rsb	r3, r0, #32
   84850:	2b04      	cmp	r3, #4
   84852:	f340 8486 	ble.w	85162 <_dtoa_r+0xe0a>
   84856:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84858:	f1c0 001c 	rsb	r0, r0, #28
   8485c:	4403      	add	r3, r0
   8485e:	930a      	str	r3, [sp, #40]	; 0x28
   84860:	4613      	mov	r3, r2
   84862:	4403      	add	r3, r0
   84864:	4405      	add	r5, r0
   84866:	9308      	str	r3, [sp, #32]
   84868:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8486a:	2b00      	cmp	r3, #0
   8486c:	dd05      	ble.n	8487a <_dtoa_r+0x522>
   8486e:	4649      	mov	r1, r9
   84870:	461a      	mov	r2, r3
   84872:	4620      	mov	r0, r4
   84874:	f001 f960 	bl	85b38 <__lshift>
   84878:	4681      	mov	r9, r0
   8487a:	9b08      	ldr	r3, [sp, #32]
   8487c:	2b00      	cmp	r3, #0
   8487e:	dd05      	ble.n	8488c <_dtoa_r+0x534>
   84880:	4641      	mov	r1, r8
   84882:	461a      	mov	r2, r3
   84884:	4620      	mov	r0, r4
   84886:	f001 f957 	bl	85b38 <__lshift>
   8488a:	4680      	mov	r8, r0
   8488c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8488e:	2b00      	cmp	r3, #0
   84890:	f040 8086 	bne.w	849a0 <_dtoa_r+0x648>
   84894:	9b07      	ldr	r3, [sp, #28]
   84896:	2b00      	cmp	r3, #0
   84898:	f340 8264 	ble.w	84d64 <_dtoa_r+0xa0c>
   8489c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8489e:	2b00      	cmp	r3, #0
   848a0:	f000 8098 	beq.w	849d4 <_dtoa_r+0x67c>
   848a4:	2d00      	cmp	r5, #0
   848a6:	dd05      	ble.n	848b4 <_dtoa_r+0x55c>
   848a8:	4631      	mov	r1, r6
   848aa:	462a      	mov	r2, r5
   848ac:	4620      	mov	r0, r4
   848ae:	f001 f943 	bl	85b38 <__lshift>
   848b2:	4606      	mov	r6, r0
   848b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   848b6:	2b00      	cmp	r3, #0
   848b8:	f040 8336 	bne.w	84f28 <_dtoa_r+0xbd0>
   848bc:	9608      	str	r6, [sp, #32]
   848be:	9b07      	ldr	r3, [sp, #28]
   848c0:	9a04      	ldr	r2, [sp, #16]
   848c2:	3b01      	subs	r3, #1
   848c4:	18d3      	adds	r3, r2, r3
   848c6:	930b      	str	r3, [sp, #44]	; 0x2c
   848c8:	4617      	mov	r7, r2
   848ca:	f00a 0301 	and.w	r3, sl, #1
   848ce:	46c2      	mov	sl, r8
   848d0:	f8dd b020 	ldr.w	fp, [sp, #32]
   848d4:	930c      	str	r3, [sp, #48]	; 0x30
   848d6:	4651      	mov	r1, sl
   848d8:	4648      	mov	r0, r9
   848da:	f7ff fca7 	bl	8422c <quorem>
   848de:	4631      	mov	r1, r6
   848e0:	4605      	mov	r5, r0
   848e2:	4648      	mov	r0, r9
   848e4:	f001 f978 	bl	85bd8 <__mcmp>
   848e8:	465a      	mov	r2, fp
   848ea:	9007      	str	r0, [sp, #28]
   848ec:	4651      	mov	r1, sl
   848ee:	4620      	mov	r0, r4
   848f0:	f001 f98e 	bl	85c10 <__mdiff>
   848f4:	68c2      	ldr	r2, [r0, #12]
   848f6:	4680      	mov	r8, r0
   848f8:	f105 0330 	add.w	r3, r5, #48	; 0x30
   848fc:	2a00      	cmp	r2, #0
   848fe:	f040 8229 	bne.w	84d54 <_dtoa_r+0x9fc>
   84902:	4601      	mov	r1, r0
   84904:	4648      	mov	r0, r9
   84906:	930a      	str	r3, [sp, #40]	; 0x28
   84908:	f001 f966 	bl	85bd8 <__mcmp>
   8490c:	4641      	mov	r1, r8
   8490e:	9008      	str	r0, [sp, #32]
   84910:	4620      	mov	r0, r4
   84912:	f000 ff89 	bl	85828 <_Bfree>
   84916:	9a08      	ldr	r2, [sp, #32]
   84918:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8491a:	b932      	cbnz	r2, 8492a <_dtoa_r+0x5d2>
   8491c:	9924      	ldr	r1, [sp, #144]	; 0x90
   8491e:	b921      	cbnz	r1, 8492a <_dtoa_r+0x5d2>
   84920:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   84922:	2a00      	cmp	r2, #0
   84924:	f000 83ee 	beq.w	85104 <_dtoa_r+0xdac>
   84928:	9a24      	ldr	r2, [sp, #144]	; 0x90
   8492a:	9907      	ldr	r1, [sp, #28]
   8492c:	2900      	cmp	r1, #0
   8492e:	f2c0 829f 	blt.w	84e70 <_dtoa_r+0xb18>
   84932:	d105      	bne.n	84940 <_dtoa_r+0x5e8>
   84934:	9924      	ldr	r1, [sp, #144]	; 0x90
   84936:	b919      	cbnz	r1, 84940 <_dtoa_r+0x5e8>
   84938:	990c      	ldr	r1, [sp, #48]	; 0x30
   8493a:	2900      	cmp	r1, #0
   8493c:	f000 8298 	beq.w	84e70 <_dtoa_r+0xb18>
   84940:	2a00      	cmp	r2, #0
   84942:	f300 8305 	bgt.w	84f50 <_dtoa_r+0xbf8>
   84946:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   84948:	f107 0801 	add.w	r8, r7, #1
   8494c:	4297      	cmp	r7, r2
   8494e:	703b      	strb	r3, [r7, #0]
   84950:	4645      	mov	r5, r8
   84952:	f000 830b 	beq.w	84f6c <_dtoa_r+0xc14>
   84956:	4649      	mov	r1, r9
   84958:	2300      	movs	r3, #0
   8495a:	220a      	movs	r2, #10
   8495c:	4620      	mov	r0, r4
   8495e:	f000 ff6d 	bl	8583c <__multadd>
   84962:	455e      	cmp	r6, fp
   84964:	4681      	mov	r9, r0
   84966:	4631      	mov	r1, r6
   84968:	f04f 0300 	mov.w	r3, #0
   8496c:	f04f 020a 	mov.w	r2, #10
   84970:	4620      	mov	r0, r4
   84972:	f000 81e9 	beq.w	84d48 <_dtoa_r+0x9f0>
   84976:	f000 ff61 	bl	8583c <__multadd>
   8497a:	4659      	mov	r1, fp
   8497c:	4606      	mov	r6, r0
   8497e:	2300      	movs	r3, #0
   84980:	220a      	movs	r2, #10
   84982:	4620      	mov	r0, r4
   84984:	f000 ff5a 	bl	8583c <__multadd>
   84988:	4647      	mov	r7, r8
   8498a:	4683      	mov	fp, r0
   8498c:	e7a3      	b.n	848d6 <_dtoa_r+0x57e>
   8498e:	201c      	movs	r0, #28
   84990:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84992:	4405      	add	r5, r0
   84994:	4403      	add	r3, r0
   84996:	930a      	str	r3, [sp, #40]	; 0x28
   84998:	9b08      	ldr	r3, [sp, #32]
   8499a:	4403      	add	r3, r0
   8499c:	9308      	str	r3, [sp, #32]
   8499e:	e763      	b.n	84868 <_dtoa_r+0x510>
   849a0:	4641      	mov	r1, r8
   849a2:	4648      	mov	r0, r9
   849a4:	f001 f918 	bl	85bd8 <__mcmp>
   849a8:	2800      	cmp	r0, #0
   849aa:	f6bf af73 	bge.w	84894 <_dtoa_r+0x53c>
   849ae:	9f02      	ldr	r7, [sp, #8]
   849b0:	4649      	mov	r1, r9
   849b2:	2300      	movs	r3, #0
   849b4:	220a      	movs	r2, #10
   849b6:	4620      	mov	r0, r4
   849b8:	3f01      	subs	r7, #1
   849ba:	9702      	str	r7, [sp, #8]
   849bc:	f000 ff3e 	bl	8583c <__multadd>
   849c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   849c2:	4681      	mov	r9, r0
   849c4:	2b00      	cmp	r3, #0
   849c6:	f040 83b5 	bne.w	85134 <_dtoa_r+0xddc>
   849ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   849cc:	2b00      	cmp	r3, #0
   849ce:	f340 83be 	ble.w	8514e <_dtoa_r+0xdf6>
   849d2:	9307      	str	r3, [sp, #28]
   849d4:	f8dd a010 	ldr.w	sl, [sp, #16]
   849d8:	9f07      	ldr	r7, [sp, #28]
   849da:	4655      	mov	r5, sl
   849dc:	e006      	b.n	849ec <_dtoa_r+0x694>
   849de:	4649      	mov	r1, r9
   849e0:	2300      	movs	r3, #0
   849e2:	220a      	movs	r2, #10
   849e4:	4620      	mov	r0, r4
   849e6:	f000 ff29 	bl	8583c <__multadd>
   849ea:	4681      	mov	r9, r0
   849ec:	4641      	mov	r1, r8
   849ee:	4648      	mov	r0, r9
   849f0:	f7ff fc1c 	bl	8422c <quorem>
   849f4:	3030      	adds	r0, #48	; 0x30
   849f6:	f805 0b01 	strb.w	r0, [r5], #1
   849fa:	eba5 030a 	sub.w	r3, r5, sl
   849fe:	42bb      	cmp	r3, r7
   84a00:	dbed      	blt.n	849de <_dtoa_r+0x686>
   84a02:	9b04      	ldr	r3, [sp, #16]
   84a04:	9a07      	ldr	r2, [sp, #28]
   84a06:	4682      	mov	sl, r0
   84a08:	2a01      	cmp	r2, #1
   84a0a:	bfac      	ite	ge
   84a0c:	189b      	addge	r3, r3, r2
   84a0e:	3301      	addlt	r3, #1
   84a10:	f04f 0b00 	mov.w	fp, #0
   84a14:	461d      	mov	r5, r3
   84a16:	4649      	mov	r1, r9
   84a18:	2201      	movs	r2, #1
   84a1a:	4620      	mov	r0, r4
   84a1c:	f001 f88c 	bl	85b38 <__lshift>
   84a20:	4641      	mov	r1, r8
   84a22:	4681      	mov	r9, r0
   84a24:	f001 f8d8 	bl	85bd8 <__mcmp>
   84a28:	2800      	cmp	r0, #0
   84a2a:	f340 823f 	ble.w	84eac <_dtoa_r+0xb54>
   84a2e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   84a32:	1e6b      	subs	r3, r5, #1
   84a34:	9904      	ldr	r1, [sp, #16]
   84a36:	e004      	b.n	84a42 <_dtoa_r+0x6ea>
   84a38:	428b      	cmp	r3, r1
   84a3a:	f000 81ae 	beq.w	84d9a <_dtoa_r+0xa42>
   84a3e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   84a42:	2a39      	cmp	r2, #57	; 0x39
   84a44:	f103 0501 	add.w	r5, r3, #1
   84a48:	d0f6      	beq.n	84a38 <_dtoa_r+0x6e0>
   84a4a:	3201      	adds	r2, #1
   84a4c:	701a      	strb	r2, [r3, #0]
   84a4e:	4641      	mov	r1, r8
   84a50:	4620      	mov	r0, r4
   84a52:	f000 fee9 	bl	85828 <_Bfree>
   84a56:	2e00      	cmp	r6, #0
   84a58:	f43f ae3d 	beq.w	846d6 <_dtoa_r+0x37e>
   84a5c:	f1bb 0f00 	cmp.w	fp, #0
   84a60:	d005      	beq.n	84a6e <_dtoa_r+0x716>
   84a62:	45b3      	cmp	fp, r6
   84a64:	d003      	beq.n	84a6e <_dtoa_r+0x716>
   84a66:	4659      	mov	r1, fp
   84a68:	4620      	mov	r0, r4
   84a6a:	f000 fedd 	bl	85828 <_Bfree>
   84a6e:	4631      	mov	r1, r6
   84a70:	4620      	mov	r0, r4
   84a72:	f000 fed9 	bl	85828 <_Bfree>
   84a76:	e62e      	b.n	846d6 <_dtoa_r+0x37e>
   84a78:	2300      	movs	r3, #0
   84a7a:	930b      	str	r3, [sp, #44]	; 0x2c
   84a7c:	9b02      	ldr	r3, [sp, #8]
   84a7e:	9a25      	ldr	r2, [sp, #148]	; 0x94
   84a80:	4413      	add	r3, r2
   84a82:	930f      	str	r3, [sp, #60]	; 0x3c
   84a84:	3301      	adds	r3, #1
   84a86:	2b01      	cmp	r3, #1
   84a88:	461f      	mov	r7, r3
   84a8a:	461e      	mov	r6, r3
   84a8c:	bfb8      	it	lt
   84a8e:	2701      	movlt	r7, #1
   84a90:	9307      	str	r3, [sp, #28]
   84a92:	2100      	movs	r1, #0
   84a94:	2f17      	cmp	r7, #23
   84a96:	6461      	str	r1, [r4, #68]	; 0x44
   84a98:	d90a      	bls.n	84ab0 <_dtoa_r+0x758>
   84a9a:	2201      	movs	r2, #1
   84a9c:	2304      	movs	r3, #4
   84a9e:	005b      	lsls	r3, r3, #1
   84aa0:	f103 0014 	add.w	r0, r3, #20
   84aa4:	4287      	cmp	r7, r0
   84aa6:	4611      	mov	r1, r2
   84aa8:	f102 0201 	add.w	r2, r2, #1
   84aac:	d2f7      	bcs.n	84a9e <_dtoa_r+0x746>
   84aae:	6461      	str	r1, [r4, #68]	; 0x44
   84ab0:	4620      	mov	r0, r4
   84ab2:	f000 fe93 	bl	857dc <_Balloc>
   84ab6:	2e0e      	cmp	r6, #14
   84ab8:	9004      	str	r0, [sp, #16]
   84aba:	6420      	str	r0, [r4, #64]	; 0x40
   84abc:	f63f ad47 	bhi.w	8454e <_dtoa_r+0x1f6>
   84ac0:	2d00      	cmp	r5, #0
   84ac2:	f43f ad44 	beq.w	8454e <_dtoa_r+0x1f6>
   84ac6:	9902      	ldr	r1, [sp, #8]
   84ac8:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   84acc:	2900      	cmp	r1, #0
   84ace:	f340 8203 	ble.w	84ed8 <_dtoa_r+0xb80>
   84ad2:	4bb9      	ldr	r3, [pc, #740]	; (84db8 <_dtoa_r+0xa60>)
   84ad4:	f001 020f 	and.w	r2, r1, #15
   84ad8:	110d      	asrs	r5, r1, #4
   84ada:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84ade:	06e9      	lsls	r1, r5, #27
   84ae0:	e9d3 6700 	ldrd	r6, r7, [r3]
   84ae4:	f140 81af 	bpl.w	84e46 <_dtoa_r+0xaee>
   84ae8:	4bb4      	ldr	r3, [pc, #720]	; (84dbc <_dtoa_r+0xa64>)
   84aea:	4650      	mov	r0, sl
   84aec:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   84af0:	4659      	mov	r1, fp
   84af2:	f002 f8e5 	bl	86cc0 <__aeabi_ddiv>
   84af6:	f04f 0a03 	mov.w	sl, #3
   84afa:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   84afe:	f005 050f 	and.w	r5, r5, #15
   84b02:	b18d      	cbz	r5, 84b28 <_dtoa_r+0x7d0>
   84b04:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 84dbc <_dtoa_r+0xa64>
   84b08:	07ea      	lsls	r2, r5, #31
   84b0a:	d509      	bpl.n	84b20 <_dtoa_r+0x7c8>
   84b0c:	e9d8 2300 	ldrd	r2, r3, [r8]
   84b10:	4630      	mov	r0, r6
   84b12:	4639      	mov	r1, r7
   84b14:	f001 ffaa 	bl	86a6c <__aeabi_dmul>
   84b18:	4606      	mov	r6, r0
   84b1a:	460f      	mov	r7, r1
   84b1c:	f10a 0a01 	add.w	sl, sl, #1
   84b20:	106d      	asrs	r5, r5, #1
   84b22:	f108 0808 	add.w	r8, r8, #8
   84b26:	d1ef      	bne.n	84b08 <_dtoa_r+0x7b0>
   84b28:	463b      	mov	r3, r7
   84b2a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   84b2e:	4632      	mov	r2, r6
   84b30:	f002 f8c6 	bl	86cc0 <__aeabi_ddiv>
   84b34:	4607      	mov	r7, r0
   84b36:	4688      	mov	r8, r1
   84b38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84b3a:	b143      	cbz	r3, 84b4e <_dtoa_r+0x7f6>
   84b3c:	2200      	movs	r2, #0
   84b3e:	4ba0      	ldr	r3, [pc, #640]	; (84dc0 <_dtoa_r+0xa68>)
   84b40:	4638      	mov	r0, r7
   84b42:	4641      	mov	r1, r8
   84b44:	f002 fa04 	bl	86f50 <__aeabi_dcmplt>
   84b48:	2800      	cmp	r0, #0
   84b4a:	f040 8287 	bne.w	8505c <_dtoa_r+0xd04>
   84b4e:	4650      	mov	r0, sl
   84b50:	f001 ff26 	bl	869a0 <__aeabi_i2d>
   84b54:	463a      	mov	r2, r7
   84b56:	4643      	mov	r3, r8
   84b58:	f001 ff88 	bl	86a6c <__aeabi_dmul>
   84b5c:	4b99      	ldr	r3, [pc, #612]	; (84dc4 <_dtoa_r+0xa6c>)
   84b5e:	2200      	movs	r2, #0
   84b60:	f001 fdd2 	bl	86708 <__adddf3>
   84b64:	9b07      	ldr	r3, [sp, #28]
   84b66:	4605      	mov	r5, r0
   84b68:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   84b6c:	2b00      	cmp	r3, #0
   84b6e:	f000 813f 	beq.w	84df0 <_dtoa_r+0xa98>
   84b72:	9b02      	ldr	r3, [sp, #8]
   84b74:	9315      	str	r3, [sp, #84]	; 0x54
   84b76:	9b07      	ldr	r3, [sp, #28]
   84b78:	9312      	str	r3, [sp, #72]	; 0x48
   84b7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84b7c:	2b00      	cmp	r3, #0
   84b7e:	f000 81fb 	beq.w	84f78 <_dtoa_r+0xc20>
   84b82:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84b84:	4b8c      	ldr	r3, [pc, #560]	; (84db8 <_dtoa_r+0xa60>)
   84b86:	2000      	movs	r0, #0
   84b88:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84b8c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   84b90:	498d      	ldr	r1, [pc, #564]	; (84dc8 <_dtoa_r+0xa70>)
   84b92:	f002 f895 	bl	86cc0 <__aeabi_ddiv>
   84b96:	462a      	mov	r2, r5
   84b98:	4633      	mov	r3, r6
   84b9a:	f001 fdb3 	bl	86704 <__aeabi_dsub>
   84b9e:	4682      	mov	sl, r0
   84ba0:	468b      	mov	fp, r1
   84ba2:	4638      	mov	r0, r7
   84ba4:	4641      	mov	r1, r8
   84ba6:	f002 fa11 	bl	86fcc <__aeabi_d2iz>
   84baa:	4605      	mov	r5, r0
   84bac:	f001 fef8 	bl	869a0 <__aeabi_i2d>
   84bb0:	4602      	mov	r2, r0
   84bb2:	460b      	mov	r3, r1
   84bb4:	4638      	mov	r0, r7
   84bb6:	4641      	mov	r1, r8
   84bb8:	f001 fda4 	bl	86704 <__aeabi_dsub>
   84bbc:	3530      	adds	r5, #48	; 0x30
   84bbe:	fa5f f885 	uxtb.w	r8, r5
   84bc2:	9d04      	ldr	r5, [sp, #16]
   84bc4:	4606      	mov	r6, r0
   84bc6:	460f      	mov	r7, r1
   84bc8:	f885 8000 	strb.w	r8, [r5]
   84bcc:	4602      	mov	r2, r0
   84bce:	460b      	mov	r3, r1
   84bd0:	4650      	mov	r0, sl
   84bd2:	4659      	mov	r1, fp
   84bd4:	3501      	adds	r5, #1
   84bd6:	f002 f9d9 	bl	86f8c <__aeabi_dcmpgt>
   84bda:	2800      	cmp	r0, #0
   84bdc:	d154      	bne.n	84c88 <_dtoa_r+0x930>
   84bde:	4632      	mov	r2, r6
   84be0:	463b      	mov	r3, r7
   84be2:	2000      	movs	r0, #0
   84be4:	4976      	ldr	r1, [pc, #472]	; (84dc0 <_dtoa_r+0xa68>)
   84be6:	f001 fd8d 	bl	86704 <__aeabi_dsub>
   84bea:	4602      	mov	r2, r0
   84bec:	460b      	mov	r3, r1
   84bee:	4650      	mov	r0, sl
   84bf0:	4659      	mov	r1, fp
   84bf2:	f002 f9cb 	bl	86f8c <__aeabi_dcmpgt>
   84bf6:	2800      	cmp	r0, #0
   84bf8:	f040 8270 	bne.w	850dc <_dtoa_r+0xd84>
   84bfc:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84bfe:	2a01      	cmp	r2, #1
   84c00:	f000 8112 	beq.w	84e28 <_dtoa_r+0xad0>
   84c04:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84c06:	9a04      	ldr	r2, [sp, #16]
   84c08:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   84c0c:	4413      	add	r3, r2
   84c0e:	4699      	mov	r9, r3
   84c10:	e00f      	b.n	84c32 <_dtoa_r+0x8da>
   84c12:	4632      	mov	r2, r6
   84c14:	463b      	mov	r3, r7
   84c16:	2000      	movs	r0, #0
   84c18:	4969      	ldr	r1, [pc, #420]	; (84dc0 <_dtoa_r+0xa68>)
   84c1a:	f001 fd73 	bl	86704 <__aeabi_dsub>
   84c1e:	4652      	mov	r2, sl
   84c20:	465b      	mov	r3, fp
   84c22:	f002 f995 	bl	86f50 <__aeabi_dcmplt>
   84c26:	2800      	cmp	r0, #0
   84c28:	f040 8256 	bne.w	850d8 <_dtoa_r+0xd80>
   84c2c:	454d      	cmp	r5, r9
   84c2e:	f000 80f9 	beq.w	84e24 <_dtoa_r+0xacc>
   84c32:	4650      	mov	r0, sl
   84c34:	4659      	mov	r1, fp
   84c36:	2200      	movs	r2, #0
   84c38:	4b64      	ldr	r3, [pc, #400]	; (84dcc <_dtoa_r+0xa74>)
   84c3a:	f001 ff17 	bl	86a6c <__aeabi_dmul>
   84c3e:	2200      	movs	r2, #0
   84c40:	4b62      	ldr	r3, [pc, #392]	; (84dcc <_dtoa_r+0xa74>)
   84c42:	4682      	mov	sl, r0
   84c44:	468b      	mov	fp, r1
   84c46:	4630      	mov	r0, r6
   84c48:	4639      	mov	r1, r7
   84c4a:	f001 ff0f 	bl	86a6c <__aeabi_dmul>
   84c4e:	460f      	mov	r7, r1
   84c50:	4606      	mov	r6, r0
   84c52:	f002 f9bb 	bl	86fcc <__aeabi_d2iz>
   84c56:	4680      	mov	r8, r0
   84c58:	f001 fea2 	bl	869a0 <__aeabi_i2d>
   84c5c:	4602      	mov	r2, r0
   84c5e:	460b      	mov	r3, r1
   84c60:	4630      	mov	r0, r6
   84c62:	4639      	mov	r1, r7
   84c64:	f001 fd4e 	bl	86704 <__aeabi_dsub>
   84c68:	f108 0830 	add.w	r8, r8, #48	; 0x30
   84c6c:	fa5f f888 	uxtb.w	r8, r8
   84c70:	f805 8b01 	strb.w	r8, [r5], #1
   84c74:	4652      	mov	r2, sl
   84c76:	465b      	mov	r3, fp
   84c78:	4606      	mov	r6, r0
   84c7a:	460f      	mov	r7, r1
   84c7c:	f002 f968 	bl	86f50 <__aeabi_dcmplt>
   84c80:	2800      	cmp	r0, #0
   84c82:	d0c6      	beq.n	84c12 <_dtoa_r+0x8ba>
   84c84:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84c88:	9b15      	ldr	r3, [sp, #84]	; 0x54
   84c8a:	9302      	str	r3, [sp, #8]
   84c8c:	e523      	b.n	846d6 <_dtoa_r+0x37e>
   84c8e:	2300      	movs	r3, #0
   84c90:	930b      	str	r3, [sp, #44]	; 0x2c
   84c92:	9b25      	ldr	r3, [sp, #148]	; 0x94
   84c94:	2b00      	cmp	r3, #0
   84c96:	f340 80dd 	ble.w	84e54 <_dtoa_r+0xafc>
   84c9a:	461f      	mov	r7, r3
   84c9c:	461e      	mov	r6, r3
   84c9e:	930f      	str	r3, [sp, #60]	; 0x3c
   84ca0:	9307      	str	r3, [sp, #28]
   84ca2:	e6f6      	b.n	84a92 <_dtoa_r+0x73a>
   84ca4:	2301      	movs	r3, #1
   84ca6:	930b      	str	r3, [sp, #44]	; 0x2c
   84ca8:	e7f3      	b.n	84c92 <_dtoa_r+0x93a>
   84caa:	f1ba 0f00 	cmp.w	sl, #0
   84cae:	f47f ada7 	bne.w	84800 <_dtoa_r+0x4a8>
   84cb2:	f3cb 0313 	ubfx	r3, fp, #0, #20
   84cb6:	2b00      	cmp	r3, #0
   84cb8:	f47f adbc 	bne.w	84834 <_dtoa_r+0x4dc>
   84cbc:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   84cc0:	0d3f      	lsrs	r7, r7, #20
   84cc2:	053f      	lsls	r7, r7, #20
   84cc4:	2f00      	cmp	r7, #0
   84cc6:	f000 820d 	beq.w	850e4 <_dtoa_r+0xd8c>
   84cca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84ccc:	3301      	adds	r3, #1
   84cce:	930a      	str	r3, [sp, #40]	; 0x28
   84cd0:	9b08      	ldr	r3, [sp, #32]
   84cd2:	3301      	adds	r3, #1
   84cd4:	9308      	str	r3, [sp, #32]
   84cd6:	2301      	movs	r3, #1
   84cd8:	930c      	str	r3, [sp, #48]	; 0x30
   84cda:	e5ad      	b.n	84838 <_dtoa_r+0x4e0>
   84cdc:	9b07      	ldr	r3, [sp, #28]
   84cde:	2b00      	cmp	r3, #0
   84ce0:	f73f ac48 	bgt.w	84574 <_dtoa_r+0x21c>
   84ce4:	f040 8222 	bne.w	8512c <_dtoa_r+0xdd4>
   84ce8:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   84cec:	2200      	movs	r2, #0
   84cee:	4b38      	ldr	r3, [pc, #224]	; (84dd0 <_dtoa_r+0xa78>)
   84cf0:	f001 febc 	bl	86a6c <__aeabi_dmul>
   84cf4:	4652      	mov	r2, sl
   84cf6:	465b      	mov	r3, fp
   84cf8:	f002 f93e 	bl	86f78 <__aeabi_dcmpge>
   84cfc:	f8dd 801c 	ldr.w	r8, [sp, #28]
   84d00:	4646      	mov	r6, r8
   84d02:	2800      	cmp	r0, #0
   84d04:	d041      	beq.n	84d8a <_dtoa_r+0xa32>
   84d06:	9b25      	ldr	r3, [sp, #148]	; 0x94
   84d08:	9d04      	ldr	r5, [sp, #16]
   84d0a:	43db      	mvns	r3, r3
   84d0c:	9302      	str	r3, [sp, #8]
   84d0e:	4641      	mov	r1, r8
   84d10:	4620      	mov	r0, r4
   84d12:	f000 fd89 	bl	85828 <_Bfree>
   84d16:	2e00      	cmp	r6, #0
   84d18:	f43f acdd 	beq.w	846d6 <_dtoa_r+0x37e>
   84d1c:	e6a7      	b.n	84a6e <_dtoa_r+0x716>
   84d1e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   84d20:	4649      	mov	r1, r9
   84d22:	4620      	mov	r0, r4
   84d24:	f000 feb8 	bl	85a98 <__pow5mult>
   84d28:	4681      	mov	r9, r0
   84d2a:	e557      	b.n	847dc <_dtoa_r+0x484>
   84d2c:	9a14      	ldr	r2, [sp, #80]	; 0x50
   84d2e:	2a00      	cmp	r2, #0
   84d30:	f000 8188 	beq.w	85044 <_dtoa_r+0xcec>
   84d34:	f203 4333 	addw	r3, r3, #1075	; 0x433
   84d38:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84d3a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   84d3c:	e4f2      	b.n	84724 <_dtoa_r+0x3cc>
   84d3e:	f1ba 0f00 	cmp.w	sl, #0
   84d42:	f47f ad77 	bne.w	84834 <_dtoa_r+0x4dc>
   84d46:	e7b4      	b.n	84cb2 <_dtoa_r+0x95a>
   84d48:	f000 fd78 	bl	8583c <__multadd>
   84d4c:	4647      	mov	r7, r8
   84d4e:	4606      	mov	r6, r0
   84d50:	4683      	mov	fp, r0
   84d52:	e5c0      	b.n	848d6 <_dtoa_r+0x57e>
   84d54:	4601      	mov	r1, r0
   84d56:	4620      	mov	r0, r4
   84d58:	9308      	str	r3, [sp, #32]
   84d5a:	f000 fd65 	bl	85828 <_Bfree>
   84d5e:	2201      	movs	r2, #1
   84d60:	9b08      	ldr	r3, [sp, #32]
   84d62:	e5e2      	b.n	8492a <_dtoa_r+0x5d2>
   84d64:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84d66:	2b02      	cmp	r3, #2
   84d68:	f77f ad98 	ble.w	8489c <_dtoa_r+0x544>
   84d6c:	9b07      	ldr	r3, [sp, #28]
   84d6e:	2b00      	cmp	r3, #0
   84d70:	d1c9      	bne.n	84d06 <_dtoa_r+0x9ae>
   84d72:	4641      	mov	r1, r8
   84d74:	2205      	movs	r2, #5
   84d76:	4620      	mov	r0, r4
   84d78:	f000 fd60 	bl	8583c <__multadd>
   84d7c:	4601      	mov	r1, r0
   84d7e:	4680      	mov	r8, r0
   84d80:	4648      	mov	r0, r9
   84d82:	f000 ff29 	bl	85bd8 <__mcmp>
   84d86:	2800      	cmp	r0, #0
   84d88:	ddbd      	ble.n	84d06 <_dtoa_r+0x9ae>
   84d8a:	2331      	movs	r3, #49	; 0x31
   84d8c:	9a02      	ldr	r2, [sp, #8]
   84d8e:	9904      	ldr	r1, [sp, #16]
   84d90:	3201      	adds	r2, #1
   84d92:	9202      	str	r2, [sp, #8]
   84d94:	700b      	strb	r3, [r1, #0]
   84d96:	1c4d      	adds	r5, r1, #1
   84d98:	e7b9      	b.n	84d0e <_dtoa_r+0x9b6>
   84d9a:	2331      	movs	r3, #49	; 0x31
   84d9c:	9a02      	ldr	r2, [sp, #8]
   84d9e:	3201      	adds	r2, #1
   84da0:	9202      	str	r2, [sp, #8]
   84da2:	9a04      	ldr	r2, [sp, #16]
   84da4:	7013      	strb	r3, [r2, #0]
   84da6:	e652      	b.n	84a4e <_dtoa_r+0x6f6>
   84da8:	2301      	movs	r3, #1
   84daa:	930b      	str	r3, [sp, #44]	; 0x2c
   84dac:	e666      	b.n	84a7c <_dtoa_r+0x724>
   84dae:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   84db2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   84db4:	e48f      	b.n	846d6 <_dtoa_r+0x37e>
   84db6:	bf00      	nop
   84db8:	00087428 	.word	0x00087428
   84dbc:	00087400 	.word	0x00087400
   84dc0:	3ff00000 	.word	0x3ff00000
   84dc4:	401c0000 	.word	0x401c0000
   84dc8:	3fe00000 	.word	0x3fe00000
   84dcc:	40240000 	.word	0x40240000
   84dd0:	40140000 	.word	0x40140000
   84dd4:	4650      	mov	r0, sl
   84dd6:	f001 fde3 	bl	869a0 <__aeabi_i2d>
   84dda:	463a      	mov	r2, r7
   84ddc:	4643      	mov	r3, r8
   84dde:	f001 fe45 	bl	86a6c <__aeabi_dmul>
   84de2:	2200      	movs	r2, #0
   84de4:	4bc1      	ldr	r3, [pc, #772]	; (850ec <_dtoa_r+0xd94>)
   84de6:	f001 fc8f 	bl	86708 <__adddf3>
   84dea:	4605      	mov	r5, r0
   84dec:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   84df0:	4641      	mov	r1, r8
   84df2:	2200      	movs	r2, #0
   84df4:	4bbe      	ldr	r3, [pc, #760]	; (850f0 <_dtoa_r+0xd98>)
   84df6:	4638      	mov	r0, r7
   84df8:	f001 fc84 	bl	86704 <__aeabi_dsub>
   84dfc:	462a      	mov	r2, r5
   84dfe:	4633      	mov	r3, r6
   84e00:	4682      	mov	sl, r0
   84e02:	468b      	mov	fp, r1
   84e04:	f002 f8c2 	bl	86f8c <__aeabi_dcmpgt>
   84e08:	4680      	mov	r8, r0
   84e0a:	2800      	cmp	r0, #0
   84e0c:	f040 8110 	bne.w	85030 <_dtoa_r+0xcd8>
   84e10:	462a      	mov	r2, r5
   84e12:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   84e16:	4650      	mov	r0, sl
   84e18:	4659      	mov	r1, fp
   84e1a:	f002 f899 	bl	86f50 <__aeabi_dcmplt>
   84e1e:	b118      	cbz	r0, 84e28 <_dtoa_r+0xad0>
   84e20:	4646      	mov	r6, r8
   84e22:	e770      	b.n	84d06 <_dtoa_r+0x9ae>
   84e24:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84e28:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   84e2c:	f7ff bb8f 	b.w	8454e <_dtoa_r+0x1f6>
   84e30:	9804      	ldr	r0, [sp, #16]
   84e32:	f7ff bac0 	b.w	843b6 <_dtoa_r+0x5e>
   84e36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   84e38:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   84e3a:	1afb      	subs	r3, r7, r3
   84e3c:	441a      	add	r2, r3
   84e3e:	970c      	str	r7, [sp, #48]	; 0x30
   84e40:	920d      	str	r2, [sp, #52]	; 0x34
   84e42:	2700      	movs	r7, #0
   84e44:	e468      	b.n	84718 <_dtoa_r+0x3c0>
   84e46:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   84e4a:	f04f 0a02 	mov.w	sl, #2
   84e4e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   84e52:	e656      	b.n	84b02 <_dtoa_r+0x7aa>
   84e54:	2100      	movs	r1, #0
   84e56:	2301      	movs	r3, #1
   84e58:	4620      	mov	r0, r4
   84e5a:	6461      	str	r1, [r4, #68]	; 0x44
   84e5c:	9325      	str	r3, [sp, #148]	; 0x94
   84e5e:	f000 fcbd 	bl	857dc <_Balloc>
   84e62:	9b25      	ldr	r3, [sp, #148]	; 0x94
   84e64:	9004      	str	r0, [sp, #16]
   84e66:	9307      	str	r3, [sp, #28]
   84e68:	9b25      	ldr	r3, [sp, #148]	; 0x94
   84e6a:	6420      	str	r0, [r4, #64]	; 0x40
   84e6c:	930f      	str	r3, [sp, #60]	; 0x3c
   84e6e:	e627      	b.n	84ac0 <_dtoa_r+0x768>
   84e70:	2a00      	cmp	r2, #0
   84e72:	46d0      	mov	r8, sl
   84e74:	f8cd b020 	str.w	fp, [sp, #32]
   84e78:	469a      	mov	sl, r3
   84e7a:	dd11      	ble.n	84ea0 <_dtoa_r+0xb48>
   84e7c:	4649      	mov	r1, r9
   84e7e:	2201      	movs	r2, #1
   84e80:	4620      	mov	r0, r4
   84e82:	f000 fe59 	bl	85b38 <__lshift>
   84e86:	4641      	mov	r1, r8
   84e88:	4681      	mov	r9, r0
   84e8a:	f000 fea5 	bl	85bd8 <__mcmp>
   84e8e:	2800      	cmp	r0, #0
   84e90:	f340 8145 	ble.w	8511e <_dtoa_r+0xdc6>
   84e94:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   84e98:	f000 8105 	beq.w	850a6 <_dtoa_r+0xd4e>
   84e9c:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   84ea0:	46b3      	mov	fp, r6
   84ea2:	f887 a000 	strb.w	sl, [r7]
   84ea6:	1c7d      	adds	r5, r7, #1
   84ea8:	9e08      	ldr	r6, [sp, #32]
   84eaa:	e5d0      	b.n	84a4e <_dtoa_r+0x6f6>
   84eac:	d104      	bne.n	84eb8 <_dtoa_r+0xb60>
   84eae:	f01a 0f01 	tst.w	sl, #1
   84eb2:	d001      	beq.n	84eb8 <_dtoa_r+0xb60>
   84eb4:	e5bb      	b.n	84a2e <_dtoa_r+0x6d6>
   84eb6:	4615      	mov	r5, r2
   84eb8:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   84ebc:	1e6a      	subs	r2, r5, #1
   84ebe:	2b30      	cmp	r3, #48	; 0x30
   84ec0:	d0f9      	beq.n	84eb6 <_dtoa_r+0xb5e>
   84ec2:	e5c4      	b.n	84a4e <_dtoa_r+0x6f6>
   84ec4:	2230      	movs	r2, #48	; 0x30
   84ec6:	9904      	ldr	r1, [sp, #16]
   84ec8:	700a      	strb	r2, [r1, #0]
   84eca:	9a02      	ldr	r2, [sp, #8]
   84ecc:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   84ed0:	3201      	adds	r2, #1
   84ed2:	9202      	str	r2, [sp, #8]
   84ed4:	f7ff bbfb 	b.w	846ce <_dtoa_r+0x376>
   84ed8:	f000 80bb 	beq.w	85052 <_dtoa_r+0xcfa>
   84edc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84ee0:	9b02      	ldr	r3, [sp, #8]
   84ee2:	f04f 0a02 	mov.w	sl, #2
   84ee6:	425d      	negs	r5, r3
   84ee8:	4b82      	ldr	r3, [pc, #520]	; (850f4 <_dtoa_r+0xd9c>)
   84eea:	f005 020f 	and.w	r2, r5, #15
   84eee:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84ef2:	e9d3 2300 	ldrd	r2, r3, [r3]
   84ef6:	f001 fdb9 	bl	86a6c <__aeabi_dmul>
   84efa:	112d      	asrs	r5, r5, #4
   84efc:	4607      	mov	r7, r0
   84efe:	4688      	mov	r8, r1
   84f00:	f43f ae1a 	beq.w	84b38 <_dtoa_r+0x7e0>
   84f04:	4e7c      	ldr	r6, [pc, #496]	; (850f8 <_dtoa_r+0xda0>)
   84f06:	07eb      	lsls	r3, r5, #31
   84f08:	d509      	bpl.n	84f1e <_dtoa_r+0xbc6>
   84f0a:	e9d6 2300 	ldrd	r2, r3, [r6]
   84f0e:	4638      	mov	r0, r7
   84f10:	4641      	mov	r1, r8
   84f12:	f001 fdab 	bl	86a6c <__aeabi_dmul>
   84f16:	4607      	mov	r7, r0
   84f18:	4688      	mov	r8, r1
   84f1a:	f10a 0a01 	add.w	sl, sl, #1
   84f1e:	106d      	asrs	r5, r5, #1
   84f20:	f106 0608 	add.w	r6, r6, #8
   84f24:	d1ef      	bne.n	84f06 <_dtoa_r+0xbae>
   84f26:	e607      	b.n	84b38 <_dtoa_r+0x7e0>
   84f28:	6871      	ldr	r1, [r6, #4]
   84f2a:	4620      	mov	r0, r4
   84f2c:	f000 fc56 	bl	857dc <_Balloc>
   84f30:	4605      	mov	r5, r0
   84f32:	6933      	ldr	r3, [r6, #16]
   84f34:	f106 010c 	add.w	r1, r6, #12
   84f38:	3302      	adds	r3, #2
   84f3a:	009a      	lsls	r2, r3, #2
   84f3c:	300c      	adds	r0, #12
   84f3e:	f7fd fdcd 	bl	82adc <memcpy>
   84f42:	4629      	mov	r1, r5
   84f44:	2201      	movs	r2, #1
   84f46:	4620      	mov	r0, r4
   84f48:	f000 fdf6 	bl	85b38 <__lshift>
   84f4c:	9008      	str	r0, [sp, #32]
   84f4e:	e4b6      	b.n	848be <_dtoa_r+0x566>
   84f50:	2b39      	cmp	r3, #57	; 0x39
   84f52:	f8cd b020 	str.w	fp, [sp, #32]
   84f56:	46d0      	mov	r8, sl
   84f58:	f000 80a5 	beq.w	850a6 <_dtoa_r+0xd4e>
   84f5c:	f103 0a01 	add.w	sl, r3, #1
   84f60:	46b3      	mov	fp, r6
   84f62:	f887 a000 	strb.w	sl, [r7]
   84f66:	1c7d      	adds	r5, r7, #1
   84f68:	9e08      	ldr	r6, [sp, #32]
   84f6a:	e570      	b.n	84a4e <_dtoa_r+0x6f6>
   84f6c:	465a      	mov	r2, fp
   84f6e:	46d0      	mov	r8, sl
   84f70:	46b3      	mov	fp, r6
   84f72:	469a      	mov	sl, r3
   84f74:	4616      	mov	r6, r2
   84f76:	e54e      	b.n	84a16 <_dtoa_r+0x6be>
   84f78:	9812      	ldr	r0, [sp, #72]	; 0x48
   84f7a:	495e      	ldr	r1, [pc, #376]	; (850f4 <_dtoa_r+0xd9c>)
   84f7c:	462a      	mov	r2, r5
   84f7e:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   84f82:	4633      	mov	r3, r6
   84f84:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   84f88:	f001 fd70 	bl	86a6c <__aeabi_dmul>
   84f8c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   84f90:	4638      	mov	r0, r7
   84f92:	4641      	mov	r1, r8
   84f94:	f002 f81a 	bl	86fcc <__aeabi_d2iz>
   84f98:	4605      	mov	r5, r0
   84f9a:	f001 fd01 	bl	869a0 <__aeabi_i2d>
   84f9e:	4602      	mov	r2, r0
   84fa0:	460b      	mov	r3, r1
   84fa2:	4638      	mov	r0, r7
   84fa4:	4641      	mov	r1, r8
   84fa6:	f001 fbad 	bl	86704 <__aeabi_dsub>
   84faa:	4606      	mov	r6, r0
   84fac:	9812      	ldr	r0, [sp, #72]	; 0x48
   84fae:	9a04      	ldr	r2, [sp, #16]
   84fb0:	3530      	adds	r5, #48	; 0x30
   84fb2:	2801      	cmp	r0, #1
   84fb4:	7015      	strb	r5, [r2, #0]
   84fb6:	460f      	mov	r7, r1
   84fb8:	f102 0501 	add.w	r5, r2, #1
   84fbc:	d026      	beq.n	8500c <_dtoa_r+0xcb4>
   84fbe:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84fc0:	9a04      	ldr	r2, [sp, #16]
   84fc2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   84fc6:	4413      	add	r3, r2
   84fc8:	f04f 0a00 	mov.w	sl, #0
   84fcc:	4699      	mov	r9, r3
   84fce:	f8df b130 	ldr.w	fp, [pc, #304]	; 85100 <_dtoa_r+0xda8>
   84fd2:	4652      	mov	r2, sl
   84fd4:	465b      	mov	r3, fp
   84fd6:	4630      	mov	r0, r6
   84fd8:	4639      	mov	r1, r7
   84fda:	f001 fd47 	bl	86a6c <__aeabi_dmul>
   84fde:	460f      	mov	r7, r1
   84fe0:	4606      	mov	r6, r0
   84fe2:	f001 fff3 	bl	86fcc <__aeabi_d2iz>
   84fe6:	4680      	mov	r8, r0
   84fe8:	f001 fcda 	bl	869a0 <__aeabi_i2d>
   84fec:	4602      	mov	r2, r0
   84fee:	460b      	mov	r3, r1
   84ff0:	4630      	mov	r0, r6
   84ff2:	4639      	mov	r1, r7
   84ff4:	f001 fb86 	bl	86704 <__aeabi_dsub>
   84ff8:	f108 0830 	add.w	r8, r8, #48	; 0x30
   84ffc:	f805 8b01 	strb.w	r8, [r5], #1
   85000:	454d      	cmp	r5, r9
   85002:	4606      	mov	r6, r0
   85004:	460f      	mov	r7, r1
   85006:	d1e4      	bne.n	84fd2 <_dtoa_r+0xc7a>
   85008:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   8500c:	2200      	movs	r2, #0
   8500e:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   85012:	4b3a      	ldr	r3, [pc, #232]	; (850fc <_dtoa_r+0xda4>)
   85014:	f001 fb78 	bl	86708 <__adddf3>
   85018:	4632      	mov	r2, r6
   8501a:	463b      	mov	r3, r7
   8501c:	f001 ff98 	bl	86f50 <__aeabi_dcmplt>
   85020:	2800      	cmp	r0, #0
   85022:	d046      	beq.n	850b2 <_dtoa_r+0xd5a>
   85024:	9b15      	ldr	r3, [sp, #84]	; 0x54
   85026:	9302      	str	r3, [sp, #8]
   85028:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   8502c:	f7ff bb42 	b.w	846b4 <_dtoa_r+0x35c>
   85030:	f04f 0800 	mov.w	r8, #0
   85034:	4646      	mov	r6, r8
   85036:	e6a8      	b.n	84d8a <_dtoa_r+0xa32>
   85038:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8503a:	9a07      	ldr	r2, [sp, #28]
   8503c:	1a9d      	subs	r5, r3, r2
   8503e:	2300      	movs	r3, #0
   85040:	f7ff bb70 	b.w	84724 <_dtoa_r+0x3cc>
   85044:	9b18      	ldr	r3, [sp, #96]	; 0x60
   85046:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   85048:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   8504c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   8504e:	f7ff bb69 	b.w	84724 <_dtoa_r+0x3cc>
   85052:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   85056:	f04f 0a02 	mov.w	sl, #2
   8505a:	e56d      	b.n	84b38 <_dtoa_r+0x7e0>
   8505c:	9b07      	ldr	r3, [sp, #28]
   8505e:	2b00      	cmp	r3, #0
   85060:	f43f aeb8 	beq.w	84dd4 <_dtoa_r+0xa7c>
   85064:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85066:	2b00      	cmp	r3, #0
   85068:	f77f aede 	ble.w	84e28 <_dtoa_r+0xad0>
   8506c:	2200      	movs	r2, #0
   8506e:	4b24      	ldr	r3, [pc, #144]	; (85100 <_dtoa_r+0xda8>)
   85070:	4638      	mov	r0, r7
   85072:	4641      	mov	r1, r8
   85074:	f001 fcfa 	bl	86a6c <__aeabi_dmul>
   85078:	4607      	mov	r7, r0
   8507a:	4688      	mov	r8, r1
   8507c:	f10a 0001 	add.w	r0, sl, #1
   85080:	f001 fc8e 	bl	869a0 <__aeabi_i2d>
   85084:	463a      	mov	r2, r7
   85086:	4643      	mov	r3, r8
   85088:	f001 fcf0 	bl	86a6c <__aeabi_dmul>
   8508c:	2200      	movs	r2, #0
   8508e:	4b17      	ldr	r3, [pc, #92]	; (850ec <_dtoa_r+0xd94>)
   85090:	f001 fb3a 	bl	86708 <__adddf3>
   85094:	9a02      	ldr	r2, [sp, #8]
   85096:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85098:	3a01      	subs	r2, #1
   8509a:	4605      	mov	r5, r0
   8509c:	9215      	str	r2, [sp, #84]	; 0x54
   8509e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   850a2:	9312      	str	r3, [sp, #72]	; 0x48
   850a4:	e569      	b.n	84b7a <_dtoa_r+0x822>
   850a6:	2239      	movs	r2, #57	; 0x39
   850a8:	46b3      	mov	fp, r6
   850aa:	703a      	strb	r2, [r7, #0]
   850ac:	9e08      	ldr	r6, [sp, #32]
   850ae:	1c7d      	adds	r5, r7, #1
   850b0:	e4bf      	b.n	84a32 <_dtoa_r+0x6da>
   850b2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   850b6:	2000      	movs	r0, #0
   850b8:	4910      	ldr	r1, [pc, #64]	; (850fc <_dtoa_r+0xda4>)
   850ba:	f001 fb23 	bl	86704 <__aeabi_dsub>
   850be:	4632      	mov	r2, r6
   850c0:	463b      	mov	r3, r7
   850c2:	f001 ff63 	bl	86f8c <__aeabi_dcmpgt>
   850c6:	b908      	cbnz	r0, 850cc <_dtoa_r+0xd74>
   850c8:	e6ae      	b.n	84e28 <_dtoa_r+0xad0>
   850ca:	4615      	mov	r5, r2
   850cc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   850d0:	1e6a      	subs	r2, r5, #1
   850d2:	2b30      	cmp	r3, #48	; 0x30
   850d4:	d0f9      	beq.n	850ca <_dtoa_r+0xd72>
   850d6:	e5d7      	b.n	84c88 <_dtoa_r+0x930>
   850d8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   850dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
   850de:	9302      	str	r3, [sp, #8]
   850e0:	f7ff bae8 	b.w	846b4 <_dtoa_r+0x35c>
   850e4:	970c      	str	r7, [sp, #48]	; 0x30
   850e6:	f7ff bba7 	b.w	84838 <_dtoa_r+0x4e0>
   850ea:	bf00      	nop
   850ec:	401c0000 	.word	0x401c0000
   850f0:	40140000 	.word	0x40140000
   850f4:	00087428 	.word	0x00087428
   850f8:	00087400 	.word	0x00087400
   850fc:	3fe00000 	.word	0x3fe00000
   85100:	40240000 	.word	0x40240000
   85104:	2b39      	cmp	r3, #57	; 0x39
   85106:	f8cd b020 	str.w	fp, [sp, #32]
   8510a:	46d0      	mov	r8, sl
   8510c:	f8dd b01c 	ldr.w	fp, [sp, #28]
   85110:	469a      	mov	sl, r3
   85112:	d0c8      	beq.n	850a6 <_dtoa_r+0xd4e>
   85114:	f1bb 0f00 	cmp.w	fp, #0
   85118:	f73f aec0 	bgt.w	84e9c <_dtoa_r+0xb44>
   8511c:	e6c0      	b.n	84ea0 <_dtoa_r+0xb48>
   8511e:	f47f aebf 	bne.w	84ea0 <_dtoa_r+0xb48>
   85122:	f01a 0f01 	tst.w	sl, #1
   85126:	f43f aebb 	beq.w	84ea0 <_dtoa_r+0xb48>
   8512a:	e6b3      	b.n	84e94 <_dtoa_r+0xb3c>
   8512c:	f04f 0800 	mov.w	r8, #0
   85130:	4646      	mov	r6, r8
   85132:	e5e8      	b.n	84d06 <_dtoa_r+0x9ae>
   85134:	4631      	mov	r1, r6
   85136:	2300      	movs	r3, #0
   85138:	220a      	movs	r2, #10
   8513a:	4620      	mov	r0, r4
   8513c:	f000 fb7e 	bl	8583c <__multadd>
   85140:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85142:	4606      	mov	r6, r0
   85144:	2b00      	cmp	r3, #0
   85146:	dd07      	ble.n	85158 <_dtoa_r+0xe00>
   85148:	9307      	str	r3, [sp, #28]
   8514a:	f7ff bbab 	b.w	848a4 <_dtoa_r+0x54c>
   8514e:	9b24      	ldr	r3, [sp, #144]	; 0x90
   85150:	2b02      	cmp	r3, #2
   85152:	dc1f      	bgt.n	85194 <_dtoa_r+0xe3c>
   85154:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85156:	e43c      	b.n	849d2 <_dtoa_r+0x67a>
   85158:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8515a:	2b02      	cmp	r3, #2
   8515c:	dc1a      	bgt.n	85194 <_dtoa_r+0xe3c>
   8515e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85160:	e7f2      	b.n	85148 <_dtoa_r+0xdf0>
   85162:	f43f ab81 	beq.w	84868 <_dtoa_r+0x510>
   85166:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   8516a:	e411      	b.n	84990 <_dtoa_r+0x638>
   8516c:	2500      	movs	r5, #0
   8516e:	4620      	mov	r0, r4
   85170:	6465      	str	r5, [r4, #68]	; 0x44
   85172:	4629      	mov	r1, r5
   85174:	f000 fb32 	bl	857dc <_Balloc>
   85178:	f04f 33ff 	mov.w	r3, #4294967295
   8517c:	9307      	str	r3, [sp, #28]
   8517e:	930f      	str	r3, [sp, #60]	; 0x3c
   85180:	2301      	movs	r3, #1
   85182:	9004      	str	r0, [sp, #16]
   85184:	9525      	str	r5, [sp, #148]	; 0x94
   85186:	6420      	str	r0, [r4, #64]	; 0x40
   85188:	930b      	str	r3, [sp, #44]	; 0x2c
   8518a:	f7ff b9e0 	b.w	8454e <_dtoa_r+0x1f6>
   8518e:	2501      	movs	r5, #1
   85190:	f7ff b9a8 	b.w	844e4 <_dtoa_r+0x18c>
   85194:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85196:	9307      	str	r3, [sp, #28]
   85198:	e5e8      	b.n	84d6c <_dtoa_r+0xa14>
   8519a:	bf00      	nop

0008519c <__libc_fini_array>:
   8519c:	b538      	push	{r3, r4, r5, lr}
   8519e:	4c0a      	ldr	r4, [pc, #40]	; (851c8 <__libc_fini_array+0x2c>)
   851a0:	4d0a      	ldr	r5, [pc, #40]	; (851cc <__libc_fini_array+0x30>)
   851a2:	1b64      	subs	r4, r4, r5
   851a4:	10a4      	asrs	r4, r4, #2
   851a6:	d00a      	beq.n	851be <__libc_fini_array+0x22>
   851a8:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   851ac:	3b01      	subs	r3, #1
   851ae:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   851b2:	3c01      	subs	r4, #1
   851b4:	f855 3904 	ldr.w	r3, [r5], #-4
   851b8:	4798      	blx	r3
   851ba:	2c00      	cmp	r4, #0
   851bc:	d1f9      	bne.n	851b2 <__libc_fini_array+0x16>
   851be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   851c2:	f002 ba2f 	b.w	87624 <_fini>
   851c6:	bf00      	nop
   851c8:	00087634 	.word	0x00087634
   851cc:	00087630 	.word	0x00087630

000851d0 <_localeconv_r>:
   851d0:	4a04      	ldr	r2, [pc, #16]	; (851e4 <_localeconv_r+0x14>)
   851d2:	4b05      	ldr	r3, [pc, #20]	; (851e8 <_localeconv_r+0x18>)
   851d4:	6812      	ldr	r2, [r2, #0]
   851d6:	6b50      	ldr	r0, [r2, #52]	; 0x34
   851d8:	2800      	cmp	r0, #0
   851da:	bf08      	it	eq
   851dc:	4618      	moveq	r0, r3
   851de:	30f0      	adds	r0, #240	; 0xf0
   851e0:	4770      	bx	lr
   851e2:	bf00      	nop
   851e4:	200701e0 	.word	0x200701e0
   851e8:	20070a24 	.word	0x20070a24

000851ec <__retarget_lock_acquire_recursive>:
   851ec:	4770      	bx	lr
   851ee:	bf00      	nop

000851f0 <__retarget_lock_release_recursive>:
   851f0:	4770      	bx	lr
   851f2:	bf00      	nop

000851f4 <_malloc_r>:
   851f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   851f8:	f101 060b 	add.w	r6, r1, #11
   851fc:	2e16      	cmp	r6, #22
   851fe:	b083      	sub	sp, #12
   85200:	4605      	mov	r5, r0
   85202:	f240 809e 	bls.w	85342 <_malloc_r+0x14e>
   85206:	f036 0607 	bics.w	r6, r6, #7
   8520a:	f100 80bd 	bmi.w	85388 <_malloc_r+0x194>
   8520e:	42b1      	cmp	r1, r6
   85210:	f200 80ba 	bhi.w	85388 <_malloc_r+0x194>
   85214:	f000 fad6 	bl	857c4 <__malloc_lock>
   85218:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   8521c:	f0c0 8285 	bcc.w	8572a <_malloc_r+0x536>
   85220:	0a73      	lsrs	r3, r6, #9
   85222:	f000 80b8 	beq.w	85396 <_malloc_r+0x1a2>
   85226:	2b04      	cmp	r3, #4
   85228:	f200 816c 	bhi.w	85504 <_malloc_r+0x310>
   8522c:	09b3      	lsrs	r3, r6, #6
   8522e:	f103 0039 	add.w	r0, r3, #57	; 0x39
   85232:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   85236:	00c1      	lsls	r1, r0, #3
   85238:	4fb8      	ldr	r7, [pc, #736]	; (8551c <_malloc_r+0x328>)
   8523a:	4439      	add	r1, r7
   8523c:	684c      	ldr	r4, [r1, #4]
   8523e:	3908      	subs	r1, #8
   85240:	42a1      	cmp	r1, r4
   85242:	d106      	bne.n	85252 <_malloc_r+0x5e>
   85244:	e00c      	b.n	85260 <_malloc_r+0x6c>
   85246:	2a00      	cmp	r2, #0
   85248:	f280 80ab 	bge.w	853a2 <_malloc_r+0x1ae>
   8524c:	68e4      	ldr	r4, [r4, #12]
   8524e:	42a1      	cmp	r1, r4
   85250:	d006      	beq.n	85260 <_malloc_r+0x6c>
   85252:	6863      	ldr	r3, [r4, #4]
   85254:	f023 0303 	bic.w	r3, r3, #3
   85258:	1b9a      	subs	r2, r3, r6
   8525a:	2a0f      	cmp	r2, #15
   8525c:	ddf3      	ble.n	85246 <_malloc_r+0x52>
   8525e:	4670      	mov	r0, lr
   85260:	693c      	ldr	r4, [r7, #16]
   85262:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 85530 <_malloc_r+0x33c>
   85266:	4574      	cmp	r4, lr
   85268:	f000 819e 	beq.w	855a8 <_malloc_r+0x3b4>
   8526c:	6863      	ldr	r3, [r4, #4]
   8526e:	f023 0303 	bic.w	r3, r3, #3
   85272:	1b9a      	subs	r2, r3, r6
   85274:	2a0f      	cmp	r2, #15
   85276:	f300 8183 	bgt.w	85580 <_malloc_r+0x38c>
   8527a:	2a00      	cmp	r2, #0
   8527c:	f8c7 e014 	str.w	lr, [r7, #20]
   85280:	f8c7 e010 	str.w	lr, [r7, #16]
   85284:	f280 8091 	bge.w	853aa <_malloc_r+0x1b6>
   85288:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8528c:	f080 8154 	bcs.w	85538 <_malloc_r+0x344>
   85290:	2201      	movs	r2, #1
   85292:	08db      	lsrs	r3, r3, #3
   85294:	6879      	ldr	r1, [r7, #4]
   85296:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   8529a:	4413      	add	r3, r2
   8529c:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   852a0:	fa02 f20c 	lsl.w	r2, r2, ip
   852a4:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   852a8:	430a      	orrs	r2, r1
   852aa:	f1ac 0108 	sub.w	r1, ip, #8
   852ae:	60e1      	str	r1, [r4, #12]
   852b0:	f8c4 8008 	str.w	r8, [r4, #8]
   852b4:	607a      	str	r2, [r7, #4]
   852b6:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   852ba:	f8c8 400c 	str.w	r4, [r8, #12]
   852be:	2401      	movs	r4, #1
   852c0:	1083      	asrs	r3, r0, #2
   852c2:	409c      	lsls	r4, r3
   852c4:	4294      	cmp	r4, r2
   852c6:	d87d      	bhi.n	853c4 <_malloc_r+0x1d0>
   852c8:	4214      	tst	r4, r2
   852ca:	d106      	bne.n	852da <_malloc_r+0xe6>
   852cc:	f020 0003 	bic.w	r0, r0, #3
   852d0:	0064      	lsls	r4, r4, #1
   852d2:	4214      	tst	r4, r2
   852d4:	f100 0004 	add.w	r0, r0, #4
   852d8:	d0fa      	beq.n	852d0 <_malloc_r+0xdc>
   852da:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   852de:	46cc      	mov	ip, r9
   852e0:	4680      	mov	r8, r0
   852e2:	f8dc 300c 	ldr.w	r3, [ip, #12]
   852e6:	459c      	cmp	ip, r3
   852e8:	d107      	bne.n	852fa <_malloc_r+0x106>
   852ea:	e15f      	b.n	855ac <_malloc_r+0x3b8>
   852ec:	2a00      	cmp	r2, #0
   852ee:	f280 816d 	bge.w	855cc <_malloc_r+0x3d8>
   852f2:	68db      	ldr	r3, [r3, #12]
   852f4:	459c      	cmp	ip, r3
   852f6:	f000 8159 	beq.w	855ac <_malloc_r+0x3b8>
   852fa:	6859      	ldr	r1, [r3, #4]
   852fc:	f021 0103 	bic.w	r1, r1, #3
   85300:	1b8a      	subs	r2, r1, r6
   85302:	2a0f      	cmp	r2, #15
   85304:	ddf2      	ble.n	852ec <_malloc_r+0xf8>
   85306:	68dc      	ldr	r4, [r3, #12]
   85308:	f8d3 c008 	ldr.w	ip, [r3, #8]
   8530c:	f046 0801 	orr.w	r8, r6, #1
   85310:	4628      	mov	r0, r5
   85312:	441e      	add	r6, r3
   85314:	f042 0501 	orr.w	r5, r2, #1
   85318:	f8c3 8004 	str.w	r8, [r3, #4]
   8531c:	f8cc 400c 	str.w	r4, [ip, #12]
   85320:	f8c4 c008 	str.w	ip, [r4, #8]
   85324:	617e      	str	r6, [r7, #20]
   85326:	613e      	str	r6, [r7, #16]
   85328:	f8c6 e00c 	str.w	lr, [r6, #12]
   8532c:	f8c6 e008 	str.w	lr, [r6, #8]
   85330:	6075      	str	r5, [r6, #4]
   85332:	505a      	str	r2, [r3, r1]
   85334:	9300      	str	r3, [sp, #0]
   85336:	f000 fa4b 	bl	857d0 <__malloc_unlock>
   8533a:	9b00      	ldr	r3, [sp, #0]
   8533c:	f103 0408 	add.w	r4, r3, #8
   85340:	e01e      	b.n	85380 <_malloc_r+0x18c>
   85342:	2910      	cmp	r1, #16
   85344:	d820      	bhi.n	85388 <_malloc_r+0x194>
   85346:	f000 fa3d 	bl	857c4 <__malloc_lock>
   8534a:	2610      	movs	r6, #16
   8534c:	2318      	movs	r3, #24
   8534e:	2002      	movs	r0, #2
   85350:	4f72      	ldr	r7, [pc, #456]	; (8551c <_malloc_r+0x328>)
   85352:	443b      	add	r3, r7
   85354:	685c      	ldr	r4, [r3, #4]
   85356:	f1a3 0208 	sub.w	r2, r3, #8
   8535a:	4294      	cmp	r4, r2
   8535c:	f000 812f 	beq.w	855be <_malloc_r+0x3ca>
   85360:	6863      	ldr	r3, [r4, #4]
   85362:	68e1      	ldr	r1, [r4, #12]
   85364:	f023 0303 	bic.w	r3, r3, #3
   85368:	4423      	add	r3, r4
   8536a:	685a      	ldr	r2, [r3, #4]
   8536c:	68a6      	ldr	r6, [r4, #8]
   8536e:	f042 0201 	orr.w	r2, r2, #1
   85372:	60f1      	str	r1, [r6, #12]
   85374:	4628      	mov	r0, r5
   85376:	608e      	str	r6, [r1, #8]
   85378:	605a      	str	r2, [r3, #4]
   8537a:	f000 fa29 	bl	857d0 <__malloc_unlock>
   8537e:	3408      	adds	r4, #8
   85380:	4620      	mov	r0, r4
   85382:	b003      	add	sp, #12
   85384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85388:	2400      	movs	r4, #0
   8538a:	230c      	movs	r3, #12
   8538c:	4620      	mov	r0, r4
   8538e:	602b      	str	r3, [r5, #0]
   85390:	b003      	add	sp, #12
   85392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85396:	2040      	movs	r0, #64	; 0x40
   85398:	f44f 7100 	mov.w	r1, #512	; 0x200
   8539c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   853a0:	e74a      	b.n	85238 <_malloc_r+0x44>
   853a2:	4423      	add	r3, r4
   853a4:	685a      	ldr	r2, [r3, #4]
   853a6:	68e1      	ldr	r1, [r4, #12]
   853a8:	e7e0      	b.n	8536c <_malloc_r+0x178>
   853aa:	4423      	add	r3, r4
   853ac:	685a      	ldr	r2, [r3, #4]
   853ae:	4628      	mov	r0, r5
   853b0:	f042 0201 	orr.w	r2, r2, #1
   853b4:	605a      	str	r2, [r3, #4]
   853b6:	3408      	adds	r4, #8
   853b8:	f000 fa0a 	bl	857d0 <__malloc_unlock>
   853bc:	4620      	mov	r0, r4
   853be:	b003      	add	sp, #12
   853c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   853c4:	68bc      	ldr	r4, [r7, #8]
   853c6:	6863      	ldr	r3, [r4, #4]
   853c8:	f023 0803 	bic.w	r8, r3, #3
   853cc:	45b0      	cmp	r8, r6
   853ce:	d304      	bcc.n	853da <_malloc_r+0x1e6>
   853d0:	eba8 0306 	sub.w	r3, r8, r6
   853d4:	2b0f      	cmp	r3, #15
   853d6:	f300 8085 	bgt.w	854e4 <_malloc_r+0x2f0>
   853da:	f8df 9158 	ldr.w	r9, [pc, #344]	; 85534 <_malloc_r+0x340>
   853de:	4b50      	ldr	r3, [pc, #320]	; (85520 <_malloc_r+0x32c>)
   853e0:	f8d9 2000 	ldr.w	r2, [r9]
   853e4:	681b      	ldr	r3, [r3, #0]
   853e6:	3201      	adds	r2, #1
   853e8:	4433      	add	r3, r6
   853ea:	eb04 0a08 	add.w	sl, r4, r8
   853ee:	f000 8154 	beq.w	8569a <_malloc_r+0x4a6>
   853f2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   853f6:	330f      	adds	r3, #15
   853f8:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   853fc:	f02b 0b0f 	bic.w	fp, fp, #15
   85400:	4659      	mov	r1, fp
   85402:	4628      	mov	r0, r5
   85404:	f000 fce6 	bl	85dd4 <_sbrk_r>
   85408:	1c41      	adds	r1, r0, #1
   8540a:	4602      	mov	r2, r0
   8540c:	f000 80fb 	beq.w	85606 <_malloc_r+0x412>
   85410:	4582      	cmp	sl, r0
   85412:	f200 80f6 	bhi.w	85602 <_malloc_r+0x40e>
   85416:	4b43      	ldr	r3, [pc, #268]	; (85524 <_malloc_r+0x330>)
   85418:	6819      	ldr	r1, [r3, #0]
   8541a:	4459      	add	r1, fp
   8541c:	6019      	str	r1, [r3, #0]
   8541e:	f000 814c 	beq.w	856ba <_malloc_r+0x4c6>
   85422:	f8d9 0000 	ldr.w	r0, [r9]
   85426:	3001      	adds	r0, #1
   85428:	bf1b      	ittet	ne
   8542a:	eba2 0a0a 	subne.w	sl, r2, sl
   8542e:	4451      	addne	r1, sl
   85430:	f8c9 2000 	streq.w	r2, [r9]
   85434:	6019      	strne	r1, [r3, #0]
   85436:	f012 0107 	ands.w	r1, r2, #7
   8543a:	f000 8114 	beq.w	85666 <_malloc_r+0x472>
   8543e:	f1c1 0008 	rsb	r0, r1, #8
   85442:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   85446:	4402      	add	r2, r0
   85448:	3108      	adds	r1, #8
   8544a:	eb02 090b 	add.w	r9, r2, fp
   8544e:	f3c9 090b 	ubfx	r9, r9, #0, #12
   85452:	eba1 0909 	sub.w	r9, r1, r9
   85456:	4649      	mov	r1, r9
   85458:	4628      	mov	r0, r5
   8545a:	9301      	str	r3, [sp, #4]
   8545c:	9200      	str	r2, [sp, #0]
   8545e:	f000 fcb9 	bl	85dd4 <_sbrk_r>
   85462:	1c43      	adds	r3, r0, #1
   85464:	e89d 000c 	ldmia.w	sp, {r2, r3}
   85468:	f000 8142 	beq.w	856f0 <_malloc_r+0x4fc>
   8546c:	1a80      	subs	r0, r0, r2
   8546e:	4448      	add	r0, r9
   85470:	f040 0001 	orr.w	r0, r0, #1
   85474:	6819      	ldr	r1, [r3, #0]
   85476:	42bc      	cmp	r4, r7
   85478:	4449      	add	r1, r9
   8547a:	60ba      	str	r2, [r7, #8]
   8547c:	6019      	str	r1, [r3, #0]
   8547e:	6050      	str	r0, [r2, #4]
   85480:	d017      	beq.n	854b2 <_malloc_r+0x2be>
   85482:	f1b8 0f0f 	cmp.w	r8, #15
   85486:	f240 80fa 	bls.w	8567e <_malloc_r+0x48a>
   8548a:	f04f 0c05 	mov.w	ip, #5
   8548e:	6862      	ldr	r2, [r4, #4]
   85490:	f1a8 000c 	sub.w	r0, r8, #12
   85494:	f020 0007 	bic.w	r0, r0, #7
   85498:	f002 0201 	and.w	r2, r2, #1
   8549c:	eb04 0e00 	add.w	lr, r4, r0
   854a0:	4302      	orrs	r2, r0
   854a2:	280f      	cmp	r0, #15
   854a4:	6062      	str	r2, [r4, #4]
   854a6:	f8ce c004 	str.w	ip, [lr, #4]
   854aa:	f8ce c008 	str.w	ip, [lr, #8]
   854ae:	f200 8116 	bhi.w	856de <_malloc_r+0x4ea>
   854b2:	4b1d      	ldr	r3, [pc, #116]	; (85528 <_malloc_r+0x334>)
   854b4:	68bc      	ldr	r4, [r7, #8]
   854b6:	681a      	ldr	r2, [r3, #0]
   854b8:	4291      	cmp	r1, r2
   854ba:	bf88      	it	hi
   854bc:	6019      	strhi	r1, [r3, #0]
   854be:	4b1b      	ldr	r3, [pc, #108]	; (8552c <_malloc_r+0x338>)
   854c0:	681a      	ldr	r2, [r3, #0]
   854c2:	4291      	cmp	r1, r2
   854c4:	6862      	ldr	r2, [r4, #4]
   854c6:	bf88      	it	hi
   854c8:	6019      	strhi	r1, [r3, #0]
   854ca:	f022 0203 	bic.w	r2, r2, #3
   854ce:	4296      	cmp	r6, r2
   854d0:	eba2 0306 	sub.w	r3, r2, r6
   854d4:	d801      	bhi.n	854da <_malloc_r+0x2e6>
   854d6:	2b0f      	cmp	r3, #15
   854d8:	dc04      	bgt.n	854e4 <_malloc_r+0x2f0>
   854da:	4628      	mov	r0, r5
   854dc:	f000 f978 	bl	857d0 <__malloc_unlock>
   854e0:	2400      	movs	r4, #0
   854e2:	e74d      	b.n	85380 <_malloc_r+0x18c>
   854e4:	f046 0201 	orr.w	r2, r6, #1
   854e8:	f043 0301 	orr.w	r3, r3, #1
   854ec:	4426      	add	r6, r4
   854ee:	6062      	str	r2, [r4, #4]
   854f0:	4628      	mov	r0, r5
   854f2:	60be      	str	r6, [r7, #8]
   854f4:	3408      	adds	r4, #8
   854f6:	6073      	str	r3, [r6, #4]
   854f8:	f000 f96a 	bl	857d0 <__malloc_unlock>
   854fc:	4620      	mov	r0, r4
   854fe:	b003      	add	sp, #12
   85500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85504:	2b14      	cmp	r3, #20
   85506:	d970      	bls.n	855ea <_malloc_r+0x3f6>
   85508:	2b54      	cmp	r3, #84	; 0x54
   8550a:	f200 80a2 	bhi.w	85652 <_malloc_r+0x45e>
   8550e:	0b33      	lsrs	r3, r6, #12
   85510:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   85514:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   85518:	00c1      	lsls	r1, r0, #3
   8551a:	e68d      	b.n	85238 <_malloc_r+0x44>
   8551c:	20070614 	.word	0x20070614
   85520:	20070e08 	.word	0x20070e08
   85524:	20070dd8 	.word	0x20070dd8
   85528:	20070e00 	.word	0x20070e00
   8552c:	20070e04 	.word	0x20070e04
   85530:	2007061c 	.word	0x2007061c
   85534:	20070a1c 	.word	0x20070a1c
   85538:	0a5a      	lsrs	r2, r3, #9
   8553a:	2a04      	cmp	r2, #4
   8553c:	d95b      	bls.n	855f6 <_malloc_r+0x402>
   8553e:	2a14      	cmp	r2, #20
   85540:	f200 80ae 	bhi.w	856a0 <_malloc_r+0x4ac>
   85544:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   85548:	00c9      	lsls	r1, r1, #3
   8554a:	325b      	adds	r2, #91	; 0x5b
   8554c:	eb07 0c01 	add.w	ip, r7, r1
   85550:	5879      	ldr	r1, [r7, r1]
   85552:	f1ac 0c08 	sub.w	ip, ip, #8
   85556:	458c      	cmp	ip, r1
   85558:	f000 8088 	beq.w	8566c <_malloc_r+0x478>
   8555c:	684a      	ldr	r2, [r1, #4]
   8555e:	f022 0203 	bic.w	r2, r2, #3
   85562:	4293      	cmp	r3, r2
   85564:	d273      	bcs.n	8564e <_malloc_r+0x45a>
   85566:	6889      	ldr	r1, [r1, #8]
   85568:	458c      	cmp	ip, r1
   8556a:	d1f7      	bne.n	8555c <_malloc_r+0x368>
   8556c:	f8dc 300c 	ldr.w	r3, [ip, #12]
   85570:	687a      	ldr	r2, [r7, #4]
   85572:	60e3      	str	r3, [r4, #12]
   85574:	f8c4 c008 	str.w	ip, [r4, #8]
   85578:	609c      	str	r4, [r3, #8]
   8557a:	f8cc 400c 	str.w	r4, [ip, #12]
   8557e:	e69e      	b.n	852be <_malloc_r+0xca>
   85580:	f046 0c01 	orr.w	ip, r6, #1
   85584:	f042 0101 	orr.w	r1, r2, #1
   85588:	4426      	add	r6, r4
   8558a:	f8c4 c004 	str.w	ip, [r4, #4]
   8558e:	4628      	mov	r0, r5
   85590:	617e      	str	r6, [r7, #20]
   85592:	613e      	str	r6, [r7, #16]
   85594:	f8c6 e00c 	str.w	lr, [r6, #12]
   85598:	f8c6 e008 	str.w	lr, [r6, #8]
   8559c:	6071      	str	r1, [r6, #4]
   8559e:	50e2      	str	r2, [r4, r3]
   855a0:	f000 f916 	bl	857d0 <__malloc_unlock>
   855a4:	3408      	adds	r4, #8
   855a6:	e6eb      	b.n	85380 <_malloc_r+0x18c>
   855a8:	687a      	ldr	r2, [r7, #4]
   855aa:	e688      	b.n	852be <_malloc_r+0xca>
   855ac:	f108 0801 	add.w	r8, r8, #1
   855b0:	f018 0f03 	tst.w	r8, #3
   855b4:	f10c 0c08 	add.w	ip, ip, #8
   855b8:	f47f ae93 	bne.w	852e2 <_malloc_r+0xee>
   855bc:	e02d      	b.n	8561a <_malloc_r+0x426>
   855be:	68dc      	ldr	r4, [r3, #12]
   855c0:	42a3      	cmp	r3, r4
   855c2:	bf08      	it	eq
   855c4:	3002      	addeq	r0, #2
   855c6:	f43f ae4b 	beq.w	85260 <_malloc_r+0x6c>
   855ca:	e6c9      	b.n	85360 <_malloc_r+0x16c>
   855cc:	461c      	mov	r4, r3
   855ce:	4419      	add	r1, r3
   855d0:	684a      	ldr	r2, [r1, #4]
   855d2:	68db      	ldr	r3, [r3, #12]
   855d4:	f854 6f08 	ldr.w	r6, [r4, #8]!
   855d8:	f042 0201 	orr.w	r2, r2, #1
   855dc:	604a      	str	r2, [r1, #4]
   855de:	4628      	mov	r0, r5
   855e0:	60f3      	str	r3, [r6, #12]
   855e2:	609e      	str	r6, [r3, #8]
   855e4:	f000 f8f4 	bl	857d0 <__malloc_unlock>
   855e8:	e6ca      	b.n	85380 <_malloc_r+0x18c>
   855ea:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   855ee:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   855f2:	00c1      	lsls	r1, r0, #3
   855f4:	e620      	b.n	85238 <_malloc_r+0x44>
   855f6:	099a      	lsrs	r2, r3, #6
   855f8:	f102 0139 	add.w	r1, r2, #57	; 0x39
   855fc:	00c9      	lsls	r1, r1, #3
   855fe:	3238      	adds	r2, #56	; 0x38
   85600:	e7a4      	b.n	8554c <_malloc_r+0x358>
   85602:	42bc      	cmp	r4, r7
   85604:	d054      	beq.n	856b0 <_malloc_r+0x4bc>
   85606:	68bc      	ldr	r4, [r7, #8]
   85608:	6862      	ldr	r2, [r4, #4]
   8560a:	f022 0203 	bic.w	r2, r2, #3
   8560e:	e75e      	b.n	854ce <_malloc_r+0x2da>
   85610:	f859 3908 	ldr.w	r3, [r9], #-8
   85614:	4599      	cmp	r9, r3
   85616:	f040 8086 	bne.w	85726 <_malloc_r+0x532>
   8561a:	f010 0f03 	tst.w	r0, #3
   8561e:	f100 30ff 	add.w	r0, r0, #4294967295
   85622:	d1f5      	bne.n	85610 <_malloc_r+0x41c>
   85624:	687b      	ldr	r3, [r7, #4]
   85626:	ea23 0304 	bic.w	r3, r3, r4
   8562a:	607b      	str	r3, [r7, #4]
   8562c:	0064      	lsls	r4, r4, #1
   8562e:	429c      	cmp	r4, r3
   85630:	f63f aec8 	bhi.w	853c4 <_malloc_r+0x1d0>
   85634:	2c00      	cmp	r4, #0
   85636:	f43f aec5 	beq.w	853c4 <_malloc_r+0x1d0>
   8563a:	421c      	tst	r4, r3
   8563c:	4640      	mov	r0, r8
   8563e:	f47f ae4c 	bne.w	852da <_malloc_r+0xe6>
   85642:	0064      	lsls	r4, r4, #1
   85644:	421c      	tst	r4, r3
   85646:	f100 0004 	add.w	r0, r0, #4
   8564a:	d0fa      	beq.n	85642 <_malloc_r+0x44e>
   8564c:	e645      	b.n	852da <_malloc_r+0xe6>
   8564e:	468c      	mov	ip, r1
   85650:	e78c      	b.n	8556c <_malloc_r+0x378>
   85652:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   85656:	d815      	bhi.n	85684 <_malloc_r+0x490>
   85658:	0bf3      	lsrs	r3, r6, #15
   8565a:	f103 0078 	add.w	r0, r3, #120	; 0x78
   8565e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   85662:	00c1      	lsls	r1, r0, #3
   85664:	e5e8      	b.n	85238 <_malloc_r+0x44>
   85666:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   8566a:	e6ee      	b.n	8544a <_malloc_r+0x256>
   8566c:	2101      	movs	r1, #1
   8566e:	687b      	ldr	r3, [r7, #4]
   85670:	1092      	asrs	r2, r2, #2
   85672:	fa01 f202 	lsl.w	r2, r1, r2
   85676:	431a      	orrs	r2, r3
   85678:	607a      	str	r2, [r7, #4]
   8567a:	4663      	mov	r3, ip
   8567c:	e779      	b.n	85572 <_malloc_r+0x37e>
   8567e:	2301      	movs	r3, #1
   85680:	6053      	str	r3, [r2, #4]
   85682:	e72a      	b.n	854da <_malloc_r+0x2e6>
   85684:	f240 5254 	movw	r2, #1364	; 0x554
   85688:	4293      	cmp	r3, r2
   8568a:	d822      	bhi.n	856d2 <_malloc_r+0x4de>
   8568c:	0cb3      	lsrs	r3, r6, #18
   8568e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   85692:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   85696:	00c1      	lsls	r1, r0, #3
   85698:	e5ce      	b.n	85238 <_malloc_r+0x44>
   8569a:	f103 0b10 	add.w	fp, r3, #16
   8569e:	e6af      	b.n	85400 <_malloc_r+0x20c>
   856a0:	2a54      	cmp	r2, #84	; 0x54
   856a2:	d829      	bhi.n	856f8 <_malloc_r+0x504>
   856a4:	0b1a      	lsrs	r2, r3, #12
   856a6:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   856aa:	00c9      	lsls	r1, r1, #3
   856ac:	326e      	adds	r2, #110	; 0x6e
   856ae:	e74d      	b.n	8554c <_malloc_r+0x358>
   856b0:	4b20      	ldr	r3, [pc, #128]	; (85734 <_malloc_r+0x540>)
   856b2:	6819      	ldr	r1, [r3, #0]
   856b4:	4459      	add	r1, fp
   856b6:	6019      	str	r1, [r3, #0]
   856b8:	e6b3      	b.n	85422 <_malloc_r+0x22e>
   856ba:	f3ca 000b 	ubfx	r0, sl, #0, #12
   856be:	2800      	cmp	r0, #0
   856c0:	f47f aeaf 	bne.w	85422 <_malloc_r+0x22e>
   856c4:	eb08 030b 	add.w	r3, r8, fp
   856c8:	68ba      	ldr	r2, [r7, #8]
   856ca:	f043 0301 	orr.w	r3, r3, #1
   856ce:	6053      	str	r3, [r2, #4]
   856d0:	e6ef      	b.n	854b2 <_malloc_r+0x2be>
   856d2:	207f      	movs	r0, #127	; 0x7f
   856d4:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   856d8:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   856dc:	e5ac      	b.n	85238 <_malloc_r+0x44>
   856de:	f104 0108 	add.w	r1, r4, #8
   856e2:	4628      	mov	r0, r5
   856e4:	9300      	str	r3, [sp, #0]
   856e6:	f000 fce7 	bl	860b8 <_free_r>
   856ea:	9b00      	ldr	r3, [sp, #0]
   856ec:	6819      	ldr	r1, [r3, #0]
   856ee:	e6e0      	b.n	854b2 <_malloc_r+0x2be>
   856f0:	2001      	movs	r0, #1
   856f2:	f04f 0900 	mov.w	r9, #0
   856f6:	e6bd      	b.n	85474 <_malloc_r+0x280>
   856f8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   856fc:	d805      	bhi.n	8570a <_malloc_r+0x516>
   856fe:	0bda      	lsrs	r2, r3, #15
   85700:	f102 0178 	add.w	r1, r2, #120	; 0x78
   85704:	00c9      	lsls	r1, r1, #3
   85706:	3277      	adds	r2, #119	; 0x77
   85708:	e720      	b.n	8554c <_malloc_r+0x358>
   8570a:	f240 5154 	movw	r1, #1364	; 0x554
   8570e:	428a      	cmp	r2, r1
   85710:	d805      	bhi.n	8571e <_malloc_r+0x52a>
   85712:	0c9a      	lsrs	r2, r3, #18
   85714:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   85718:	00c9      	lsls	r1, r1, #3
   8571a:	327c      	adds	r2, #124	; 0x7c
   8571c:	e716      	b.n	8554c <_malloc_r+0x358>
   8571e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   85722:	227e      	movs	r2, #126	; 0x7e
   85724:	e712      	b.n	8554c <_malloc_r+0x358>
   85726:	687b      	ldr	r3, [r7, #4]
   85728:	e780      	b.n	8562c <_malloc_r+0x438>
   8572a:	08f0      	lsrs	r0, r6, #3
   8572c:	f106 0308 	add.w	r3, r6, #8
   85730:	e60e      	b.n	85350 <_malloc_r+0x15c>
   85732:	bf00      	nop
   85734:	20070dd8 	.word	0x20070dd8

00085738 <memchr>:
   85738:	0783      	lsls	r3, r0, #30
   8573a:	b470      	push	{r4, r5, r6}
   8573c:	b2cd      	uxtb	r5, r1
   8573e:	d03d      	beq.n	857bc <memchr+0x84>
   85740:	1e54      	subs	r4, r2, #1
   85742:	b30a      	cbz	r2, 85788 <memchr+0x50>
   85744:	7803      	ldrb	r3, [r0, #0]
   85746:	42ab      	cmp	r3, r5
   85748:	d01f      	beq.n	8578a <memchr+0x52>
   8574a:	1c43      	adds	r3, r0, #1
   8574c:	e005      	b.n	8575a <memchr+0x22>
   8574e:	f114 34ff 	adds.w	r4, r4, #4294967295
   85752:	d319      	bcc.n	85788 <memchr+0x50>
   85754:	7802      	ldrb	r2, [r0, #0]
   85756:	42aa      	cmp	r2, r5
   85758:	d017      	beq.n	8578a <memchr+0x52>
   8575a:	f013 0f03 	tst.w	r3, #3
   8575e:	4618      	mov	r0, r3
   85760:	f103 0301 	add.w	r3, r3, #1
   85764:	d1f3      	bne.n	8574e <memchr+0x16>
   85766:	2c03      	cmp	r4, #3
   85768:	d811      	bhi.n	8578e <memchr+0x56>
   8576a:	b34c      	cbz	r4, 857c0 <memchr+0x88>
   8576c:	7803      	ldrb	r3, [r0, #0]
   8576e:	42ab      	cmp	r3, r5
   85770:	d00b      	beq.n	8578a <memchr+0x52>
   85772:	4404      	add	r4, r0
   85774:	1c43      	adds	r3, r0, #1
   85776:	e002      	b.n	8577e <memchr+0x46>
   85778:	7802      	ldrb	r2, [r0, #0]
   8577a:	42aa      	cmp	r2, r5
   8577c:	d005      	beq.n	8578a <memchr+0x52>
   8577e:	429c      	cmp	r4, r3
   85780:	4618      	mov	r0, r3
   85782:	f103 0301 	add.w	r3, r3, #1
   85786:	d1f7      	bne.n	85778 <memchr+0x40>
   85788:	2000      	movs	r0, #0
   8578a:	bc70      	pop	{r4, r5, r6}
   8578c:	4770      	bx	lr
   8578e:	0209      	lsls	r1, r1, #8
   85790:	b289      	uxth	r1, r1
   85792:	4329      	orrs	r1, r5
   85794:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   85798:	6803      	ldr	r3, [r0, #0]
   8579a:	4606      	mov	r6, r0
   8579c:	404b      	eors	r3, r1
   8579e:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   857a2:	ea22 0303 	bic.w	r3, r2, r3
   857a6:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   857aa:	f100 0004 	add.w	r0, r0, #4
   857ae:	d103      	bne.n	857b8 <memchr+0x80>
   857b0:	3c04      	subs	r4, #4
   857b2:	2c03      	cmp	r4, #3
   857b4:	d8f0      	bhi.n	85798 <memchr+0x60>
   857b6:	e7d8      	b.n	8576a <memchr+0x32>
   857b8:	4630      	mov	r0, r6
   857ba:	e7d7      	b.n	8576c <memchr+0x34>
   857bc:	4614      	mov	r4, r2
   857be:	e7d2      	b.n	85766 <memchr+0x2e>
   857c0:	4620      	mov	r0, r4
   857c2:	e7e2      	b.n	8578a <memchr+0x52>

000857c4 <__malloc_lock>:
   857c4:	4801      	ldr	r0, [pc, #4]	; (857cc <__malloc_lock+0x8>)
   857c6:	f7ff bd11 	b.w	851ec <__retarget_lock_acquire_recursive>
   857ca:	bf00      	nop
   857cc:	20070f2c 	.word	0x20070f2c

000857d0 <__malloc_unlock>:
   857d0:	4801      	ldr	r0, [pc, #4]	; (857d8 <__malloc_unlock+0x8>)
   857d2:	f7ff bd0d 	b.w	851f0 <__retarget_lock_release_recursive>
   857d6:	bf00      	nop
   857d8:	20070f2c 	.word	0x20070f2c

000857dc <_Balloc>:
   857dc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   857de:	b570      	push	{r4, r5, r6, lr}
   857e0:	4605      	mov	r5, r0
   857e2:	460c      	mov	r4, r1
   857e4:	b14b      	cbz	r3, 857fa <_Balloc+0x1e>
   857e6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   857ea:	b180      	cbz	r0, 8580e <_Balloc+0x32>
   857ec:	6802      	ldr	r2, [r0, #0]
   857ee:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   857f2:	2300      	movs	r3, #0
   857f4:	6103      	str	r3, [r0, #16]
   857f6:	60c3      	str	r3, [r0, #12]
   857f8:	bd70      	pop	{r4, r5, r6, pc}
   857fa:	2221      	movs	r2, #33	; 0x21
   857fc:	2104      	movs	r1, #4
   857fe:	f000 fbdb 	bl	85fb8 <_calloc_r>
   85802:	64e8      	str	r0, [r5, #76]	; 0x4c
   85804:	4603      	mov	r3, r0
   85806:	2800      	cmp	r0, #0
   85808:	d1ed      	bne.n	857e6 <_Balloc+0xa>
   8580a:	2000      	movs	r0, #0
   8580c:	bd70      	pop	{r4, r5, r6, pc}
   8580e:	2101      	movs	r1, #1
   85810:	fa01 f604 	lsl.w	r6, r1, r4
   85814:	1d72      	adds	r2, r6, #5
   85816:	4628      	mov	r0, r5
   85818:	0092      	lsls	r2, r2, #2
   8581a:	f000 fbcd 	bl	85fb8 <_calloc_r>
   8581e:	2800      	cmp	r0, #0
   85820:	d0f3      	beq.n	8580a <_Balloc+0x2e>
   85822:	6044      	str	r4, [r0, #4]
   85824:	6086      	str	r6, [r0, #8]
   85826:	e7e4      	b.n	857f2 <_Balloc+0x16>

00085828 <_Bfree>:
   85828:	b131      	cbz	r1, 85838 <_Bfree+0x10>
   8582a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   8582c:	684a      	ldr	r2, [r1, #4]
   8582e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   85832:	6008      	str	r0, [r1, #0]
   85834:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   85838:	4770      	bx	lr
   8583a:	bf00      	nop

0008583c <__multadd>:
   8583c:	b5f0      	push	{r4, r5, r6, r7, lr}
   8583e:	460c      	mov	r4, r1
   85840:	4605      	mov	r5, r0
   85842:	f04f 0e00 	mov.w	lr, #0
   85846:	690e      	ldr	r6, [r1, #16]
   85848:	b083      	sub	sp, #12
   8584a:	f101 0714 	add.w	r7, r1, #20
   8584e:	6838      	ldr	r0, [r7, #0]
   85850:	f10e 0e01 	add.w	lr, lr, #1
   85854:	b281      	uxth	r1, r0
   85856:	fb02 3301 	mla	r3, r2, r1, r3
   8585a:	0c01      	lsrs	r1, r0, #16
   8585c:	0c18      	lsrs	r0, r3, #16
   8585e:	fb02 0101 	mla	r1, r2, r1, r0
   85862:	b29b      	uxth	r3, r3
   85864:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   85868:	4576      	cmp	r6, lr
   8586a:	f847 3b04 	str.w	r3, [r7], #4
   8586e:	ea4f 4311 	mov.w	r3, r1, lsr #16
   85872:	dcec      	bgt.n	8584e <__multadd+0x12>
   85874:	b13b      	cbz	r3, 85886 <__multadd+0x4a>
   85876:	68a2      	ldr	r2, [r4, #8]
   85878:	4296      	cmp	r6, r2
   8587a:	da07      	bge.n	8588c <__multadd+0x50>
   8587c:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   85880:	3601      	adds	r6, #1
   85882:	6153      	str	r3, [r2, #20]
   85884:	6126      	str	r6, [r4, #16]
   85886:	4620      	mov	r0, r4
   85888:	b003      	add	sp, #12
   8588a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8588c:	6861      	ldr	r1, [r4, #4]
   8588e:	4628      	mov	r0, r5
   85890:	3101      	adds	r1, #1
   85892:	9301      	str	r3, [sp, #4]
   85894:	f7ff ffa2 	bl	857dc <_Balloc>
   85898:	4607      	mov	r7, r0
   8589a:	6922      	ldr	r2, [r4, #16]
   8589c:	f104 010c 	add.w	r1, r4, #12
   858a0:	3202      	adds	r2, #2
   858a2:	0092      	lsls	r2, r2, #2
   858a4:	300c      	adds	r0, #12
   858a6:	f7fd f919 	bl	82adc <memcpy>
   858aa:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   858ac:	6861      	ldr	r1, [r4, #4]
   858ae:	9b01      	ldr	r3, [sp, #4]
   858b0:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   858b4:	6020      	str	r0, [r4, #0]
   858b6:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   858ba:	463c      	mov	r4, r7
   858bc:	e7de      	b.n	8587c <__multadd+0x40>
   858be:	bf00      	nop

000858c0 <__hi0bits>:
   858c0:	0c02      	lsrs	r2, r0, #16
   858c2:	0412      	lsls	r2, r2, #16
   858c4:	4603      	mov	r3, r0
   858c6:	b9b2      	cbnz	r2, 858f6 <__hi0bits+0x36>
   858c8:	0403      	lsls	r3, r0, #16
   858ca:	2010      	movs	r0, #16
   858cc:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   858d0:	bf04      	itt	eq
   858d2:	021b      	lsleq	r3, r3, #8
   858d4:	3008      	addeq	r0, #8
   858d6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   858da:	bf04      	itt	eq
   858dc:	011b      	lsleq	r3, r3, #4
   858de:	3004      	addeq	r0, #4
   858e0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   858e4:	bf04      	itt	eq
   858e6:	009b      	lsleq	r3, r3, #2
   858e8:	3002      	addeq	r0, #2
   858ea:	2b00      	cmp	r3, #0
   858ec:	db02      	blt.n	858f4 <__hi0bits+0x34>
   858ee:	005b      	lsls	r3, r3, #1
   858f0:	d403      	bmi.n	858fa <__hi0bits+0x3a>
   858f2:	2020      	movs	r0, #32
   858f4:	4770      	bx	lr
   858f6:	2000      	movs	r0, #0
   858f8:	e7e8      	b.n	858cc <__hi0bits+0xc>
   858fa:	3001      	adds	r0, #1
   858fc:	4770      	bx	lr
   858fe:	bf00      	nop

00085900 <__lo0bits>:
   85900:	6803      	ldr	r3, [r0, #0]
   85902:	4601      	mov	r1, r0
   85904:	f013 0207 	ands.w	r2, r3, #7
   85908:	d007      	beq.n	8591a <__lo0bits+0x1a>
   8590a:	07da      	lsls	r2, r3, #31
   8590c:	d421      	bmi.n	85952 <__lo0bits+0x52>
   8590e:	0798      	lsls	r0, r3, #30
   85910:	d421      	bmi.n	85956 <__lo0bits+0x56>
   85912:	089b      	lsrs	r3, r3, #2
   85914:	600b      	str	r3, [r1, #0]
   85916:	2002      	movs	r0, #2
   85918:	4770      	bx	lr
   8591a:	b298      	uxth	r0, r3
   8591c:	b198      	cbz	r0, 85946 <__lo0bits+0x46>
   8591e:	4610      	mov	r0, r2
   85920:	f013 0fff 	tst.w	r3, #255	; 0xff
   85924:	bf04      	itt	eq
   85926:	0a1b      	lsreq	r3, r3, #8
   85928:	3008      	addeq	r0, #8
   8592a:	071a      	lsls	r2, r3, #28
   8592c:	bf04      	itt	eq
   8592e:	091b      	lsreq	r3, r3, #4
   85930:	3004      	addeq	r0, #4
   85932:	079a      	lsls	r2, r3, #30
   85934:	bf04      	itt	eq
   85936:	089b      	lsreq	r3, r3, #2
   85938:	3002      	addeq	r0, #2
   8593a:	07da      	lsls	r2, r3, #31
   8593c:	d407      	bmi.n	8594e <__lo0bits+0x4e>
   8593e:	085b      	lsrs	r3, r3, #1
   85940:	d104      	bne.n	8594c <__lo0bits+0x4c>
   85942:	2020      	movs	r0, #32
   85944:	4770      	bx	lr
   85946:	0c1b      	lsrs	r3, r3, #16
   85948:	2010      	movs	r0, #16
   8594a:	e7e9      	b.n	85920 <__lo0bits+0x20>
   8594c:	3001      	adds	r0, #1
   8594e:	600b      	str	r3, [r1, #0]
   85950:	4770      	bx	lr
   85952:	2000      	movs	r0, #0
   85954:	4770      	bx	lr
   85956:	085b      	lsrs	r3, r3, #1
   85958:	600b      	str	r3, [r1, #0]
   8595a:	2001      	movs	r0, #1
   8595c:	4770      	bx	lr
   8595e:	bf00      	nop

00085960 <__i2b>:
   85960:	b510      	push	{r4, lr}
   85962:	460c      	mov	r4, r1
   85964:	2101      	movs	r1, #1
   85966:	f7ff ff39 	bl	857dc <_Balloc>
   8596a:	2201      	movs	r2, #1
   8596c:	6144      	str	r4, [r0, #20]
   8596e:	6102      	str	r2, [r0, #16]
   85970:	bd10      	pop	{r4, pc}
   85972:	bf00      	nop

00085974 <__multiply>:
   85974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85978:	690c      	ldr	r4, [r1, #16]
   8597a:	6915      	ldr	r5, [r2, #16]
   8597c:	b083      	sub	sp, #12
   8597e:	42ac      	cmp	r4, r5
   85980:	468b      	mov	fp, r1
   85982:	4616      	mov	r6, r2
   85984:	da04      	bge.n	85990 <__multiply+0x1c>
   85986:	4622      	mov	r2, r4
   85988:	46b3      	mov	fp, r6
   8598a:	462c      	mov	r4, r5
   8598c:	460e      	mov	r6, r1
   8598e:	4615      	mov	r5, r2
   85990:	f8db 3008 	ldr.w	r3, [fp, #8]
   85994:	eb04 0805 	add.w	r8, r4, r5
   85998:	f8db 1004 	ldr.w	r1, [fp, #4]
   8599c:	4598      	cmp	r8, r3
   8599e:	bfc8      	it	gt
   859a0:	3101      	addgt	r1, #1
   859a2:	f7ff ff1b 	bl	857dc <_Balloc>
   859a6:	f100 0914 	add.w	r9, r0, #20
   859aa:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   859ae:	45d1      	cmp	r9, sl
   859b0:	9000      	str	r0, [sp, #0]
   859b2:	d205      	bcs.n	859c0 <__multiply+0x4c>
   859b4:	464b      	mov	r3, r9
   859b6:	2100      	movs	r1, #0
   859b8:	f843 1b04 	str.w	r1, [r3], #4
   859bc:	459a      	cmp	sl, r3
   859be:	d8fb      	bhi.n	859b8 <__multiply+0x44>
   859c0:	f106 0c14 	add.w	ip, r6, #20
   859c4:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   859c8:	f10b 0b14 	add.w	fp, fp, #20
   859cc:	459c      	cmp	ip, r3
   859ce:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   859d2:	d24b      	bcs.n	85a6c <__multiply+0xf8>
   859d4:	f8cd a004 	str.w	sl, [sp, #4]
   859d8:	469a      	mov	sl, r3
   859da:	f8dc 5000 	ldr.w	r5, [ip]
   859de:	b2af      	uxth	r7, r5
   859e0:	b1e7      	cbz	r7, 85a1c <__multiply+0xa8>
   859e2:	464d      	mov	r5, r9
   859e4:	465e      	mov	r6, fp
   859e6:	2100      	movs	r1, #0
   859e8:	f856 2b04 	ldr.w	r2, [r6], #4
   859ec:	6828      	ldr	r0, [r5, #0]
   859ee:	b293      	uxth	r3, r2
   859f0:	b284      	uxth	r4, r0
   859f2:	0c12      	lsrs	r2, r2, #16
   859f4:	fb07 4303 	mla	r3, r7, r3, r4
   859f8:	0c00      	lsrs	r0, r0, #16
   859fa:	fb07 0202 	mla	r2, r7, r2, r0
   859fe:	440b      	add	r3, r1
   85a00:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   85a04:	b29b      	uxth	r3, r3
   85a06:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   85a0a:	45b6      	cmp	lr, r6
   85a0c:	f845 3b04 	str.w	r3, [r5], #4
   85a10:	ea4f 4111 	mov.w	r1, r1, lsr #16
   85a14:	d8e8      	bhi.n	859e8 <__multiply+0x74>
   85a16:	6029      	str	r1, [r5, #0]
   85a18:	f8dc 5000 	ldr.w	r5, [ip]
   85a1c:	0c2d      	lsrs	r5, r5, #16
   85a1e:	d01d      	beq.n	85a5c <__multiply+0xe8>
   85a20:	f8d9 3000 	ldr.w	r3, [r9]
   85a24:	4648      	mov	r0, r9
   85a26:	461c      	mov	r4, r3
   85a28:	4659      	mov	r1, fp
   85a2a:	2200      	movs	r2, #0
   85a2c:	880e      	ldrh	r6, [r1, #0]
   85a2e:	0c24      	lsrs	r4, r4, #16
   85a30:	fb05 4406 	mla	r4, r5, r6, r4
   85a34:	b29b      	uxth	r3, r3
   85a36:	4422      	add	r2, r4
   85a38:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   85a3c:	f840 3b04 	str.w	r3, [r0], #4
   85a40:	f851 3b04 	ldr.w	r3, [r1], #4
   85a44:	6804      	ldr	r4, [r0, #0]
   85a46:	0c1b      	lsrs	r3, r3, #16
   85a48:	b2a6      	uxth	r6, r4
   85a4a:	fb05 6303 	mla	r3, r5, r3, r6
   85a4e:	458e      	cmp	lr, r1
   85a50:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   85a54:	ea4f 4213 	mov.w	r2, r3, lsr #16
   85a58:	d8e8      	bhi.n	85a2c <__multiply+0xb8>
   85a5a:	6003      	str	r3, [r0, #0]
   85a5c:	f10c 0c04 	add.w	ip, ip, #4
   85a60:	45e2      	cmp	sl, ip
   85a62:	f109 0904 	add.w	r9, r9, #4
   85a66:	d8b8      	bhi.n	859da <__multiply+0x66>
   85a68:	f8dd a004 	ldr.w	sl, [sp, #4]
   85a6c:	f1b8 0f00 	cmp.w	r8, #0
   85a70:	dd0b      	ble.n	85a8a <__multiply+0x116>
   85a72:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   85a76:	f1aa 0a04 	sub.w	sl, sl, #4
   85a7a:	b11b      	cbz	r3, 85a84 <__multiply+0x110>
   85a7c:	e005      	b.n	85a8a <__multiply+0x116>
   85a7e:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   85a82:	b913      	cbnz	r3, 85a8a <__multiply+0x116>
   85a84:	f1b8 0801 	subs.w	r8, r8, #1
   85a88:	d1f9      	bne.n	85a7e <__multiply+0x10a>
   85a8a:	9800      	ldr	r0, [sp, #0]
   85a8c:	f8c0 8010 	str.w	r8, [r0, #16]
   85a90:	b003      	add	sp, #12
   85a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85a96:	bf00      	nop

00085a98 <__pow5mult>:
   85a98:	f012 0303 	ands.w	r3, r2, #3
   85a9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85aa0:	4614      	mov	r4, r2
   85aa2:	4607      	mov	r7, r0
   85aa4:	d12e      	bne.n	85b04 <__pow5mult+0x6c>
   85aa6:	460d      	mov	r5, r1
   85aa8:	10a4      	asrs	r4, r4, #2
   85aaa:	d01c      	beq.n	85ae6 <__pow5mult+0x4e>
   85aac:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   85aae:	b396      	cbz	r6, 85b16 <__pow5mult+0x7e>
   85ab0:	07e3      	lsls	r3, r4, #31
   85ab2:	f04f 0800 	mov.w	r8, #0
   85ab6:	d406      	bmi.n	85ac6 <__pow5mult+0x2e>
   85ab8:	1064      	asrs	r4, r4, #1
   85aba:	d014      	beq.n	85ae6 <__pow5mult+0x4e>
   85abc:	6830      	ldr	r0, [r6, #0]
   85abe:	b1a8      	cbz	r0, 85aec <__pow5mult+0x54>
   85ac0:	4606      	mov	r6, r0
   85ac2:	07e3      	lsls	r3, r4, #31
   85ac4:	d5f8      	bpl.n	85ab8 <__pow5mult+0x20>
   85ac6:	4632      	mov	r2, r6
   85ac8:	4629      	mov	r1, r5
   85aca:	4638      	mov	r0, r7
   85acc:	f7ff ff52 	bl	85974 <__multiply>
   85ad0:	b1b5      	cbz	r5, 85b00 <__pow5mult+0x68>
   85ad2:	686a      	ldr	r2, [r5, #4]
   85ad4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   85ad6:	1064      	asrs	r4, r4, #1
   85ad8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   85adc:	6029      	str	r1, [r5, #0]
   85ade:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   85ae2:	4605      	mov	r5, r0
   85ae4:	d1ea      	bne.n	85abc <__pow5mult+0x24>
   85ae6:	4628      	mov	r0, r5
   85ae8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85aec:	4632      	mov	r2, r6
   85aee:	4631      	mov	r1, r6
   85af0:	4638      	mov	r0, r7
   85af2:	f7ff ff3f 	bl	85974 <__multiply>
   85af6:	6030      	str	r0, [r6, #0]
   85af8:	f8c0 8000 	str.w	r8, [r0]
   85afc:	4606      	mov	r6, r0
   85afe:	e7e0      	b.n	85ac2 <__pow5mult+0x2a>
   85b00:	4605      	mov	r5, r0
   85b02:	e7d9      	b.n	85ab8 <__pow5mult+0x20>
   85b04:	4a0b      	ldr	r2, [pc, #44]	; (85b34 <__pow5mult+0x9c>)
   85b06:	3b01      	subs	r3, #1
   85b08:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   85b0c:	2300      	movs	r3, #0
   85b0e:	f7ff fe95 	bl	8583c <__multadd>
   85b12:	4605      	mov	r5, r0
   85b14:	e7c8      	b.n	85aa8 <__pow5mult+0x10>
   85b16:	2101      	movs	r1, #1
   85b18:	4638      	mov	r0, r7
   85b1a:	f7ff fe5f 	bl	857dc <_Balloc>
   85b1e:	f240 2171 	movw	r1, #625	; 0x271
   85b22:	2201      	movs	r2, #1
   85b24:	2300      	movs	r3, #0
   85b26:	6141      	str	r1, [r0, #20]
   85b28:	6102      	str	r2, [r0, #16]
   85b2a:	4606      	mov	r6, r0
   85b2c:	64b8      	str	r0, [r7, #72]	; 0x48
   85b2e:	6003      	str	r3, [r0, #0]
   85b30:	e7be      	b.n	85ab0 <__pow5mult+0x18>
   85b32:	bf00      	nop
   85b34:	000874f0 	.word	0x000874f0

00085b38 <__lshift>:
   85b38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   85b3c:	690b      	ldr	r3, [r1, #16]
   85b3e:	1154      	asrs	r4, r2, #5
   85b40:	eb04 0803 	add.w	r8, r4, r3
   85b44:	688b      	ldr	r3, [r1, #8]
   85b46:	f108 0501 	add.w	r5, r8, #1
   85b4a:	429d      	cmp	r5, r3
   85b4c:	460e      	mov	r6, r1
   85b4e:	4691      	mov	r9, r2
   85b50:	4607      	mov	r7, r0
   85b52:	6849      	ldr	r1, [r1, #4]
   85b54:	dd04      	ble.n	85b60 <__lshift+0x28>
   85b56:	005b      	lsls	r3, r3, #1
   85b58:	429d      	cmp	r5, r3
   85b5a:	f101 0101 	add.w	r1, r1, #1
   85b5e:	dcfa      	bgt.n	85b56 <__lshift+0x1e>
   85b60:	4638      	mov	r0, r7
   85b62:	f7ff fe3b 	bl	857dc <_Balloc>
   85b66:	2c00      	cmp	r4, #0
   85b68:	f100 0314 	add.w	r3, r0, #20
   85b6c:	dd06      	ble.n	85b7c <__lshift+0x44>
   85b6e:	2100      	movs	r1, #0
   85b70:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   85b74:	f843 1b04 	str.w	r1, [r3], #4
   85b78:	429a      	cmp	r2, r3
   85b7a:	d1fb      	bne.n	85b74 <__lshift+0x3c>
   85b7c:	6934      	ldr	r4, [r6, #16]
   85b7e:	f106 0114 	add.w	r1, r6, #20
   85b82:	f019 091f 	ands.w	r9, r9, #31
   85b86:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   85b8a:	d01d      	beq.n	85bc8 <__lshift+0x90>
   85b8c:	2200      	movs	r2, #0
   85b8e:	f1c9 0c20 	rsb	ip, r9, #32
   85b92:	680c      	ldr	r4, [r1, #0]
   85b94:	fa04 f409 	lsl.w	r4, r4, r9
   85b98:	4314      	orrs	r4, r2
   85b9a:	f843 4b04 	str.w	r4, [r3], #4
   85b9e:	f851 2b04 	ldr.w	r2, [r1], #4
   85ba2:	458e      	cmp	lr, r1
   85ba4:	fa22 f20c 	lsr.w	r2, r2, ip
   85ba8:	d8f3      	bhi.n	85b92 <__lshift+0x5a>
   85baa:	601a      	str	r2, [r3, #0]
   85bac:	b10a      	cbz	r2, 85bb2 <__lshift+0x7a>
   85bae:	f108 0502 	add.w	r5, r8, #2
   85bb2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   85bb4:	6872      	ldr	r2, [r6, #4]
   85bb6:	3d01      	subs	r5, #1
   85bb8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   85bbc:	6105      	str	r5, [r0, #16]
   85bbe:	6031      	str	r1, [r6, #0]
   85bc0:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   85bc4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   85bc8:	3b04      	subs	r3, #4
   85bca:	f851 2b04 	ldr.w	r2, [r1], #4
   85bce:	458e      	cmp	lr, r1
   85bd0:	f843 2f04 	str.w	r2, [r3, #4]!
   85bd4:	d8f9      	bhi.n	85bca <__lshift+0x92>
   85bd6:	e7ec      	b.n	85bb2 <__lshift+0x7a>

00085bd8 <__mcmp>:
   85bd8:	b430      	push	{r4, r5}
   85bda:	690b      	ldr	r3, [r1, #16]
   85bdc:	4605      	mov	r5, r0
   85bde:	6900      	ldr	r0, [r0, #16]
   85be0:	1ac0      	subs	r0, r0, r3
   85be2:	d10f      	bne.n	85c04 <__mcmp+0x2c>
   85be4:	009b      	lsls	r3, r3, #2
   85be6:	3514      	adds	r5, #20
   85be8:	3114      	adds	r1, #20
   85bea:	4419      	add	r1, r3
   85bec:	442b      	add	r3, r5
   85bee:	e001      	b.n	85bf4 <__mcmp+0x1c>
   85bf0:	429d      	cmp	r5, r3
   85bf2:	d207      	bcs.n	85c04 <__mcmp+0x2c>
   85bf4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   85bf8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   85bfc:	4294      	cmp	r4, r2
   85bfe:	d0f7      	beq.n	85bf0 <__mcmp+0x18>
   85c00:	d302      	bcc.n	85c08 <__mcmp+0x30>
   85c02:	2001      	movs	r0, #1
   85c04:	bc30      	pop	{r4, r5}
   85c06:	4770      	bx	lr
   85c08:	f04f 30ff 	mov.w	r0, #4294967295
   85c0c:	e7fa      	b.n	85c04 <__mcmp+0x2c>
   85c0e:	bf00      	nop

00085c10 <__mdiff>:
   85c10:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85c14:	690c      	ldr	r4, [r1, #16]
   85c16:	4689      	mov	r9, r1
   85c18:	6911      	ldr	r1, [r2, #16]
   85c1a:	4692      	mov	sl, r2
   85c1c:	1a64      	subs	r4, r4, r1
   85c1e:	2c00      	cmp	r4, #0
   85c20:	d117      	bne.n	85c52 <__mdiff+0x42>
   85c22:	0089      	lsls	r1, r1, #2
   85c24:	f109 0714 	add.w	r7, r9, #20
   85c28:	f102 0614 	add.w	r6, r2, #20
   85c2c:	187b      	adds	r3, r7, r1
   85c2e:	4431      	add	r1, r6
   85c30:	e001      	b.n	85c36 <__mdiff+0x26>
   85c32:	429f      	cmp	r7, r3
   85c34:	d265      	bcs.n	85d02 <__mdiff+0xf2>
   85c36:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   85c3a:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   85c3e:	4295      	cmp	r5, r2
   85c40:	d0f7      	beq.n	85c32 <__mdiff+0x22>
   85c42:	d267      	bcs.n	85d14 <__mdiff+0x104>
   85c44:	464b      	mov	r3, r9
   85c46:	46bb      	mov	fp, r7
   85c48:	46d1      	mov	r9, sl
   85c4a:	4637      	mov	r7, r6
   85c4c:	469a      	mov	sl, r3
   85c4e:	2401      	movs	r4, #1
   85c50:	e005      	b.n	85c5e <__mdiff+0x4e>
   85c52:	db61      	blt.n	85d18 <__mdiff+0x108>
   85c54:	2400      	movs	r4, #0
   85c56:	f109 0714 	add.w	r7, r9, #20
   85c5a:	f10a 0b14 	add.w	fp, sl, #20
   85c5e:	f8d9 1004 	ldr.w	r1, [r9, #4]
   85c62:	f7ff fdbb 	bl	857dc <_Balloc>
   85c66:	465d      	mov	r5, fp
   85c68:	f04f 0800 	mov.w	r8, #0
   85c6c:	f8d9 e010 	ldr.w	lr, [r9, #16]
   85c70:	f8da 3010 	ldr.w	r3, [sl, #16]
   85c74:	463e      	mov	r6, r7
   85c76:	60c4      	str	r4, [r0, #12]
   85c78:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   85c7c:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   85c80:	f100 0414 	add.w	r4, r0, #20
   85c84:	f856 9b04 	ldr.w	r9, [r6], #4
   85c88:	f855 2b04 	ldr.w	r2, [r5], #4
   85c8c:	fa1f f389 	uxth.w	r3, r9
   85c90:	4443      	add	r3, r8
   85c92:	fa1f f882 	uxth.w	r8, r2
   85c96:	0c12      	lsrs	r2, r2, #16
   85c98:	eba3 0308 	sub.w	r3, r3, r8
   85c9c:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   85ca0:	eb02 4223 	add.w	r2, r2, r3, asr #16
   85ca4:	b29b      	uxth	r3, r3
   85ca6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   85caa:	45ac      	cmp	ip, r5
   85cac:	f844 3b04 	str.w	r3, [r4], #4
   85cb0:	ea4f 4822 	mov.w	r8, r2, asr #16
   85cb4:	d8e6      	bhi.n	85c84 <__mdiff+0x74>
   85cb6:	42b7      	cmp	r7, r6
   85cb8:	d917      	bls.n	85cea <__mdiff+0xda>
   85cba:	46a4      	mov	ip, r4
   85cbc:	4635      	mov	r5, r6
   85cbe:	f855 3b04 	ldr.w	r3, [r5], #4
   85cc2:	b299      	uxth	r1, r3
   85cc4:	4441      	add	r1, r8
   85cc6:	140a      	asrs	r2, r1, #16
   85cc8:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   85ccc:	b289      	uxth	r1, r1
   85cce:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   85cd2:	42af      	cmp	r7, r5
   85cd4:	f84c 3b04 	str.w	r3, [ip], #4
   85cd8:	ea4f 4822 	mov.w	r8, r2, asr #16
   85cdc:	d8ef      	bhi.n	85cbe <__mdiff+0xae>
   85cde:	43f6      	mvns	r6, r6
   85ce0:	4437      	add	r7, r6
   85ce2:	f027 0703 	bic.w	r7, r7, #3
   85ce6:	3704      	adds	r7, #4
   85ce8:	443c      	add	r4, r7
   85cea:	3c04      	subs	r4, #4
   85cec:	b92b      	cbnz	r3, 85cfa <__mdiff+0xea>
   85cee:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   85cf2:	f10e 3eff 	add.w	lr, lr, #4294967295
   85cf6:	2b00      	cmp	r3, #0
   85cf8:	d0f9      	beq.n	85cee <__mdiff+0xde>
   85cfa:	f8c0 e010 	str.w	lr, [r0, #16]
   85cfe:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85d02:	2100      	movs	r1, #0
   85d04:	f7ff fd6a 	bl	857dc <_Balloc>
   85d08:	2201      	movs	r2, #1
   85d0a:	2300      	movs	r3, #0
   85d0c:	6102      	str	r2, [r0, #16]
   85d0e:	6143      	str	r3, [r0, #20]
   85d10:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85d14:	46b3      	mov	fp, r6
   85d16:	e7a2      	b.n	85c5e <__mdiff+0x4e>
   85d18:	464b      	mov	r3, r9
   85d1a:	f109 0b14 	add.w	fp, r9, #20
   85d1e:	f102 0714 	add.w	r7, r2, #20
   85d22:	4691      	mov	r9, r2
   85d24:	2401      	movs	r4, #1
   85d26:	469a      	mov	sl, r3
   85d28:	e799      	b.n	85c5e <__mdiff+0x4e>
   85d2a:	bf00      	nop

00085d2c <__d2b>:
   85d2c:	b5f0      	push	{r4, r5, r6, r7, lr}
   85d2e:	2101      	movs	r1, #1
   85d30:	b083      	sub	sp, #12
   85d32:	461c      	mov	r4, r3
   85d34:	f3c3 550a 	ubfx	r5, r3, #20, #11
   85d38:	4616      	mov	r6, r2
   85d3a:	f7ff fd4f 	bl	857dc <_Balloc>
   85d3e:	f3c4 0413 	ubfx	r4, r4, #0, #20
   85d42:	4607      	mov	r7, r0
   85d44:	b10d      	cbz	r5, 85d4a <__d2b+0x1e>
   85d46:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   85d4a:	9401      	str	r4, [sp, #4]
   85d4c:	b306      	cbz	r6, 85d90 <__d2b+0x64>
   85d4e:	a802      	add	r0, sp, #8
   85d50:	f840 6d08 	str.w	r6, [r0, #-8]!
   85d54:	f7ff fdd4 	bl	85900 <__lo0bits>
   85d58:	2800      	cmp	r0, #0
   85d5a:	d130      	bne.n	85dbe <__d2b+0x92>
   85d5c:	e89d 000c 	ldmia.w	sp, {r2, r3}
   85d60:	617a      	str	r2, [r7, #20]
   85d62:	2b00      	cmp	r3, #0
   85d64:	bf0c      	ite	eq
   85d66:	2101      	moveq	r1, #1
   85d68:	2102      	movne	r1, #2
   85d6a:	61bb      	str	r3, [r7, #24]
   85d6c:	6139      	str	r1, [r7, #16]
   85d6e:	b9d5      	cbnz	r5, 85da6 <__d2b+0x7a>
   85d70:	9a08      	ldr	r2, [sp, #32]
   85d72:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   85d76:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   85d7a:	6010      	str	r0, [r2, #0]
   85d7c:	6918      	ldr	r0, [r3, #16]
   85d7e:	f7ff fd9f 	bl	858c0 <__hi0bits>
   85d82:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85d84:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   85d88:	6018      	str	r0, [r3, #0]
   85d8a:	4638      	mov	r0, r7
   85d8c:	b003      	add	sp, #12
   85d8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85d90:	a801      	add	r0, sp, #4
   85d92:	f7ff fdb5 	bl	85900 <__lo0bits>
   85d96:	2201      	movs	r2, #1
   85d98:	9b01      	ldr	r3, [sp, #4]
   85d9a:	4611      	mov	r1, r2
   85d9c:	3020      	adds	r0, #32
   85d9e:	613a      	str	r2, [r7, #16]
   85da0:	617b      	str	r3, [r7, #20]
   85da2:	2d00      	cmp	r5, #0
   85da4:	d0e4      	beq.n	85d70 <__d2b+0x44>
   85da6:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   85daa:	9a08      	ldr	r2, [sp, #32]
   85dac:	4403      	add	r3, r0
   85dae:	6013      	str	r3, [r2, #0]
   85db0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85db2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   85db6:	6018      	str	r0, [r3, #0]
   85db8:	4638      	mov	r0, r7
   85dba:	b003      	add	sp, #12
   85dbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85dbe:	9b01      	ldr	r3, [sp, #4]
   85dc0:	f1c0 0220 	rsb	r2, r0, #32
   85dc4:	9900      	ldr	r1, [sp, #0]
   85dc6:	fa03 f202 	lsl.w	r2, r3, r2
   85dca:	430a      	orrs	r2, r1
   85dcc:	40c3      	lsrs	r3, r0
   85dce:	9301      	str	r3, [sp, #4]
   85dd0:	617a      	str	r2, [r7, #20]
   85dd2:	e7c6      	b.n	85d62 <__d2b+0x36>

00085dd4 <_sbrk_r>:
   85dd4:	b538      	push	{r3, r4, r5, lr}
   85dd6:	2300      	movs	r3, #0
   85dd8:	4c06      	ldr	r4, [pc, #24]	; (85df4 <_sbrk_r+0x20>)
   85dda:	4605      	mov	r5, r0
   85ddc:	4608      	mov	r0, r1
   85dde:	6023      	str	r3, [r4, #0]
   85de0:	f7fc fc1e 	bl	82620 <_sbrk>
   85de4:	1c43      	adds	r3, r0, #1
   85de6:	d000      	beq.n	85dea <_sbrk_r+0x16>
   85de8:	bd38      	pop	{r3, r4, r5, pc}
   85dea:	6823      	ldr	r3, [r4, #0]
   85dec:	2b00      	cmp	r3, #0
   85dee:	d0fb      	beq.n	85de8 <_sbrk_r+0x14>
   85df0:	602b      	str	r3, [r5, #0]
   85df2:	bd38      	pop	{r3, r4, r5, pc}
   85df4:	20070f40 	.word	0x20070f40

00085df8 <__ssprint_r>:
   85df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85dfc:	6893      	ldr	r3, [r2, #8]
   85dfe:	b083      	sub	sp, #12
   85e00:	4690      	mov	r8, r2
   85e02:	2b00      	cmp	r3, #0
   85e04:	d070      	beq.n	85ee8 <__ssprint_r+0xf0>
   85e06:	4682      	mov	sl, r0
   85e08:	460c      	mov	r4, r1
   85e0a:	6817      	ldr	r7, [r2, #0]
   85e0c:	688d      	ldr	r5, [r1, #8]
   85e0e:	6808      	ldr	r0, [r1, #0]
   85e10:	e042      	b.n	85e98 <__ssprint_r+0xa0>
   85e12:	89a3      	ldrh	r3, [r4, #12]
   85e14:	f413 6f90 	tst.w	r3, #1152	; 0x480
   85e18:	d02e      	beq.n	85e78 <__ssprint_r+0x80>
   85e1a:	6965      	ldr	r5, [r4, #20]
   85e1c:	6921      	ldr	r1, [r4, #16]
   85e1e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   85e22:	eba0 0b01 	sub.w	fp, r0, r1
   85e26:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   85e2a:	f10b 0001 	add.w	r0, fp, #1
   85e2e:	106d      	asrs	r5, r5, #1
   85e30:	4430      	add	r0, r6
   85e32:	42a8      	cmp	r0, r5
   85e34:	462a      	mov	r2, r5
   85e36:	bf84      	itt	hi
   85e38:	4605      	movhi	r5, r0
   85e3a:	462a      	movhi	r2, r5
   85e3c:	055b      	lsls	r3, r3, #21
   85e3e:	d538      	bpl.n	85eb2 <__ssprint_r+0xba>
   85e40:	4611      	mov	r1, r2
   85e42:	4650      	mov	r0, sl
   85e44:	f7ff f9d6 	bl	851f4 <_malloc_r>
   85e48:	2800      	cmp	r0, #0
   85e4a:	d03c      	beq.n	85ec6 <__ssprint_r+0xce>
   85e4c:	465a      	mov	r2, fp
   85e4e:	6921      	ldr	r1, [r4, #16]
   85e50:	9001      	str	r0, [sp, #4]
   85e52:	f7fc fe43 	bl	82adc <memcpy>
   85e56:	89a2      	ldrh	r2, [r4, #12]
   85e58:	9b01      	ldr	r3, [sp, #4]
   85e5a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   85e5e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   85e62:	81a2      	strh	r2, [r4, #12]
   85e64:	eba5 020b 	sub.w	r2, r5, fp
   85e68:	eb03 000b 	add.w	r0, r3, fp
   85e6c:	6165      	str	r5, [r4, #20]
   85e6e:	46b3      	mov	fp, r6
   85e70:	4635      	mov	r5, r6
   85e72:	6123      	str	r3, [r4, #16]
   85e74:	6020      	str	r0, [r4, #0]
   85e76:	60a2      	str	r2, [r4, #8]
   85e78:	465a      	mov	r2, fp
   85e7a:	4649      	mov	r1, r9
   85e7c:	f000 fa18 	bl	862b0 <memmove>
   85e80:	f8d8 3008 	ldr.w	r3, [r8, #8]
   85e84:	68a2      	ldr	r2, [r4, #8]
   85e86:	6820      	ldr	r0, [r4, #0]
   85e88:	1b55      	subs	r5, r2, r5
   85e8a:	4458      	add	r0, fp
   85e8c:	1b9e      	subs	r6, r3, r6
   85e8e:	60a5      	str	r5, [r4, #8]
   85e90:	6020      	str	r0, [r4, #0]
   85e92:	f8c8 6008 	str.w	r6, [r8, #8]
   85e96:	b33e      	cbz	r6, 85ee8 <__ssprint_r+0xf0>
   85e98:	687e      	ldr	r6, [r7, #4]
   85e9a:	463b      	mov	r3, r7
   85e9c:	3708      	adds	r7, #8
   85e9e:	2e00      	cmp	r6, #0
   85ea0:	d0fa      	beq.n	85e98 <__ssprint_r+0xa0>
   85ea2:	42ae      	cmp	r6, r5
   85ea4:	f8d3 9000 	ldr.w	r9, [r3]
   85ea8:	46ab      	mov	fp, r5
   85eaa:	d2b2      	bcs.n	85e12 <__ssprint_r+0x1a>
   85eac:	4635      	mov	r5, r6
   85eae:	46b3      	mov	fp, r6
   85eb0:	e7e2      	b.n	85e78 <__ssprint_r+0x80>
   85eb2:	4650      	mov	r0, sl
   85eb4:	f000 fa60 	bl	86378 <_realloc_r>
   85eb8:	4603      	mov	r3, r0
   85eba:	2800      	cmp	r0, #0
   85ebc:	d1d2      	bne.n	85e64 <__ssprint_r+0x6c>
   85ebe:	6921      	ldr	r1, [r4, #16]
   85ec0:	4650      	mov	r0, sl
   85ec2:	f000 f8f9 	bl	860b8 <_free_r>
   85ec6:	230c      	movs	r3, #12
   85ec8:	2200      	movs	r2, #0
   85eca:	f04f 30ff 	mov.w	r0, #4294967295
   85ece:	f8ca 3000 	str.w	r3, [sl]
   85ed2:	89a3      	ldrh	r3, [r4, #12]
   85ed4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   85ed8:	81a3      	strh	r3, [r4, #12]
   85eda:	f8c8 2008 	str.w	r2, [r8, #8]
   85ede:	f8c8 2004 	str.w	r2, [r8, #4]
   85ee2:	b003      	add	sp, #12
   85ee4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85ee8:	2000      	movs	r0, #0
   85eea:	f8c8 0004 	str.w	r0, [r8, #4]
   85eee:	b003      	add	sp, #12
   85ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00085ef4 <__register_exitproc>:
   85ef4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   85ef8:	4d2c      	ldr	r5, [pc, #176]	; (85fac <__register_exitproc+0xb8>)
   85efa:	4606      	mov	r6, r0
   85efc:	6828      	ldr	r0, [r5, #0]
   85efe:	4698      	mov	r8, r3
   85f00:	460f      	mov	r7, r1
   85f02:	4691      	mov	r9, r2
   85f04:	f7ff f972 	bl	851ec <__retarget_lock_acquire_recursive>
   85f08:	4b29      	ldr	r3, [pc, #164]	; (85fb0 <__register_exitproc+0xbc>)
   85f0a:	681c      	ldr	r4, [r3, #0]
   85f0c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   85f10:	2b00      	cmp	r3, #0
   85f12:	d03e      	beq.n	85f92 <__register_exitproc+0x9e>
   85f14:	685a      	ldr	r2, [r3, #4]
   85f16:	2a1f      	cmp	r2, #31
   85f18:	dc1c      	bgt.n	85f54 <__register_exitproc+0x60>
   85f1a:	f102 0e01 	add.w	lr, r2, #1
   85f1e:	b176      	cbz	r6, 85f3e <__register_exitproc+0x4a>
   85f20:	2101      	movs	r1, #1
   85f22:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   85f26:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   85f2a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   85f2e:	4091      	lsls	r1, r2
   85f30:	4308      	orrs	r0, r1
   85f32:	2e02      	cmp	r6, #2
   85f34:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   85f38:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   85f3c:	d023      	beq.n	85f86 <__register_exitproc+0x92>
   85f3e:	3202      	adds	r2, #2
   85f40:	f8c3 e004 	str.w	lr, [r3, #4]
   85f44:	6828      	ldr	r0, [r5, #0]
   85f46:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   85f4a:	f7ff f951 	bl	851f0 <__retarget_lock_release_recursive>
   85f4e:	2000      	movs	r0, #0
   85f50:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   85f54:	4b17      	ldr	r3, [pc, #92]	; (85fb4 <__register_exitproc+0xc0>)
   85f56:	b30b      	cbz	r3, 85f9c <__register_exitproc+0xa8>
   85f58:	f44f 70c8 	mov.w	r0, #400	; 0x190
   85f5c:	f3af 8000 	nop.w
   85f60:	4603      	mov	r3, r0
   85f62:	b1d8      	cbz	r0, 85f9c <__register_exitproc+0xa8>
   85f64:	2000      	movs	r0, #0
   85f66:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   85f6a:	f04f 0e01 	mov.w	lr, #1
   85f6e:	6058      	str	r0, [r3, #4]
   85f70:	6019      	str	r1, [r3, #0]
   85f72:	4602      	mov	r2, r0
   85f74:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   85f78:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   85f7c:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   85f80:	2e00      	cmp	r6, #0
   85f82:	d0dc      	beq.n	85f3e <__register_exitproc+0x4a>
   85f84:	e7cc      	b.n	85f20 <__register_exitproc+0x2c>
   85f86:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   85f8a:	4301      	orrs	r1, r0
   85f8c:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   85f90:	e7d5      	b.n	85f3e <__register_exitproc+0x4a>
   85f92:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   85f96:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   85f9a:	e7bb      	b.n	85f14 <__register_exitproc+0x20>
   85f9c:	6828      	ldr	r0, [r5, #0]
   85f9e:	f7ff f927 	bl	851f0 <__retarget_lock_release_recursive>
   85fa2:	f04f 30ff 	mov.w	r0, #4294967295
   85fa6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   85faa:	bf00      	nop
   85fac:	20070610 	.word	0x20070610
   85fb0:	00087384 	.word	0x00087384
   85fb4:	00000000 	.word	0x00000000

00085fb8 <_calloc_r>:
   85fb8:	b510      	push	{r4, lr}
   85fba:	fb02 f101 	mul.w	r1, r2, r1
   85fbe:	f7ff f919 	bl	851f4 <_malloc_r>
   85fc2:	4604      	mov	r4, r0
   85fc4:	b1d8      	cbz	r0, 85ffe <_calloc_r+0x46>
   85fc6:	f850 2c04 	ldr.w	r2, [r0, #-4]
   85fca:	f022 0203 	bic.w	r2, r2, #3
   85fce:	3a04      	subs	r2, #4
   85fd0:	2a24      	cmp	r2, #36	; 0x24
   85fd2:	d818      	bhi.n	86006 <_calloc_r+0x4e>
   85fd4:	2a13      	cmp	r2, #19
   85fd6:	d914      	bls.n	86002 <_calloc_r+0x4a>
   85fd8:	2300      	movs	r3, #0
   85fda:	2a1b      	cmp	r2, #27
   85fdc:	6003      	str	r3, [r0, #0]
   85fde:	6043      	str	r3, [r0, #4]
   85fe0:	d916      	bls.n	86010 <_calloc_r+0x58>
   85fe2:	2a24      	cmp	r2, #36	; 0x24
   85fe4:	6083      	str	r3, [r0, #8]
   85fe6:	60c3      	str	r3, [r0, #12]
   85fe8:	bf11      	iteee	ne
   85fea:	f100 0210 	addne.w	r2, r0, #16
   85fee:	6103      	streq	r3, [r0, #16]
   85ff0:	6143      	streq	r3, [r0, #20]
   85ff2:	f100 0218 	addeq.w	r2, r0, #24
   85ff6:	2300      	movs	r3, #0
   85ff8:	6013      	str	r3, [r2, #0]
   85ffa:	6053      	str	r3, [r2, #4]
   85ffc:	6093      	str	r3, [r2, #8]
   85ffe:	4620      	mov	r0, r4
   86000:	bd10      	pop	{r4, pc}
   86002:	4602      	mov	r2, r0
   86004:	e7f7      	b.n	85ff6 <_calloc_r+0x3e>
   86006:	2100      	movs	r1, #0
   86008:	f7fc fdde 	bl	82bc8 <memset>
   8600c:	4620      	mov	r0, r4
   8600e:	bd10      	pop	{r4, pc}
   86010:	f100 0208 	add.w	r2, r0, #8
   86014:	e7ef      	b.n	85ff6 <_calloc_r+0x3e>
   86016:	bf00      	nop

00086018 <_malloc_trim_r>:
   86018:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8601a:	460c      	mov	r4, r1
   8601c:	4f23      	ldr	r7, [pc, #140]	; (860ac <_malloc_trim_r+0x94>)
   8601e:	4606      	mov	r6, r0
   86020:	f7ff fbd0 	bl	857c4 <__malloc_lock>
   86024:	68bb      	ldr	r3, [r7, #8]
   86026:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   8602a:	685d      	ldr	r5, [r3, #4]
   8602c:	310f      	adds	r1, #15
   8602e:	f025 0503 	bic.w	r5, r5, #3
   86032:	4429      	add	r1, r5
   86034:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   86038:	f021 010f 	bic.w	r1, r1, #15
   8603c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   86040:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   86044:	db07      	blt.n	86056 <_malloc_trim_r+0x3e>
   86046:	2100      	movs	r1, #0
   86048:	4630      	mov	r0, r6
   8604a:	f7ff fec3 	bl	85dd4 <_sbrk_r>
   8604e:	68bb      	ldr	r3, [r7, #8]
   86050:	442b      	add	r3, r5
   86052:	4298      	cmp	r0, r3
   86054:	d004      	beq.n	86060 <_malloc_trim_r+0x48>
   86056:	4630      	mov	r0, r6
   86058:	f7ff fbba 	bl	857d0 <__malloc_unlock>
   8605c:	2000      	movs	r0, #0
   8605e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   86060:	4261      	negs	r1, r4
   86062:	4630      	mov	r0, r6
   86064:	f7ff feb6 	bl	85dd4 <_sbrk_r>
   86068:	3001      	adds	r0, #1
   8606a:	d00d      	beq.n	86088 <_malloc_trim_r+0x70>
   8606c:	4b10      	ldr	r3, [pc, #64]	; (860b0 <_malloc_trim_r+0x98>)
   8606e:	68ba      	ldr	r2, [r7, #8]
   86070:	6819      	ldr	r1, [r3, #0]
   86072:	1b2d      	subs	r5, r5, r4
   86074:	f045 0501 	orr.w	r5, r5, #1
   86078:	4630      	mov	r0, r6
   8607a:	1b09      	subs	r1, r1, r4
   8607c:	6055      	str	r5, [r2, #4]
   8607e:	6019      	str	r1, [r3, #0]
   86080:	f7ff fba6 	bl	857d0 <__malloc_unlock>
   86084:	2001      	movs	r0, #1
   86086:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   86088:	2100      	movs	r1, #0
   8608a:	4630      	mov	r0, r6
   8608c:	f7ff fea2 	bl	85dd4 <_sbrk_r>
   86090:	68ba      	ldr	r2, [r7, #8]
   86092:	1a83      	subs	r3, r0, r2
   86094:	2b0f      	cmp	r3, #15
   86096:	ddde      	ble.n	86056 <_malloc_trim_r+0x3e>
   86098:	4c06      	ldr	r4, [pc, #24]	; (860b4 <_malloc_trim_r+0x9c>)
   8609a:	4905      	ldr	r1, [pc, #20]	; (860b0 <_malloc_trim_r+0x98>)
   8609c:	6824      	ldr	r4, [r4, #0]
   8609e:	f043 0301 	orr.w	r3, r3, #1
   860a2:	1b00      	subs	r0, r0, r4
   860a4:	6053      	str	r3, [r2, #4]
   860a6:	6008      	str	r0, [r1, #0]
   860a8:	e7d5      	b.n	86056 <_malloc_trim_r+0x3e>
   860aa:	bf00      	nop
   860ac:	20070614 	.word	0x20070614
   860b0:	20070dd8 	.word	0x20070dd8
   860b4:	20070a1c 	.word	0x20070a1c

000860b8 <_free_r>:
   860b8:	2900      	cmp	r1, #0
   860ba:	d044      	beq.n	86146 <_free_r+0x8e>
   860bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   860c0:	460d      	mov	r5, r1
   860c2:	4680      	mov	r8, r0
   860c4:	f7ff fb7e 	bl	857c4 <__malloc_lock>
   860c8:	f855 7c04 	ldr.w	r7, [r5, #-4]
   860cc:	4969      	ldr	r1, [pc, #420]	; (86274 <_free_r+0x1bc>)
   860ce:	f1a5 0408 	sub.w	r4, r5, #8
   860d2:	f027 0301 	bic.w	r3, r7, #1
   860d6:	18e2      	adds	r2, r4, r3
   860d8:	688e      	ldr	r6, [r1, #8]
   860da:	6850      	ldr	r0, [r2, #4]
   860dc:	42b2      	cmp	r2, r6
   860de:	f020 0003 	bic.w	r0, r0, #3
   860e2:	d05e      	beq.n	861a2 <_free_r+0xea>
   860e4:	07fe      	lsls	r6, r7, #31
   860e6:	6050      	str	r0, [r2, #4]
   860e8:	d40b      	bmi.n	86102 <_free_r+0x4a>
   860ea:	f855 7c08 	ldr.w	r7, [r5, #-8]
   860ee:	f101 0e08 	add.w	lr, r1, #8
   860f2:	1be4      	subs	r4, r4, r7
   860f4:	68a5      	ldr	r5, [r4, #8]
   860f6:	443b      	add	r3, r7
   860f8:	4575      	cmp	r5, lr
   860fa:	d06d      	beq.n	861d8 <_free_r+0x120>
   860fc:	68e7      	ldr	r7, [r4, #12]
   860fe:	60ef      	str	r7, [r5, #12]
   86100:	60bd      	str	r5, [r7, #8]
   86102:	1815      	adds	r5, r2, r0
   86104:	686d      	ldr	r5, [r5, #4]
   86106:	07ed      	lsls	r5, r5, #31
   86108:	d53e      	bpl.n	86188 <_free_r+0xd0>
   8610a:	f043 0201 	orr.w	r2, r3, #1
   8610e:	6062      	str	r2, [r4, #4]
   86110:	50e3      	str	r3, [r4, r3]
   86112:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   86116:	d217      	bcs.n	86148 <_free_r+0x90>
   86118:	2201      	movs	r2, #1
   8611a:	08db      	lsrs	r3, r3, #3
   8611c:	1098      	asrs	r0, r3, #2
   8611e:	684d      	ldr	r5, [r1, #4]
   86120:	4413      	add	r3, r2
   86122:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   86126:	4082      	lsls	r2, r0
   86128:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   8612c:	432a      	orrs	r2, r5
   8612e:	3808      	subs	r0, #8
   86130:	60e0      	str	r0, [r4, #12]
   86132:	60a7      	str	r7, [r4, #8]
   86134:	604a      	str	r2, [r1, #4]
   86136:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   8613a:	60fc      	str	r4, [r7, #12]
   8613c:	4640      	mov	r0, r8
   8613e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   86142:	f7ff bb45 	b.w	857d0 <__malloc_unlock>
   86146:	4770      	bx	lr
   86148:	0a5a      	lsrs	r2, r3, #9
   8614a:	2a04      	cmp	r2, #4
   8614c:	d852      	bhi.n	861f4 <_free_r+0x13c>
   8614e:	099a      	lsrs	r2, r3, #6
   86150:	f102 0739 	add.w	r7, r2, #57	; 0x39
   86154:	00ff      	lsls	r7, r7, #3
   86156:	f102 0538 	add.w	r5, r2, #56	; 0x38
   8615a:	19c8      	adds	r0, r1, r7
   8615c:	59ca      	ldr	r2, [r1, r7]
   8615e:	3808      	subs	r0, #8
   86160:	4290      	cmp	r0, r2
   86162:	d04f      	beq.n	86204 <_free_r+0x14c>
   86164:	6851      	ldr	r1, [r2, #4]
   86166:	f021 0103 	bic.w	r1, r1, #3
   8616a:	428b      	cmp	r3, r1
   8616c:	d232      	bcs.n	861d4 <_free_r+0x11c>
   8616e:	6892      	ldr	r2, [r2, #8]
   86170:	4290      	cmp	r0, r2
   86172:	d1f7      	bne.n	86164 <_free_r+0xac>
   86174:	68c3      	ldr	r3, [r0, #12]
   86176:	60a0      	str	r0, [r4, #8]
   86178:	60e3      	str	r3, [r4, #12]
   8617a:	609c      	str	r4, [r3, #8]
   8617c:	60c4      	str	r4, [r0, #12]
   8617e:	4640      	mov	r0, r8
   86180:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   86184:	f7ff bb24 	b.w	857d0 <__malloc_unlock>
   86188:	6895      	ldr	r5, [r2, #8]
   8618a:	4f3b      	ldr	r7, [pc, #236]	; (86278 <_free_r+0x1c0>)
   8618c:	4403      	add	r3, r0
   8618e:	42bd      	cmp	r5, r7
   86190:	d040      	beq.n	86214 <_free_r+0x15c>
   86192:	68d0      	ldr	r0, [r2, #12]
   86194:	f043 0201 	orr.w	r2, r3, #1
   86198:	60e8      	str	r0, [r5, #12]
   8619a:	6085      	str	r5, [r0, #8]
   8619c:	6062      	str	r2, [r4, #4]
   8619e:	50e3      	str	r3, [r4, r3]
   861a0:	e7b7      	b.n	86112 <_free_r+0x5a>
   861a2:	07ff      	lsls	r7, r7, #31
   861a4:	4403      	add	r3, r0
   861a6:	d407      	bmi.n	861b8 <_free_r+0x100>
   861a8:	f855 5c08 	ldr.w	r5, [r5, #-8]
   861ac:	1b64      	subs	r4, r4, r5
   861ae:	68e2      	ldr	r2, [r4, #12]
   861b0:	68a0      	ldr	r0, [r4, #8]
   861b2:	442b      	add	r3, r5
   861b4:	60c2      	str	r2, [r0, #12]
   861b6:	6090      	str	r0, [r2, #8]
   861b8:	4a30      	ldr	r2, [pc, #192]	; (8627c <_free_r+0x1c4>)
   861ba:	f043 0001 	orr.w	r0, r3, #1
   861be:	6812      	ldr	r2, [r2, #0]
   861c0:	6060      	str	r0, [r4, #4]
   861c2:	4293      	cmp	r3, r2
   861c4:	608c      	str	r4, [r1, #8]
   861c6:	d3b9      	bcc.n	8613c <_free_r+0x84>
   861c8:	4b2d      	ldr	r3, [pc, #180]	; (86280 <_free_r+0x1c8>)
   861ca:	4640      	mov	r0, r8
   861cc:	6819      	ldr	r1, [r3, #0]
   861ce:	f7ff ff23 	bl	86018 <_malloc_trim_r>
   861d2:	e7b3      	b.n	8613c <_free_r+0x84>
   861d4:	4610      	mov	r0, r2
   861d6:	e7cd      	b.n	86174 <_free_r+0xbc>
   861d8:	1811      	adds	r1, r2, r0
   861da:	6849      	ldr	r1, [r1, #4]
   861dc:	07c9      	lsls	r1, r1, #31
   861de:	d444      	bmi.n	8626a <_free_r+0x1b2>
   861e0:	6891      	ldr	r1, [r2, #8]
   861e2:	4403      	add	r3, r0
   861e4:	68d2      	ldr	r2, [r2, #12]
   861e6:	f043 0001 	orr.w	r0, r3, #1
   861ea:	60ca      	str	r2, [r1, #12]
   861ec:	6091      	str	r1, [r2, #8]
   861ee:	6060      	str	r0, [r4, #4]
   861f0:	50e3      	str	r3, [r4, r3]
   861f2:	e7a3      	b.n	8613c <_free_r+0x84>
   861f4:	2a14      	cmp	r2, #20
   861f6:	d816      	bhi.n	86226 <_free_r+0x16e>
   861f8:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   861fc:	00ff      	lsls	r7, r7, #3
   861fe:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   86202:	e7aa      	b.n	8615a <_free_r+0xa2>
   86204:	2301      	movs	r3, #1
   86206:	10aa      	asrs	r2, r5, #2
   86208:	684d      	ldr	r5, [r1, #4]
   8620a:	4093      	lsls	r3, r2
   8620c:	432b      	orrs	r3, r5
   8620e:	604b      	str	r3, [r1, #4]
   86210:	4603      	mov	r3, r0
   86212:	e7b0      	b.n	86176 <_free_r+0xbe>
   86214:	f043 0201 	orr.w	r2, r3, #1
   86218:	614c      	str	r4, [r1, #20]
   8621a:	610c      	str	r4, [r1, #16]
   8621c:	60e5      	str	r5, [r4, #12]
   8621e:	60a5      	str	r5, [r4, #8]
   86220:	6062      	str	r2, [r4, #4]
   86222:	50e3      	str	r3, [r4, r3]
   86224:	e78a      	b.n	8613c <_free_r+0x84>
   86226:	2a54      	cmp	r2, #84	; 0x54
   86228:	d806      	bhi.n	86238 <_free_r+0x180>
   8622a:	0b1a      	lsrs	r2, r3, #12
   8622c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   86230:	00ff      	lsls	r7, r7, #3
   86232:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   86236:	e790      	b.n	8615a <_free_r+0xa2>
   86238:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   8623c:	d806      	bhi.n	8624c <_free_r+0x194>
   8623e:	0bda      	lsrs	r2, r3, #15
   86240:	f102 0778 	add.w	r7, r2, #120	; 0x78
   86244:	00ff      	lsls	r7, r7, #3
   86246:	f102 0577 	add.w	r5, r2, #119	; 0x77
   8624a:	e786      	b.n	8615a <_free_r+0xa2>
   8624c:	f240 5054 	movw	r0, #1364	; 0x554
   86250:	4282      	cmp	r2, r0
   86252:	d806      	bhi.n	86262 <_free_r+0x1aa>
   86254:	0c9a      	lsrs	r2, r3, #18
   86256:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   8625a:	00ff      	lsls	r7, r7, #3
   8625c:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   86260:	e77b      	b.n	8615a <_free_r+0xa2>
   86262:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   86266:	257e      	movs	r5, #126	; 0x7e
   86268:	e777      	b.n	8615a <_free_r+0xa2>
   8626a:	f043 0101 	orr.w	r1, r3, #1
   8626e:	6061      	str	r1, [r4, #4]
   86270:	6013      	str	r3, [r2, #0]
   86272:	e763      	b.n	8613c <_free_r+0x84>
   86274:	20070614 	.word	0x20070614
   86278:	2007061c 	.word	0x2007061c
   8627c:	20070a20 	.word	0x20070a20
   86280:	20070e08 	.word	0x20070e08

00086284 <__ascii_mbtowc>:
   86284:	b082      	sub	sp, #8
   86286:	b149      	cbz	r1, 8629c <__ascii_mbtowc+0x18>
   86288:	b15a      	cbz	r2, 862a2 <__ascii_mbtowc+0x1e>
   8628a:	b16b      	cbz	r3, 862a8 <__ascii_mbtowc+0x24>
   8628c:	7813      	ldrb	r3, [r2, #0]
   8628e:	600b      	str	r3, [r1, #0]
   86290:	7812      	ldrb	r2, [r2, #0]
   86292:	1c10      	adds	r0, r2, #0
   86294:	bf18      	it	ne
   86296:	2001      	movne	r0, #1
   86298:	b002      	add	sp, #8
   8629a:	4770      	bx	lr
   8629c:	a901      	add	r1, sp, #4
   8629e:	2a00      	cmp	r2, #0
   862a0:	d1f3      	bne.n	8628a <__ascii_mbtowc+0x6>
   862a2:	4610      	mov	r0, r2
   862a4:	b002      	add	sp, #8
   862a6:	4770      	bx	lr
   862a8:	f06f 0001 	mvn.w	r0, #1
   862ac:	e7f4      	b.n	86298 <__ascii_mbtowc+0x14>
   862ae:	bf00      	nop

000862b0 <memmove>:
   862b0:	4288      	cmp	r0, r1
   862b2:	b5f0      	push	{r4, r5, r6, r7, lr}
   862b4:	d90d      	bls.n	862d2 <memmove+0x22>
   862b6:	188b      	adds	r3, r1, r2
   862b8:	4298      	cmp	r0, r3
   862ba:	d20a      	bcs.n	862d2 <memmove+0x22>
   862bc:	1884      	adds	r4, r0, r2
   862be:	2a00      	cmp	r2, #0
   862c0:	d051      	beq.n	86366 <memmove+0xb6>
   862c2:	4622      	mov	r2, r4
   862c4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   862c8:	4299      	cmp	r1, r3
   862ca:	f802 4d01 	strb.w	r4, [r2, #-1]!
   862ce:	d1f9      	bne.n	862c4 <memmove+0x14>
   862d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   862d2:	2a0f      	cmp	r2, #15
   862d4:	d948      	bls.n	86368 <memmove+0xb8>
   862d6:	ea41 0300 	orr.w	r3, r1, r0
   862da:	079b      	lsls	r3, r3, #30
   862dc:	d146      	bne.n	8636c <memmove+0xbc>
   862de:	4615      	mov	r5, r2
   862e0:	f100 0410 	add.w	r4, r0, #16
   862e4:	f101 0310 	add.w	r3, r1, #16
   862e8:	f853 6c10 	ldr.w	r6, [r3, #-16]
   862ec:	3d10      	subs	r5, #16
   862ee:	f844 6c10 	str.w	r6, [r4, #-16]
   862f2:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   862f6:	2d0f      	cmp	r5, #15
   862f8:	f844 6c0c 	str.w	r6, [r4, #-12]
   862fc:	f853 6c08 	ldr.w	r6, [r3, #-8]
   86300:	f104 0410 	add.w	r4, r4, #16
   86304:	f844 6c18 	str.w	r6, [r4, #-24]
   86308:	f853 6c04 	ldr.w	r6, [r3, #-4]
   8630c:	f103 0310 	add.w	r3, r3, #16
   86310:	f844 6c14 	str.w	r6, [r4, #-20]
   86314:	d8e8      	bhi.n	862e8 <memmove+0x38>
   86316:	f1a2 0310 	sub.w	r3, r2, #16
   8631a:	f023 030f 	bic.w	r3, r3, #15
   8631e:	f002 0e0f 	and.w	lr, r2, #15
   86322:	3310      	adds	r3, #16
   86324:	f1be 0f03 	cmp.w	lr, #3
   86328:	4419      	add	r1, r3
   8632a:	4403      	add	r3, r0
   8632c:	d921      	bls.n	86372 <memmove+0xc2>
   8632e:	460e      	mov	r6, r1
   86330:	4674      	mov	r4, lr
   86332:	1f1d      	subs	r5, r3, #4
   86334:	f856 7b04 	ldr.w	r7, [r6], #4
   86338:	3c04      	subs	r4, #4
   8633a:	2c03      	cmp	r4, #3
   8633c:	f845 7f04 	str.w	r7, [r5, #4]!
   86340:	d8f8      	bhi.n	86334 <memmove+0x84>
   86342:	f1ae 0404 	sub.w	r4, lr, #4
   86346:	f024 0403 	bic.w	r4, r4, #3
   8634a:	3404      	adds	r4, #4
   8634c:	4421      	add	r1, r4
   8634e:	4423      	add	r3, r4
   86350:	f002 0203 	and.w	r2, r2, #3
   86354:	b162      	cbz	r2, 86370 <memmove+0xc0>
   86356:	3b01      	subs	r3, #1
   86358:	440a      	add	r2, r1
   8635a:	f811 4b01 	ldrb.w	r4, [r1], #1
   8635e:	428a      	cmp	r2, r1
   86360:	f803 4f01 	strb.w	r4, [r3, #1]!
   86364:	d1f9      	bne.n	8635a <memmove+0xaa>
   86366:	bdf0      	pop	{r4, r5, r6, r7, pc}
   86368:	4603      	mov	r3, r0
   8636a:	e7f3      	b.n	86354 <memmove+0xa4>
   8636c:	4603      	mov	r3, r0
   8636e:	e7f2      	b.n	86356 <memmove+0xa6>
   86370:	bdf0      	pop	{r4, r5, r6, r7, pc}
   86372:	4672      	mov	r2, lr
   86374:	e7ee      	b.n	86354 <memmove+0xa4>
   86376:	bf00      	nop

00086378 <_realloc_r>:
   86378:	2900      	cmp	r1, #0
   8637a:	f000 8094 	beq.w	864a6 <_realloc_r+0x12e>
   8637e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86382:	460c      	mov	r4, r1
   86384:	4615      	mov	r5, r2
   86386:	b083      	sub	sp, #12
   86388:	4680      	mov	r8, r0
   8638a:	f105 060b 	add.w	r6, r5, #11
   8638e:	f7ff fa19 	bl	857c4 <__malloc_lock>
   86392:	f854 ec04 	ldr.w	lr, [r4, #-4]
   86396:	2e16      	cmp	r6, #22
   86398:	f02e 0703 	bic.w	r7, lr, #3
   8639c:	f1a4 0908 	sub.w	r9, r4, #8
   863a0:	d83c      	bhi.n	8641c <_realloc_r+0xa4>
   863a2:	2210      	movs	r2, #16
   863a4:	4616      	mov	r6, r2
   863a6:	42b5      	cmp	r5, r6
   863a8:	d83d      	bhi.n	86426 <_realloc_r+0xae>
   863aa:	4297      	cmp	r7, r2
   863ac:	da43      	bge.n	86436 <_realloc_r+0xbe>
   863ae:	4bc6      	ldr	r3, [pc, #792]	; (866c8 <_realloc_r+0x350>)
   863b0:	eb09 0007 	add.w	r0, r9, r7
   863b4:	6899      	ldr	r1, [r3, #8]
   863b6:	4288      	cmp	r0, r1
   863b8:	f000 80c3 	beq.w	86542 <_realloc_r+0x1ca>
   863bc:	6843      	ldr	r3, [r0, #4]
   863be:	f023 0101 	bic.w	r1, r3, #1
   863c2:	4401      	add	r1, r0
   863c4:	6849      	ldr	r1, [r1, #4]
   863c6:	07c9      	lsls	r1, r1, #31
   863c8:	d54d      	bpl.n	86466 <_realloc_r+0xee>
   863ca:	f01e 0f01 	tst.w	lr, #1
   863ce:	f000 809b 	beq.w	86508 <_realloc_r+0x190>
   863d2:	4629      	mov	r1, r5
   863d4:	4640      	mov	r0, r8
   863d6:	f7fe ff0d 	bl	851f4 <_malloc_r>
   863da:	4605      	mov	r5, r0
   863dc:	2800      	cmp	r0, #0
   863de:	d03b      	beq.n	86458 <_realloc_r+0xe0>
   863e0:	f854 3c04 	ldr.w	r3, [r4, #-4]
   863e4:	f1a0 0208 	sub.w	r2, r0, #8
   863e8:	f023 0301 	bic.w	r3, r3, #1
   863ec:	444b      	add	r3, r9
   863ee:	429a      	cmp	r2, r3
   863f0:	f000 812b 	beq.w	8664a <_realloc_r+0x2d2>
   863f4:	1f3a      	subs	r2, r7, #4
   863f6:	2a24      	cmp	r2, #36	; 0x24
   863f8:	f200 8118 	bhi.w	8662c <_realloc_r+0x2b4>
   863fc:	2a13      	cmp	r2, #19
   863fe:	f200 80eb 	bhi.w	865d8 <_realloc_r+0x260>
   86402:	4603      	mov	r3, r0
   86404:	4622      	mov	r2, r4
   86406:	6811      	ldr	r1, [r2, #0]
   86408:	6019      	str	r1, [r3, #0]
   8640a:	6851      	ldr	r1, [r2, #4]
   8640c:	6059      	str	r1, [r3, #4]
   8640e:	6892      	ldr	r2, [r2, #8]
   86410:	609a      	str	r2, [r3, #8]
   86412:	4621      	mov	r1, r4
   86414:	4640      	mov	r0, r8
   86416:	f7ff fe4f 	bl	860b8 <_free_r>
   8641a:	e01d      	b.n	86458 <_realloc_r+0xe0>
   8641c:	f026 0607 	bic.w	r6, r6, #7
   86420:	2e00      	cmp	r6, #0
   86422:	4632      	mov	r2, r6
   86424:	dabf      	bge.n	863a6 <_realloc_r+0x2e>
   86426:	2500      	movs	r5, #0
   86428:	230c      	movs	r3, #12
   8642a:	4628      	mov	r0, r5
   8642c:	f8c8 3000 	str.w	r3, [r8]
   86430:	b003      	add	sp, #12
   86432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86436:	4625      	mov	r5, r4
   86438:	1bbb      	subs	r3, r7, r6
   8643a:	2b0f      	cmp	r3, #15
   8643c:	f8d9 2004 	ldr.w	r2, [r9, #4]
   86440:	d81d      	bhi.n	8647e <_realloc_r+0x106>
   86442:	f002 0201 	and.w	r2, r2, #1
   86446:	433a      	orrs	r2, r7
   86448:	eb09 0107 	add.w	r1, r9, r7
   8644c:	f8c9 2004 	str.w	r2, [r9, #4]
   86450:	684b      	ldr	r3, [r1, #4]
   86452:	f043 0301 	orr.w	r3, r3, #1
   86456:	604b      	str	r3, [r1, #4]
   86458:	4640      	mov	r0, r8
   8645a:	f7ff f9b9 	bl	857d0 <__malloc_unlock>
   8645e:	4628      	mov	r0, r5
   86460:	b003      	add	sp, #12
   86462:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86466:	f023 0303 	bic.w	r3, r3, #3
   8646a:	18f9      	adds	r1, r7, r3
   8646c:	4291      	cmp	r1, r2
   8646e:	db1d      	blt.n	864ac <_realloc_r+0x134>
   86470:	68c3      	ldr	r3, [r0, #12]
   86472:	6882      	ldr	r2, [r0, #8]
   86474:	4625      	mov	r5, r4
   86476:	60d3      	str	r3, [r2, #12]
   86478:	460f      	mov	r7, r1
   8647a:	609a      	str	r2, [r3, #8]
   8647c:	e7dc      	b.n	86438 <_realloc_r+0xc0>
   8647e:	f002 0201 	and.w	r2, r2, #1
   86482:	eb09 0106 	add.w	r1, r9, r6
   86486:	f043 0301 	orr.w	r3, r3, #1
   8648a:	4332      	orrs	r2, r6
   8648c:	f8c9 2004 	str.w	r2, [r9, #4]
   86490:	444f      	add	r7, r9
   86492:	604b      	str	r3, [r1, #4]
   86494:	687b      	ldr	r3, [r7, #4]
   86496:	3108      	adds	r1, #8
   86498:	f043 0301 	orr.w	r3, r3, #1
   8649c:	607b      	str	r3, [r7, #4]
   8649e:	4640      	mov	r0, r8
   864a0:	f7ff fe0a 	bl	860b8 <_free_r>
   864a4:	e7d8      	b.n	86458 <_realloc_r+0xe0>
   864a6:	4611      	mov	r1, r2
   864a8:	f7fe bea4 	b.w	851f4 <_malloc_r>
   864ac:	f01e 0f01 	tst.w	lr, #1
   864b0:	d18f      	bne.n	863d2 <_realloc_r+0x5a>
   864b2:	f854 1c08 	ldr.w	r1, [r4, #-8]
   864b6:	eba9 0a01 	sub.w	sl, r9, r1
   864ba:	f8da 1004 	ldr.w	r1, [sl, #4]
   864be:	f021 0103 	bic.w	r1, r1, #3
   864c2:	440b      	add	r3, r1
   864c4:	443b      	add	r3, r7
   864c6:	4293      	cmp	r3, r2
   864c8:	db26      	blt.n	86518 <_realloc_r+0x1a0>
   864ca:	4655      	mov	r5, sl
   864cc:	68c1      	ldr	r1, [r0, #12]
   864ce:	6880      	ldr	r0, [r0, #8]
   864d0:	1f3a      	subs	r2, r7, #4
   864d2:	60c1      	str	r1, [r0, #12]
   864d4:	6088      	str	r0, [r1, #8]
   864d6:	f855 0f08 	ldr.w	r0, [r5, #8]!
   864da:	f8da 100c 	ldr.w	r1, [sl, #12]
   864de:	2a24      	cmp	r2, #36	; 0x24
   864e0:	60c1      	str	r1, [r0, #12]
   864e2:	6088      	str	r0, [r1, #8]
   864e4:	d826      	bhi.n	86534 <_realloc_r+0x1bc>
   864e6:	2a13      	cmp	r2, #19
   864e8:	f240 8081 	bls.w	865ee <_realloc_r+0x276>
   864ec:	6821      	ldr	r1, [r4, #0]
   864ee:	2a1b      	cmp	r2, #27
   864f0:	f8ca 1008 	str.w	r1, [sl, #8]
   864f4:	6861      	ldr	r1, [r4, #4]
   864f6:	f8ca 100c 	str.w	r1, [sl, #12]
   864fa:	f200 80ad 	bhi.w	86658 <_realloc_r+0x2e0>
   864fe:	f104 0008 	add.w	r0, r4, #8
   86502:	f10a 0210 	add.w	r2, sl, #16
   86506:	e074      	b.n	865f2 <_realloc_r+0x27a>
   86508:	f854 3c08 	ldr.w	r3, [r4, #-8]
   8650c:	eba9 0a03 	sub.w	sl, r9, r3
   86510:	f8da 1004 	ldr.w	r1, [sl, #4]
   86514:	f021 0103 	bic.w	r1, r1, #3
   86518:	187b      	adds	r3, r7, r1
   8651a:	4293      	cmp	r3, r2
   8651c:	f6ff af59 	blt.w	863d2 <_realloc_r+0x5a>
   86520:	4655      	mov	r5, sl
   86522:	f8da 100c 	ldr.w	r1, [sl, #12]
   86526:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8652a:	1f3a      	subs	r2, r7, #4
   8652c:	2a24      	cmp	r2, #36	; 0x24
   8652e:	60c1      	str	r1, [r0, #12]
   86530:	6088      	str	r0, [r1, #8]
   86532:	d9d8      	bls.n	864e6 <_realloc_r+0x16e>
   86534:	4621      	mov	r1, r4
   86536:	4628      	mov	r0, r5
   86538:	461f      	mov	r7, r3
   8653a:	46d1      	mov	r9, sl
   8653c:	f7ff feb8 	bl	862b0 <memmove>
   86540:	e77a      	b.n	86438 <_realloc_r+0xc0>
   86542:	6841      	ldr	r1, [r0, #4]
   86544:	f106 0010 	add.w	r0, r6, #16
   86548:	f021 0b03 	bic.w	fp, r1, #3
   8654c:	44bb      	add	fp, r7
   8654e:	4583      	cmp	fp, r0
   86550:	da58      	bge.n	86604 <_realloc_r+0x28c>
   86552:	f01e 0f01 	tst.w	lr, #1
   86556:	f47f af3c 	bne.w	863d2 <_realloc_r+0x5a>
   8655a:	f854 1c08 	ldr.w	r1, [r4, #-8]
   8655e:	eba9 0a01 	sub.w	sl, r9, r1
   86562:	f8da 1004 	ldr.w	r1, [sl, #4]
   86566:	f021 0103 	bic.w	r1, r1, #3
   8656a:	448b      	add	fp, r1
   8656c:	4558      	cmp	r0, fp
   8656e:	dcd3      	bgt.n	86518 <_realloc_r+0x1a0>
   86570:	4655      	mov	r5, sl
   86572:	f8da 100c 	ldr.w	r1, [sl, #12]
   86576:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8657a:	1f3a      	subs	r2, r7, #4
   8657c:	2a24      	cmp	r2, #36	; 0x24
   8657e:	60c1      	str	r1, [r0, #12]
   86580:	6088      	str	r0, [r1, #8]
   86582:	f200 808d 	bhi.w	866a0 <_realloc_r+0x328>
   86586:	2a13      	cmp	r2, #19
   86588:	f240 8087 	bls.w	8669a <_realloc_r+0x322>
   8658c:	6821      	ldr	r1, [r4, #0]
   8658e:	2a1b      	cmp	r2, #27
   86590:	f8ca 1008 	str.w	r1, [sl, #8]
   86594:	6861      	ldr	r1, [r4, #4]
   86596:	f8ca 100c 	str.w	r1, [sl, #12]
   8659a:	f200 8088 	bhi.w	866ae <_realloc_r+0x336>
   8659e:	f104 0108 	add.w	r1, r4, #8
   865a2:	f10a 0210 	add.w	r2, sl, #16
   865a6:	6808      	ldr	r0, [r1, #0]
   865a8:	6010      	str	r0, [r2, #0]
   865aa:	6848      	ldr	r0, [r1, #4]
   865ac:	6050      	str	r0, [r2, #4]
   865ae:	6889      	ldr	r1, [r1, #8]
   865b0:	6091      	str	r1, [r2, #8]
   865b2:	ebab 0206 	sub.w	r2, fp, r6
   865b6:	eb0a 0106 	add.w	r1, sl, r6
   865ba:	f042 0201 	orr.w	r2, r2, #1
   865be:	6099      	str	r1, [r3, #8]
   865c0:	604a      	str	r2, [r1, #4]
   865c2:	f8da 3004 	ldr.w	r3, [sl, #4]
   865c6:	4640      	mov	r0, r8
   865c8:	f003 0301 	and.w	r3, r3, #1
   865cc:	431e      	orrs	r6, r3
   865ce:	f8ca 6004 	str.w	r6, [sl, #4]
   865d2:	f7ff f8fd 	bl	857d0 <__malloc_unlock>
   865d6:	e742      	b.n	8645e <_realloc_r+0xe6>
   865d8:	6823      	ldr	r3, [r4, #0]
   865da:	2a1b      	cmp	r2, #27
   865dc:	6003      	str	r3, [r0, #0]
   865de:	6863      	ldr	r3, [r4, #4]
   865e0:	6043      	str	r3, [r0, #4]
   865e2:	d827      	bhi.n	86634 <_realloc_r+0x2bc>
   865e4:	f100 0308 	add.w	r3, r0, #8
   865e8:	f104 0208 	add.w	r2, r4, #8
   865ec:	e70b      	b.n	86406 <_realloc_r+0x8e>
   865ee:	4620      	mov	r0, r4
   865f0:	462a      	mov	r2, r5
   865f2:	6801      	ldr	r1, [r0, #0]
   865f4:	461f      	mov	r7, r3
   865f6:	6011      	str	r1, [r2, #0]
   865f8:	6841      	ldr	r1, [r0, #4]
   865fa:	46d1      	mov	r9, sl
   865fc:	6051      	str	r1, [r2, #4]
   865fe:	6883      	ldr	r3, [r0, #8]
   86600:	6093      	str	r3, [r2, #8]
   86602:	e719      	b.n	86438 <_realloc_r+0xc0>
   86604:	ebab 0b06 	sub.w	fp, fp, r6
   86608:	eb09 0106 	add.w	r1, r9, r6
   8660c:	f04b 0201 	orr.w	r2, fp, #1
   86610:	6099      	str	r1, [r3, #8]
   86612:	604a      	str	r2, [r1, #4]
   86614:	f854 3c04 	ldr.w	r3, [r4, #-4]
   86618:	4640      	mov	r0, r8
   8661a:	f003 0301 	and.w	r3, r3, #1
   8661e:	431e      	orrs	r6, r3
   86620:	f844 6c04 	str.w	r6, [r4, #-4]
   86624:	f7ff f8d4 	bl	857d0 <__malloc_unlock>
   86628:	4625      	mov	r5, r4
   8662a:	e718      	b.n	8645e <_realloc_r+0xe6>
   8662c:	4621      	mov	r1, r4
   8662e:	f7ff fe3f 	bl	862b0 <memmove>
   86632:	e6ee      	b.n	86412 <_realloc_r+0x9a>
   86634:	68a3      	ldr	r3, [r4, #8]
   86636:	2a24      	cmp	r2, #36	; 0x24
   86638:	6083      	str	r3, [r0, #8]
   8663a:	68e3      	ldr	r3, [r4, #12]
   8663c:	60c3      	str	r3, [r0, #12]
   8663e:	d018      	beq.n	86672 <_realloc_r+0x2fa>
   86640:	f100 0310 	add.w	r3, r0, #16
   86644:	f104 0210 	add.w	r2, r4, #16
   86648:	e6dd      	b.n	86406 <_realloc_r+0x8e>
   8664a:	f850 3c04 	ldr.w	r3, [r0, #-4]
   8664e:	4625      	mov	r5, r4
   86650:	f023 0303 	bic.w	r3, r3, #3
   86654:	441f      	add	r7, r3
   86656:	e6ef      	b.n	86438 <_realloc_r+0xc0>
   86658:	68a1      	ldr	r1, [r4, #8]
   8665a:	2a24      	cmp	r2, #36	; 0x24
   8665c:	f8ca 1010 	str.w	r1, [sl, #16]
   86660:	68e1      	ldr	r1, [r4, #12]
   86662:	f8ca 1014 	str.w	r1, [sl, #20]
   86666:	d00d      	beq.n	86684 <_realloc_r+0x30c>
   86668:	f104 0010 	add.w	r0, r4, #16
   8666c:	f10a 0218 	add.w	r2, sl, #24
   86670:	e7bf      	b.n	865f2 <_realloc_r+0x27a>
   86672:	6922      	ldr	r2, [r4, #16]
   86674:	f100 0318 	add.w	r3, r0, #24
   86678:	6102      	str	r2, [r0, #16]
   8667a:	6961      	ldr	r1, [r4, #20]
   8667c:	f104 0218 	add.w	r2, r4, #24
   86680:	6141      	str	r1, [r0, #20]
   86682:	e6c0      	b.n	86406 <_realloc_r+0x8e>
   86684:	6922      	ldr	r2, [r4, #16]
   86686:	f104 0018 	add.w	r0, r4, #24
   8668a:	f8ca 2018 	str.w	r2, [sl, #24]
   8668e:	6961      	ldr	r1, [r4, #20]
   86690:	f10a 0220 	add.w	r2, sl, #32
   86694:	f8ca 101c 	str.w	r1, [sl, #28]
   86698:	e7ab      	b.n	865f2 <_realloc_r+0x27a>
   8669a:	4621      	mov	r1, r4
   8669c:	462a      	mov	r2, r5
   8669e:	e782      	b.n	865a6 <_realloc_r+0x22e>
   866a0:	4621      	mov	r1, r4
   866a2:	4628      	mov	r0, r5
   866a4:	9301      	str	r3, [sp, #4]
   866a6:	f7ff fe03 	bl	862b0 <memmove>
   866aa:	9b01      	ldr	r3, [sp, #4]
   866ac:	e781      	b.n	865b2 <_realloc_r+0x23a>
   866ae:	68a1      	ldr	r1, [r4, #8]
   866b0:	2a24      	cmp	r2, #36	; 0x24
   866b2:	f8ca 1010 	str.w	r1, [sl, #16]
   866b6:	68e1      	ldr	r1, [r4, #12]
   866b8:	f8ca 1014 	str.w	r1, [sl, #20]
   866bc:	d006      	beq.n	866cc <_realloc_r+0x354>
   866be:	f104 0110 	add.w	r1, r4, #16
   866c2:	f10a 0218 	add.w	r2, sl, #24
   866c6:	e76e      	b.n	865a6 <_realloc_r+0x22e>
   866c8:	20070614 	.word	0x20070614
   866cc:	6922      	ldr	r2, [r4, #16]
   866ce:	f104 0118 	add.w	r1, r4, #24
   866d2:	f8ca 2018 	str.w	r2, [sl, #24]
   866d6:	6960      	ldr	r0, [r4, #20]
   866d8:	f10a 0220 	add.w	r2, sl, #32
   866dc:	f8ca 001c 	str.w	r0, [sl, #28]
   866e0:	e761      	b.n	865a6 <_realloc_r+0x22e>
   866e2:	bf00      	nop

000866e4 <__ascii_wctomb>:
   866e4:	b119      	cbz	r1, 866ee <__ascii_wctomb+0xa>
   866e6:	2aff      	cmp	r2, #255	; 0xff
   866e8:	d803      	bhi.n	866f2 <__ascii_wctomb+0xe>
   866ea:	700a      	strb	r2, [r1, #0]
   866ec:	2101      	movs	r1, #1
   866ee:	4608      	mov	r0, r1
   866f0:	4770      	bx	lr
   866f2:	238a      	movs	r3, #138	; 0x8a
   866f4:	f04f 31ff 	mov.w	r1, #4294967295
   866f8:	6003      	str	r3, [r0, #0]
   866fa:	e7f8      	b.n	866ee <__ascii_wctomb+0xa>

000866fc <__aeabi_drsub>:
   866fc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   86700:	e002      	b.n	86708 <__adddf3>
   86702:	bf00      	nop

00086704 <__aeabi_dsub>:
   86704:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00086708 <__adddf3>:
   86708:	b530      	push	{r4, r5, lr}
   8670a:	ea4f 0441 	mov.w	r4, r1, lsl #1
   8670e:	ea4f 0543 	mov.w	r5, r3, lsl #1
   86712:	ea94 0f05 	teq	r4, r5
   86716:	bf08      	it	eq
   86718:	ea90 0f02 	teqeq	r0, r2
   8671c:	bf1f      	itttt	ne
   8671e:	ea54 0c00 	orrsne.w	ip, r4, r0
   86722:	ea55 0c02 	orrsne.w	ip, r5, r2
   86726:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   8672a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8672e:	f000 80e2 	beq.w	868f6 <__adddf3+0x1ee>
   86732:	ea4f 5454 	mov.w	r4, r4, lsr #21
   86736:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   8673a:	bfb8      	it	lt
   8673c:	426d      	neglt	r5, r5
   8673e:	dd0c      	ble.n	8675a <__adddf3+0x52>
   86740:	442c      	add	r4, r5
   86742:	ea80 0202 	eor.w	r2, r0, r2
   86746:	ea81 0303 	eor.w	r3, r1, r3
   8674a:	ea82 0000 	eor.w	r0, r2, r0
   8674e:	ea83 0101 	eor.w	r1, r3, r1
   86752:	ea80 0202 	eor.w	r2, r0, r2
   86756:	ea81 0303 	eor.w	r3, r1, r3
   8675a:	2d36      	cmp	r5, #54	; 0x36
   8675c:	bf88      	it	hi
   8675e:	bd30      	pophi	{r4, r5, pc}
   86760:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   86764:	ea4f 3101 	mov.w	r1, r1, lsl #12
   86768:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   8676c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   86770:	d002      	beq.n	86778 <__adddf3+0x70>
   86772:	4240      	negs	r0, r0
   86774:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   86778:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   8677c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   86780:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   86784:	d002      	beq.n	8678c <__adddf3+0x84>
   86786:	4252      	negs	r2, r2
   86788:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   8678c:	ea94 0f05 	teq	r4, r5
   86790:	f000 80a7 	beq.w	868e2 <__adddf3+0x1da>
   86794:	f1a4 0401 	sub.w	r4, r4, #1
   86798:	f1d5 0e20 	rsbs	lr, r5, #32
   8679c:	db0d      	blt.n	867ba <__adddf3+0xb2>
   8679e:	fa02 fc0e 	lsl.w	ip, r2, lr
   867a2:	fa22 f205 	lsr.w	r2, r2, r5
   867a6:	1880      	adds	r0, r0, r2
   867a8:	f141 0100 	adc.w	r1, r1, #0
   867ac:	fa03 f20e 	lsl.w	r2, r3, lr
   867b0:	1880      	adds	r0, r0, r2
   867b2:	fa43 f305 	asr.w	r3, r3, r5
   867b6:	4159      	adcs	r1, r3
   867b8:	e00e      	b.n	867d8 <__adddf3+0xd0>
   867ba:	f1a5 0520 	sub.w	r5, r5, #32
   867be:	f10e 0e20 	add.w	lr, lr, #32
   867c2:	2a01      	cmp	r2, #1
   867c4:	fa03 fc0e 	lsl.w	ip, r3, lr
   867c8:	bf28      	it	cs
   867ca:	f04c 0c02 	orrcs.w	ip, ip, #2
   867ce:	fa43 f305 	asr.w	r3, r3, r5
   867d2:	18c0      	adds	r0, r0, r3
   867d4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   867d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   867dc:	d507      	bpl.n	867ee <__adddf3+0xe6>
   867de:	f04f 0e00 	mov.w	lr, #0
   867e2:	f1dc 0c00 	rsbs	ip, ip, #0
   867e6:	eb7e 0000 	sbcs.w	r0, lr, r0
   867ea:	eb6e 0101 	sbc.w	r1, lr, r1
   867ee:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   867f2:	d31b      	bcc.n	8682c <__adddf3+0x124>
   867f4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   867f8:	d30c      	bcc.n	86814 <__adddf3+0x10c>
   867fa:	0849      	lsrs	r1, r1, #1
   867fc:	ea5f 0030 	movs.w	r0, r0, rrx
   86800:	ea4f 0c3c 	mov.w	ip, ip, rrx
   86804:	f104 0401 	add.w	r4, r4, #1
   86808:	ea4f 5244 	mov.w	r2, r4, lsl #21
   8680c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   86810:	f080 809a 	bcs.w	86948 <__adddf3+0x240>
   86814:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   86818:	bf08      	it	eq
   8681a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8681e:	f150 0000 	adcs.w	r0, r0, #0
   86822:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   86826:	ea41 0105 	orr.w	r1, r1, r5
   8682a:	bd30      	pop	{r4, r5, pc}
   8682c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   86830:	4140      	adcs	r0, r0
   86832:	eb41 0101 	adc.w	r1, r1, r1
   86836:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8683a:	f1a4 0401 	sub.w	r4, r4, #1
   8683e:	d1e9      	bne.n	86814 <__adddf3+0x10c>
   86840:	f091 0f00 	teq	r1, #0
   86844:	bf04      	itt	eq
   86846:	4601      	moveq	r1, r0
   86848:	2000      	moveq	r0, #0
   8684a:	fab1 f381 	clz	r3, r1
   8684e:	bf08      	it	eq
   86850:	3320      	addeq	r3, #32
   86852:	f1a3 030b 	sub.w	r3, r3, #11
   86856:	f1b3 0220 	subs.w	r2, r3, #32
   8685a:	da0c      	bge.n	86876 <__adddf3+0x16e>
   8685c:	320c      	adds	r2, #12
   8685e:	dd08      	ble.n	86872 <__adddf3+0x16a>
   86860:	f102 0c14 	add.w	ip, r2, #20
   86864:	f1c2 020c 	rsb	r2, r2, #12
   86868:	fa01 f00c 	lsl.w	r0, r1, ip
   8686c:	fa21 f102 	lsr.w	r1, r1, r2
   86870:	e00c      	b.n	8688c <__adddf3+0x184>
   86872:	f102 0214 	add.w	r2, r2, #20
   86876:	bfd8      	it	le
   86878:	f1c2 0c20 	rsble	ip, r2, #32
   8687c:	fa01 f102 	lsl.w	r1, r1, r2
   86880:	fa20 fc0c 	lsr.w	ip, r0, ip
   86884:	bfdc      	itt	le
   86886:	ea41 010c 	orrle.w	r1, r1, ip
   8688a:	4090      	lslle	r0, r2
   8688c:	1ae4      	subs	r4, r4, r3
   8688e:	bfa2      	ittt	ge
   86890:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   86894:	4329      	orrge	r1, r5
   86896:	bd30      	popge	{r4, r5, pc}
   86898:	ea6f 0404 	mvn.w	r4, r4
   8689c:	3c1f      	subs	r4, #31
   8689e:	da1c      	bge.n	868da <__adddf3+0x1d2>
   868a0:	340c      	adds	r4, #12
   868a2:	dc0e      	bgt.n	868c2 <__adddf3+0x1ba>
   868a4:	f104 0414 	add.w	r4, r4, #20
   868a8:	f1c4 0220 	rsb	r2, r4, #32
   868ac:	fa20 f004 	lsr.w	r0, r0, r4
   868b0:	fa01 f302 	lsl.w	r3, r1, r2
   868b4:	ea40 0003 	orr.w	r0, r0, r3
   868b8:	fa21 f304 	lsr.w	r3, r1, r4
   868bc:	ea45 0103 	orr.w	r1, r5, r3
   868c0:	bd30      	pop	{r4, r5, pc}
   868c2:	f1c4 040c 	rsb	r4, r4, #12
   868c6:	f1c4 0220 	rsb	r2, r4, #32
   868ca:	fa20 f002 	lsr.w	r0, r0, r2
   868ce:	fa01 f304 	lsl.w	r3, r1, r4
   868d2:	ea40 0003 	orr.w	r0, r0, r3
   868d6:	4629      	mov	r1, r5
   868d8:	bd30      	pop	{r4, r5, pc}
   868da:	fa21 f004 	lsr.w	r0, r1, r4
   868de:	4629      	mov	r1, r5
   868e0:	bd30      	pop	{r4, r5, pc}
   868e2:	f094 0f00 	teq	r4, #0
   868e6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   868ea:	bf06      	itte	eq
   868ec:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   868f0:	3401      	addeq	r4, #1
   868f2:	3d01      	subne	r5, #1
   868f4:	e74e      	b.n	86794 <__adddf3+0x8c>
   868f6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   868fa:	bf18      	it	ne
   868fc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   86900:	d029      	beq.n	86956 <__adddf3+0x24e>
   86902:	ea94 0f05 	teq	r4, r5
   86906:	bf08      	it	eq
   86908:	ea90 0f02 	teqeq	r0, r2
   8690c:	d005      	beq.n	8691a <__adddf3+0x212>
   8690e:	ea54 0c00 	orrs.w	ip, r4, r0
   86912:	bf04      	itt	eq
   86914:	4619      	moveq	r1, r3
   86916:	4610      	moveq	r0, r2
   86918:	bd30      	pop	{r4, r5, pc}
   8691a:	ea91 0f03 	teq	r1, r3
   8691e:	bf1e      	ittt	ne
   86920:	2100      	movne	r1, #0
   86922:	2000      	movne	r0, #0
   86924:	bd30      	popne	{r4, r5, pc}
   86926:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   8692a:	d105      	bne.n	86938 <__adddf3+0x230>
   8692c:	0040      	lsls	r0, r0, #1
   8692e:	4149      	adcs	r1, r1
   86930:	bf28      	it	cs
   86932:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   86936:	bd30      	pop	{r4, r5, pc}
   86938:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   8693c:	bf3c      	itt	cc
   8693e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   86942:	bd30      	popcc	{r4, r5, pc}
   86944:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   86948:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   8694c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   86950:	f04f 0000 	mov.w	r0, #0
   86954:	bd30      	pop	{r4, r5, pc}
   86956:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8695a:	bf1a      	itte	ne
   8695c:	4619      	movne	r1, r3
   8695e:	4610      	movne	r0, r2
   86960:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   86964:	bf1c      	itt	ne
   86966:	460b      	movne	r3, r1
   86968:	4602      	movne	r2, r0
   8696a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8696e:	bf06      	itte	eq
   86970:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   86974:	ea91 0f03 	teqeq	r1, r3
   86978:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   8697c:	bd30      	pop	{r4, r5, pc}
   8697e:	bf00      	nop

00086980 <__aeabi_ui2d>:
   86980:	f090 0f00 	teq	r0, #0
   86984:	bf04      	itt	eq
   86986:	2100      	moveq	r1, #0
   86988:	4770      	bxeq	lr
   8698a:	b530      	push	{r4, r5, lr}
   8698c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   86990:	f104 0432 	add.w	r4, r4, #50	; 0x32
   86994:	f04f 0500 	mov.w	r5, #0
   86998:	f04f 0100 	mov.w	r1, #0
   8699c:	e750      	b.n	86840 <__adddf3+0x138>
   8699e:	bf00      	nop

000869a0 <__aeabi_i2d>:
   869a0:	f090 0f00 	teq	r0, #0
   869a4:	bf04      	itt	eq
   869a6:	2100      	moveq	r1, #0
   869a8:	4770      	bxeq	lr
   869aa:	b530      	push	{r4, r5, lr}
   869ac:	f44f 6480 	mov.w	r4, #1024	; 0x400
   869b0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   869b4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   869b8:	bf48      	it	mi
   869ba:	4240      	negmi	r0, r0
   869bc:	f04f 0100 	mov.w	r1, #0
   869c0:	e73e      	b.n	86840 <__adddf3+0x138>
   869c2:	bf00      	nop

000869c4 <__aeabi_f2d>:
   869c4:	0042      	lsls	r2, r0, #1
   869c6:	ea4f 01e2 	mov.w	r1, r2, asr #3
   869ca:	ea4f 0131 	mov.w	r1, r1, rrx
   869ce:	ea4f 7002 	mov.w	r0, r2, lsl #28
   869d2:	bf1f      	itttt	ne
   869d4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   869d8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   869dc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   869e0:	4770      	bxne	lr
   869e2:	f092 0f00 	teq	r2, #0
   869e6:	bf14      	ite	ne
   869e8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   869ec:	4770      	bxeq	lr
   869ee:	b530      	push	{r4, r5, lr}
   869f0:	f44f 7460 	mov.w	r4, #896	; 0x380
   869f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   869f8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   869fc:	e720      	b.n	86840 <__adddf3+0x138>
   869fe:	bf00      	nop

00086a00 <__aeabi_ul2d>:
   86a00:	ea50 0201 	orrs.w	r2, r0, r1
   86a04:	bf08      	it	eq
   86a06:	4770      	bxeq	lr
   86a08:	b530      	push	{r4, r5, lr}
   86a0a:	f04f 0500 	mov.w	r5, #0
   86a0e:	e00a      	b.n	86a26 <__aeabi_l2d+0x16>

00086a10 <__aeabi_l2d>:
   86a10:	ea50 0201 	orrs.w	r2, r0, r1
   86a14:	bf08      	it	eq
   86a16:	4770      	bxeq	lr
   86a18:	b530      	push	{r4, r5, lr}
   86a1a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   86a1e:	d502      	bpl.n	86a26 <__aeabi_l2d+0x16>
   86a20:	4240      	negs	r0, r0
   86a22:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   86a26:	f44f 6480 	mov.w	r4, #1024	; 0x400
   86a2a:	f104 0432 	add.w	r4, r4, #50	; 0x32
   86a2e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   86a32:	f43f aedc 	beq.w	867ee <__adddf3+0xe6>
   86a36:	f04f 0203 	mov.w	r2, #3
   86a3a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   86a3e:	bf18      	it	ne
   86a40:	3203      	addne	r2, #3
   86a42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   86a46:	bf18      	it	ne
   86a48:	3203      	addne	r2, #3
   86a4a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   86a4e:	f1c2 0320 	rsb	r3, r2, #32
   86a52:	fa00 fc03 	lsl.w	ip, r0, r3
   86a56:	fa20 f002 	lsr.w	r0, r0, r2
   86a5a:	fa01 fe03 	lsl.w	lr, r1, r3
   86a5e:	ea40 000e 	orr.w	r0, r0, lr
   86a62:	fa21 f102 	lsr.w	r1, r1, r2
   86a66:	4414      	add	r4, r2
   86a68:	e6c1      	b.n	867ee <__adddf3+0xe6>
   86a6a:	bf00      	nop

00086a6c <__aeabi_dmul>:
   86a6c:	b570      	push	{r4, r5, r6, lr}
   86a6e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   86a72:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   86a76:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   86a7a:	bf1d      	ittte	ne
   86a7c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   86a80:	ea94 0f0c 	teqne	r4, ip
   86a84:	ea95 0f0c 	teqne	r5, ip
   86a88:	f000 f8de 	bleq	86c48 <__aeabi_dmul+0x1dc>
   86a8c:	442c      	add	r4, r5
   86a8e:	ea81 0603 	eor.w	r6, r1, r3
   86a92:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   86a96:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   86a9a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   86a9e:	bf18      	it	ne
   86aa0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   86aa4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   86aa8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   86aac:	d038      	beq.n	86b20 <__aeabi_dmul+0xb4>
   86aae:	fba0 ce02 	umull	ip, lr, r0, r2
   86ab2:	f04f 0500 	mov.w	r5, #0
   86ab6:	fbe1 e502 	umlal	lr, r5, r1, r2
   86aba:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   86abe:	fbe0 e503 	umlal	lr, r5, r0, r3
   86ac2:	f04f 0600 	mov.w	r6, #0
   86ac6:	fbe1 5603 	umlal	r5, r6, r1, r3
   86aca:	f09c 0f00 	teq	ip, #0
   86ace:	bf18      	it	ne
   86ad0:	f04e 0e01 	orrne.w	lr, lr, #1
   86ad4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   86ad8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   86adc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   86ae0:	d204      	bcs.n	86aec <__aeabi_dmul+0x80>
   86ae2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   86ae6:	416d      	adcs	r5, r5
   86ae8:	eb46 0606 	adc.w	r6, r6, r6
   86aec:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   86af0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   86af4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   86af8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   86afc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   86b00:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   86b04:	bf88      	it	hi
   86b06:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   86b0a:	d81e      	bhi.n	86b4a <__aeabi_dmul+0xde>
   86b0c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   86b10:	bf08      	it	eq
   86b12:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   86b16:	f150 0000 	adcs.w	r0, r0, #0
   86b1a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   86b1e:	bd70      	pop	{r4, r5, r6, pc}
   86b20:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   86b24:	ea46 0101 	orr.w	r1, r6, r1
   86b28:	ea40 0002 	orr.w	r0, r0, r2
   86b2c:	ea81 0103 	eor.w	r1, r1, r3
   86b30:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   86b34:	bfc2      	ittt	gt
   86b36:	ebd4 050c 	rsbsgt	r5, r4, ip
   86b3a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   86b3e:	bd70      	popgt	{r4, r5, r6, pc}
   86b40:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   86b44:	f04f 0e00 	mov.w	lr, #0
   86b48:	3c01      	subs	r4, #1
   86b4a:	f300 80ab 	bgt.w	86ca4 <__aeabi_dmul+0x238>
   86b4e:	f114 0f36 	cmn.w	r4, #54	; 0x36
   86b52:	bfde      	ittt	le
   86b54:	2000      	movle	r0, #0
   86b56:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   86b5a:	bd70      	pople	{r4, r5, r6, pc}
   86b5c:	f1c4 0400 	rsb	r4, r4, #0
   86b60:	3c20      	subs	r4, #32
   86b62:	da35      	bge.n	86bd0 <__aeabi_dmul+0x164>
   86b64:	340c      	adds	r4, #12
   86b66:	dc1b      	bgt.n	86ba0 <__aeabi_dmul+0x134>
   86b68:	f104 0414 	add.w	r4, r4, #20
   86b6c:	f1c4 0520 	rsb	r5, r4, #32
   86b70:	fa00 f305 	lsl.w	r3, r0, r5
   86b74:	fa20 f004 	lsr.w	r0, r0, r4
   86b78:	fa01 f205 	lsl.w	r2, r1, r5
   86b7c:	ea40 0002 	orr.w	r0, r0, r2
   86b80:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   86b84:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   86b88:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   86b8c:	fa21 f604 	lsr.w	r6, r1, r4
   86b90:	eb42 0106 	adc.w	r1, r2, r6
   86b94:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   86b98:	bf08      	it	eq
   86b9a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   86b9e:	bd70      	pop	{r4, r5, r6, pc}
   86ba0:	f1c4 040c 	rsb	r4, r4, #12
   86ba4:	f1c4 0520 	rsb	r5, r4, #32
   86ba8:	fa00 f304 	lsl.w	r3, r0, r4
   86bac:	fa20 f005 	lsr.w	r0, r0, r5
   86bb0:	fa01 f204 	lsl.w	r2, r1, r4
   86bb4:	ea40 0002 	orr.w	r0, r0, r2
   86bb8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   86bbc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   86bc0:	f141 0100 	adc.w	r1, r1, #0
   86bc4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   86bc8:	bf08      	it	eq
   86bca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   86bce:	bd70      	pop	{r4, r5, r6, pc}
   86bd0:	f1c4 0520 	rsb	r5, r4, #32
   86bd4:	fa00 f205 	lsl.w	r2, r0, r5
   86bd8:	ea4e 0e02 	orr.w	lr, lr, r2
   86bdc:	fa20 f304 	lsr.w	r3, r0, r4
   86be0:	fa01 f205 	lsl.w	r2, r1, r5
   86be4:	ea43 0302 	orr.w	r3, r3, r2
   86be8:	fa21 f004 	lsr.w	r0, r1, r4
   86bec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   86bf0:	fa21 f204 	lsr.w	r2, r1, r4
   86bf4:	ea20 0002 	bic.w	r0, r0, r2
   86bf8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   86bfc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   86c00:	bf08      	it	eq
   86c02:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   86c06:	bd70      	pop	{r4, r5, r6, pc}
   86c08:	f094 0f00 	teq	r4, #0
   86c0c:	d10f      	bne.n	86c2e <__aeabi_dmul+0x1c2>
   86c0e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   86c12:	0040      	lsls	r0, r0, #1
   86c14:	eb41 0101 	adc.w	r1, r1, r1
   86c18:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86c1c:	bf08      	it	eq
   86c1e:	3c01      	subeq	r4, #1
   86c20:	d0f7      	beq.n	86c12 <__aeabi_dmul+0x1a6>
   86c22:	ea41 0106 	orr.w	r1, r1, r6
   86c26:	f095 0f00 	teq	r5, #0
   86c2a:	bf18      	it	ne
   86c2c:	4770      	bxne	lr
   86c2e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   86c32:	0052      	lsls	r2, r2, #1
   86c34:	eb43 0303 	adc.w	r3, r3, r3
   86c38:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   86c3c:	bf08      	it	eq
   86c3e:	3d01      	subeq	r5, #1
   86c40:	d0f7      	beq.n	86c32 <__aeabi_dmul+0x1c6>
   86c42:	ea43 0306 	orr.w	r3, r3, r6
   86c46:	4770      	bx	lr
   86c48:	ea94 0f0c 	teq	r4, ip
   86c4c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   86c50:	bf18      	it	ne
   86c52:	ea95 0f0c 	teqne	r5, ip
   86c56:	d00c      	beq.n	86c72 <__aeabi_dmul+0x206>
   86c58:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   86c5c:	bf18      	it	ne
   86c5e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86c62:	d1d1      	bne.n	86c08 <__aeabi_dmul+0x19c>
   86c64:	ea81 0103 	eor.w	r1, r1, r3
   86c68:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   86c6c:	f04f 0000 	mov.w	r0, #0
   86c70:	bd70      	pop	{r4, r5, r6, pc}
   86c72:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   86c76:	bf06      	itte	eq
   86c78:	4610      	moveq	r0, r2
   86c7a:	4619      	moveq	r1, r3
   86c7c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86c80:	d019      	beq.n	86cb6 <__aeabi_dmul+0x24a>
   86c82:	ea94 0f0c 	teq	r4, ip
   86c86:	d102      	bne.n	86c8e <__aeabi_dmul+0x222>
   86c88:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   86c8c:	d113      	bne.n	86cb6 <__aeabi_dmul+0x24a>
   86c8e:	ea95 0f0c 	teq	r5, ip
   86c92:	d105      	bne.n	86ca0 <__aeabi_dmul+0x234>
   86c94:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   86c98:	bf1c      	itt	ne
   86c9a:	4610      	movne	r0, r2
   86c9c:	4619      	movne	r1, r3
   86c9e:	d10a      	bne.n	86cb6 <__aeabi_dmul+0x24a>
   86ca0:	ea81 0103 	eor.w	r1, r1, r3
   86ca4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   86ca8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   86cac:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   86cb0:	f04f 0000 	mov.w	r0, #0
   86cb4:	bd70      	pop	{r4, r5, r6, pc}
   86cb6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   86cba:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   86cbe:	bd70      	pop	{r4, r5, r6, pc}

00086cc0 <__aeabi_ddiv>:
   86cc0:	b570      	push	{r4, r5, r6, lr}
   86cc2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   86cc6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   86cca:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   86cce:	bf1d      	ittte	ne
   86cd0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   86cd4:	ea94 0f0c 	teqne	r4, ip
   86cd8:	ea95 0f0c 	teqne	r5, ip
   86cdc:	f000 f8a7 	bleq	86e2e <__aeabi_ddiv+0x16e>
   86ce0:	eba4 0405 	sub.w	r4, r4, r5
   86ce4:	ea81 0e03 	eor.w	lr, r1, r3
   86ce8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   86cec:	ea4f 3101 	mov.w	r1, r1, lsl #12
   86cf0:	f000 8088 	beq.w	86e04 <__aeabi_ddiv+0x144>
   86cf4:	ea4f 3303 	mov.w	r3, r3, lsl #12
   86cf8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   86cfc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   86d00:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   86d04:	ea4f 2202 	mov.w	r2, r2, lsl #8
   86d08:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   86d0c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   86d10:	ea4f 2600 	mov.w	r6, r0, lsl #8
   86d14:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   86d18:	429d      	cmp	r5, r3
   86d1a:	bf08      	it	eq
   86d1c:	4296      	cmpeq	r6, r2
   86d1e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   86d22:	f504 7440 	add.w	r4, r4, #768	; 0x300
   86d26:	d202      	bcs.n	86d2e <__aeabi_ddiv+0x6e>
   86d28:	085b      	lsrs	r3, r3, #1
   86d2a:	ea4f 0232 	mov.w	r2, r2, rrx
   86d2e:	1ab6      	subs	r6, r6, r2
   86d30:	eb65 0503 	sbc.w	r5, r5, r3
   86d34:	085b      	lsrs	r3, r3, #1
   86d36:	ea4f 0232 	mov.w	r2, r2, rrx
   86d3a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   86d3e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   86d42:	ebb6 0e02 	subs.w	lr, r6, r2
   86d46:	eb75 0e03 	sbcs.w	lr, r5, r3
   86d4a:	bf22      	ittt	cs
   86d4c:	1ab6      	subcs	r6, r6, r2
   86d4e:	4675      	movcs	r5, lr
   86d50:	ea40 000c 	orrcs.w	r0, r0, ip
   86d54:	085b      	lsrs	r3, r3, #1
   86d56:	ea4f 0232 	mov.w	r2, r2, rrx
   86d5a:	ebb6 0e02 	subs.w	lr, r6, r2
   86d5e:	eb75 0e03 	sbcs.w	lr, r5, r3
   86d62:	bf22      	ittt	cs
   86d64:	1ab6      	subcs	r6, r6, r2
   86d66:	4675      	movcs	r5, lr
   86d68:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   86d6c:	085b      	lsrs	r3, r3, #1
   86d6e:	ea4f 0232 	mov.w	r2, r2, rrx
   86d72:	ebb6 0e02 	subs.w	lr, r6, r2
   86d76:	eb75 0e03 	sbcs.w	lr, r5, r3
   86d7a:	bf22      	ittt	cs
   86d7c:	1ab6      	subcs	r6, r6, r2
   86d7e:	4675      	movcs	r5, lr
   86d80:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   86d84:	085b      	lsrs	r3, r3, #1
   86d86:	ea4f 0232 	mov.w	r2, r2, rrx
   86d8a:	ebb6 0e02 	subs.w	lr, r6, r2
   86d8e:	eb75 0e03 	sbcs.w	lr, r5, r3
   86d92:	bf22      	ittt	cs
   86d94:	1ab6      	subcs	r6, r6, r2
   86d96:	4675      	movcs	r5, lr
   86d98:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   86d9c:	ea55 0e06 	orrs.w	lr, r5, r6
   86da0:	d018      	beq.n	86dd4 <__aeabi_ddiv+0x114>
   86da2:	ea4f 1505 	mov.w	r5, r5, lsl #4
   86da6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   86daa:	ea4f 1606 	mov.w	r6, r6, lsl #4
   86dae:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   86db2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   86db6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   86dba:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   86dbe:	d1c0      	bne.n	86d42 <__aeabi_ddiv+0x82>
   86dc0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86dc4:	d10b      	bne.n	86dde <__aeabi_ddiv+0x11e>
   86dc6:	ea41 0100 	orr.w	r1, r1, r0
   86dca:	f04f 0000 	mov.w	r0, #0
   86dce:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   86dd2:	e7b6      	b.n	86d42 <__aeabi_ddiv+0x82>
   86dd4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86dd8:	bf04      	itt	eq
   86dda:	4301      	orreq	r1, r0
   86ddc:	2000      	moveq	r0, #0
   86dde:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   86de2:	bf88      	it	hi
   86de4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   86de8:	f63f aeaf 	bhi.w	86b4a <__aeabi_dmul+0xde>
   86dec:	ebb5 0c03 	subs.w	ip, r5, r3
   86df0:	bf04      	itt	eq
   86df2:	ebb6 0c02 	subseq.w	ip, r6, r2
   86df6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   86dfa:	f150 0000 	adcs.w	r0, r0, #0
   86dfe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   86e02:	bd70      	pop	{r4, r5, r6, pc}
   86e04:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   86e08:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   86e0c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   86e10:	bfc2      	ittt	gt
   86e12:	ebd4 050c 	rsbsgt	r5, r4, ip
   86e16:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   86e1a:	bd70      	popgt	{r4, r5, r6, pc}
   86e1c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   86e20:	f04f 0e00 	mov.w	lr, #0
   86e24:	3c01      	subs	r4, #1
   86e26:	e690      	b.n	86b4a <__aeabi_dmul+0xde>
   86e28:	ea45 0e06 	orr.w	lr, r5, r6
   86e2c:	e68d      	b.n	86b4a <__aeabi_dmul+0xde>
   86e2e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   86e32:	ea94 0f0c 	teq	r4, ip
   86e36:	bf08      	it	eq
   86e38:	ea95 0f0c 	teqeq	r5, ip
   86e3c:	f43f af3b 	beq.w	86cb6 <__aeabi_dmul+0x24a>
   86e40:	ea94 0f0c 	teq	r4, ip
   86e44:	d10a      	bne.n	86e5c <__aeabi_ddiv+0x19c>
   86e46:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   86e4a:	f47f af34 	bne.w	86cb6 <__aeabi_dmul+0x24a>
   86e4e:	ea95 0f0c 	teq	r5, ip
   86e52:	f47f af25 	bne.w	86ca0 <__aeabi_dmul+0x234>
   86e56:	4610      	mov	r0, r2
   86e58:	4619      	mov	r1, r3
   86e5a:	e72c      	b.n	86cb6 <__aeabi_dmul+0x24a>
   86e5c:	ea95 0f0c 	teq	r5, ip
   86e60:	d106      	bne.n	86e70 <__aeabi_ddiv+0x1b0>
   86e62:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   86e66:	f43f aefd 	beq.w	86c64 <__aeabi_dmul+0x1f8>
   86e6a:	4610      	mov	r0, r2
   86e6c:	4619      	mov	r1, r3
   86e6e:	e722      	b.n	86cb6 <__aeabi_dmul+0x24a>
   86e70:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   86e74:	bf18      	it	ne
   86e76:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86e7a:	f47f aec5 	bne.w	86c08 <__aeabi_dmul+0x19c>
   86e7e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   86e82:	f47f af0d 	bne.w	86ca0 <__aeabi_dmul+0x234>
   86e86:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   86e8a:	f47f aeeb 	bne.w	86c64 <__aeabi_dmul+0x1f8>
   86e8e:	e712      	b.n	86cb6 <__aeabi_dmul+0x24a>

00086e90 <__gedf2>:
   86e90:	f04f 3cff 	mov.w	ip, #4294967295
   86e94:	e006      	b.n	86ea4 <__cmpdf2+0x4>
   86e96:	bf00      	nop

00086e98 <__ledf2>:
   86e98:	f04f 0c01 	mov.w	ip, #1
   86e9c:	e002      	b.n	86ea4 <__cmpdf2+0x4>
   86e9e:	bf00      	nop

00086ea0 <__cmpdf2>:
   86ea0:	f04f 0c01 	mov.w	ip, #1
   86ea4:	f84d cd04 	str.w	ip, [sp, #-4]!
   86ea8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86eac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86eb0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86eb4:	bf18      	it	ne
   86eb6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   86eba:	d01b      	beq.n	86ef4 <__cmpdf2+0x54>
   86ebc:	b001      	add	sp, #4
   86ebe:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   86ec2:	bf0c      	ite	eq
   86ec4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   86ec8:	ea91 0f03 	teqne	r1, r3
   86ecc:	bf02      	ittt	eq
   86ece:	ea90 0f02 	teqeq	r0, r2
   86ed2:	2000      	moveq	r0, #0
   86ed4:	4770      	bxeq	lr
   86ed6:	f110 0f00 	cmn.w	r0, #0
   86eda:	ea91 0f03 	teq	r1, r3
   86ede:	bf58      	it	pl
   86ee0:	4299      	cmppl	r1, r3
   86ee2:	bf08      	it	eq
   86ee4:	4290      	cmpeq	r0, r2
   86ee6:	bf2c      	ite	cs
   86ee8:	17d8      	asrcs	r0, r3, #31
   86eea:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   86eee:	f040 0001 	orr.w	r0, r0, #1
   86ef2:	4770      	bx	lr
   86ef4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86ef8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86efc:	d102      	bne.n	86f04 <__cmpdf2+0x64>
   86efe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   86f02:	d107      	bne.n	86f14 <__cmpdf2+0x74>
   86f04:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86f08:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86f0c:	d1d6      	bne.n	86ebc <__cmpdf2+0x1c>
   86f0e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   86f12:	d0d3      	beq.n	86ebc <__cmpdf2+0x1c>
   86f14:	f85d 0b04 	ldr.w	r0, [sp], #4
   86f18:	4770      	bx	lr
   86f1a:	bf00      	nop

00086f1c <__aeabi_cdrcmple>:
   86f1c:	4684      	mov	ip, r0
   86f1e:	4610      	mov	r0, r2
   86f20:	4662      	mov	r2, ip
   86f22:	468c      	mov	ip, r1
   86f24:	4619      	mov	r1, r3
   86f26:	4663      	mov	r3, ip
   86f28:	e000      	b.n	86f2c <__aeabi_cdcmpeq>
   86f2a:	bf00      	nop

00086f2c <__aeabi_cdcmpeq>:
   86f2c:	b501      	push	{r0, lr}
   86f2e:	f7ff ffb7 	bl	86ea0 <__cmpdf2>
   86f32:	2800      	cmp	r0, #0
   86f34:	bf48      	it	mi
   86f36:	f110 0f00 	cmnmi.w	r0, #0
   86f3a:	bd01      	pop	{r0, pc}

00086f3c <__aeabi_dcmpeq>:
   86f3c:	f84d ed08 	str.w	lr, [sp, #-8]!
   86f40:	f7ff fff4 	bl	86f2c <__aeabi_cdcmpeq>
   86f44:	bf0c      	ite	eq
   86f46:	2001      	moveq	r0, #1
   86f48:	2000      	movne	r0, #0
   86f4a:	f85d fb08 	ldr.w	pc, [sp], #8
   86f4e:	bf00      	nop

00086f50 <__aeabi_dcmplt>:
   86f50:	f84d ed08 	str.w	lr, [sp, #-8]!
   86f54:	f7ff ffea 	bl	86f2c <__aeabi_cdcmpeq>
   86f58:	bf34      	ite	cc
   86f5a:	2001      	movcc	r0, #1
   86f5c:	2000      	movcs	r0, #0
   86f5e:	f85d fb08 	ldr.w	pc, [sp], #8
   86f62:	bf00      	nop

00086f64 <__aeabi_dcmple>:
   86f64:	f84d ed08 	str.w	lr, [sp, #-8]!
   86f68:	f7ff ffe0 	bl	86f2c <__aeabi_cdcmpeq>
   86f6c:	bf94      	ite	ls
   86f6e:	2001      	movls	r0, #1
   86f70:	2000      	movhi	r0, #0
   86f72:	f85d fb08 	ldr.w	pc, [sp], #8
   86f76:	bf00      	nop

00086f78 <__aeabi_dcmpge>:
   86f78:	f84d ed08 	str.w	lr, [sp, #-8]!
   86f7c:	f7ff ffce 	bl	86f1c <__aeabi_cdrcmple>
   86f80:	bf94      	ite	ls
   86f82:	2001      	movls	r0, #1
   86f84:	2000      	movhi	r0, #0
   86f86:	f85d fb08 	ldr.w	pc, [sp], #8
   86f8a:	bf00      	nop

00086f8c <__aeabi_dcmpgt>:
   86f8c:	f84d ed08 	str.w	lr, [sp, #-8]!
   86f90:	f7ff ffc4 	bl	86f1c <__aeabi_cdrcmple>
   86f94:	bf34      	ite	cc
   86f96:	2001      	movcc	r0, #1
   86f98:	2000      	movcs	r0, #0
   86f9a:	f85d fb08 	ldr.w	pc, [sp], #8
   86f9e:	bf00      	nop

00086fa0 <__aeabi_dcmpun>:
   86fa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86fa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86fa8:	d102      	bne.n	86fb0 <__aeabi_dcmpun+0x10>
   86faa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   86fae:	d10a      	bne.n	86fc6 <__aeabi_dcmpun+0x26>
   86fb0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86fb4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86fb8:	d102      	bne.n	86fc0 <__aeabi_dcmpun+0x20>
   86fba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   86fbe:	d102      	bne.n	86fc6 <__aeabi_dcmpun+0x26>
   86fc0:	f04f 0000 	mov.w	r0, #0
   86fc4:	4770      	bx	lr
   86fc6:	f04f 0001 	mov.w	r0, #1
   86fca:	4770      	bx	lr

00086fcc <__aeabi_d2iz>:
   86fcc:	ea4f 0241 	mov.w	r2, r1, lsl #1
   86fd0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   86fd4:	d215      	bcs.n	87002 <__aeabi_d2iz+0x36>
   86fd6:	d511      	bpl.n	86ffc <__aeabi_d2iz+0x30>
   86fd8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   86fdc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   86fe0:	d912      	bls.n	87008 <__aeabi_d2iz+0x3c>
   86fe2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   86fe6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   86fea:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   86fee:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   86ff2:	fa23 f002 	lsr.w	r0, r3, r2
   86ff6:	bf18      	it	ne
   86ff8:	4240      	negne	r0, r0
   86ffa:	4770      	bx	lr
   86ffc:	f04f 0000 	mov.w	r0, #0
   87000:	4770      	bx	lr
   87002:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   87006:	d105      	bne.n	87014 <__aeabi_d2iz+0x48>
   87008:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   8700c:	bf08      	it	eq
   8700e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   87012:	4770      	bx	lr
   87014:	f04f 0000 	mov.w	r0, #0
   87018:	4770      	bx	lr
   8701a:	bf00      	nop

0008701c <__aeabi_uldivmod>:
   8701c:	b953      	cbnz	r3, 87034 <__aeabi_uldivmod+0x18>
   8701e:	b94a      	cbnz	r2, 87034 <__aeabi_uldivmod+0x18>
   87020:	2900      	cmp	r1, #0
   87022:	bf08      	it	eq
   87024:	2800      	cmpeq	r0, #0
   87026:	bf1c      	itt	ne
   87028:	f04f 31ff 	movne.w	r1, #4294967295
   8702c:	f04f 30ff 	movne.w	r0, #4294967295
   87030:	f000 b97a 	b.w	87328 <__aeabi_idiv0>
   87034:	f1ad 0c08 	sub.w	ip, sp, #8
   87038:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   8703c:	f000 f806 	bl	8704c <__udivmoddi4>
   87040:	f8dd e004 	ldr.w	lr, [sp, #4]
   87044:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   87048:	b004      	add	sp, #16
   8704a:	4770      	bx	lr

0008704c <__udivmoddi4>:
   8704c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   87050:	468c      	mov	ip, r1
   87052:	460e      	mov	r6, r1
   87054:	4604      	mov	r4, r0
   87056:	9d08      	ldr	r5, [sp, #32]
   87058:	2b00      	cmp	r3, #0
   8705a:	d150      	bne.n	870fe <__udivmoddi4+0xb2>
   8705c:	428a      	cmp	r2, r1
   8705e:	4617      	mov	r7, r2
   87060:	d96c      	bls.n	8713c <__udivmoddi4+0xf0>
   87062:	fab2 fe82 	clz	lr, r2
   87066:	f1be 0f00 	cmp.w	lr, #0
   8706a:	d00b      	beq.n	87084 <__udivmoddi4+0x38>
   8706c:	f1ce 0c20 	rsb	ip, lr, #32
   87070:	fa01 f60e 	lsl.w	r6, r1, lr
   87074:	fa20 fc0c 	lsr.w	ip, r0, ip
   87078:	fa02 f70e 	lsl.w	r7, r2, lr
   8707c:	ea4c 0c06 	orr.w	ip, ip, r6
   87080:	fa00 f40e 	lsl.w	r4, r0, lr
   87084:	0c3a      	lsrs	r2, r7, #16
   87086:	fbbc f9f2 	udiv	r9, ip, r2
   8708a:	b2bb      	uxth	r3, r7
   8708c:	fb02 cc19 	mls	ip, r2, r9, ip
   87090:	fb09 fa03 	mul.w	sl, r9, r3
   87094:	ea4f 4814 	mov.w	r8, r4, lsr #16
   87098:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   8709c:	45b2      	cmp	sl, r6
   8709e:	d90a      	bls.n	870b6 <__udivmoddi4+0x6a>
   870a0:	19f6      	adds	r6, r6, r7
   870a2:	f109 31ff 	add.w	r1, r9, #4294967295
   870a6:	f080 8125 	bcs.w	872f4 <__udivmoddi4+0x2a8>
   870aa:	45b2      	cmp	sl, r6
   870ac:	f240 8122 	bls.w	872f4 <__udivmoddi4+0x2a8>
   870b0:	f1a9 0902 	sub.w	r9, r9, #2
   870b4:	443e      	add	r6, r7
   870b6:	eba6 060a 	sub.w	r6, r6, sl
   870ba:	fbb6 f0f2 	udiv	r0, r6, r2
   870be:	fb02 6610 	mls	r6, r2, r0, r6
   870c2:	fb00 f303 	mul.w	r3, r0, r3
   870c6:	b2a4      	uxth	r4, r4
   870c8:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   870cc:	42a3      	cmp	r3, r4
   870ce:	d909      	bls.n	870e4 <__udivmoddi4+0x98>
   870d0:	19e4      	adds	r4, r4, r7
   870d2:	f100 32ff 	add.w	r2, r0, #4294967295
   870d6:	f080 810b 	bcs.w	872f0 <__udivmoddi4+0x2a4>
   870da:	42a3      	cmp	r3, r4
   870dc:	f240 8108 	bls.w	872f0 <__udivmoddi4+0x2a4>
   870e0:	3802      	subs	r0, #2
   870e2:	443c      	add	r4, r7
   870e4:	2100      	movs	r1, #0
   870e6:	1ae4      	subs	r4, r4, r3
   870e8:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   870ec:	2d00      	cmp	r5, #0
   870ee:	d062      	beq.n	871b6 <__udivmoddi4+0x16a>
   870f0:	2300      	movs	r3, #0
   870f2:	fa24 f40e 	lsr.w	r4, r4, lr
   870f6:	602c      	str	r4, [r5, #0]
   870f8:	606b      	str	r3, [r5, #4]
   870fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   870fe:	428b      	cmp	r3, r1
   87100:	d907      	bls.n	87112 <__udivmoddi4+0xc6>
   87102:	2d00      	cmp	r5, #0
   87104:	d055      	beq.n	871b2 <__udivmoddi4+0x166>
   87106:	2100      	movs	r1, #0
   87108:	e885 0041 	stmia.w	r5, {r0, r6}
   8710c:	4608      	mov	r0, r1
   8710e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   87112:	fab3 f183 	clz	r1, r3
   87116:	2900      	cmp	r1, #0
   87118:	f040 808f 	bne.w	8723a <__udivmoddi4+0x1ee>
   8711c:	42b3      	cmp	r3, r6
   8711e:	d302      	bcc.n	87126 <__udivmoddi4+0xda>
   87120:	4282      	cmp	r2, r0
   87122:	f200 80fc 	bhi.w	8731e <__udivmoddi4+0x2d2>
   87126:	1a84      	subs	r4, r0, r2
   87128:	eb66 0603 	sbc.w	r6, r6, r3
   8712c:	2001      	movs	r0, #1
   8712e:	46b4      	mov	ip, r6
   87130:	2d00      	cmp	r5, #0
   87132:	d040      	beq.n	871b6 <__udivmoddi4+0x16a>
   87134:	e885 1010 	stmia.w	r5, {r4, ip}
   87138:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8713c:	b912      	cbnz	r2, 87144 <__udivmoddi4+0xf8>
   8713e:	2701      	movs	r7, #1
   87140:	fbb7 f7f2 	udiv	r7, r7, r2
   87144:	fab7 fe87 	clz	lr, r7
   87148:	f1be 0f00 	cmp.w	lr, #0
   8714c:	d135      	bne.n	871ba <__udivmoddi4+0x16e>
   8714e:	2101      	movs	r1, #1
   87150:	1bf6      	subs	r6, r6, r7
   87152:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   87156:	fa1f f887 	uxth.w	r8, r7
   8715a:	fbb6 f2fc 	udiv	r2, r6, ip
   8715e:	fb0c 6612 	mls	r6, ip, r2, r6
   87162:	fb08 f002 	mul.w	r0, r8, r2
   87166:	0c23      	lsrs	r3, r4, #16
   87168:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   8716c:	42b0      	cmp	r0, r6
   8716e:	d907      	bls.n	87180 <__udivmoddi4+0x134>
   87170:	19f6      	adds	r6, r6, r7
   87172:	f102 33ff 	add.w	r3, r2, #4294967295
   87176:	d202      	bcs.n	8717e <__udivmoddi4+0x132>
   87178:	42b0      	cmp	r0, r6
   8717a:	f200 80d2 	bhi.w	87322 <__udivmoddi4+0x2d6>
   8717e:	461a      	mov	r2, r3
   87180:	1a36      	subs	r6, r6, r0
   87182:	fbb6 f0fc 	udiv	r0, r6, ip
   87186:	fb0c 6610 	mls	r6, ip, r0, r6
   8718a:	fb08 f800 	mul.w	r8, r8, r0
   8718e:	b2a3      	uxth	r3, r4
   87190:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   87194:	45a0      	cmp	r8, r4
   87196:	d907      	bls.n	871a8 <__udivmoddi4+0x15c>
   87198:	19e4      	adds	r4, r4, r7
   8719a:	f100 33ff 	add.w	r3, r0, #4294967295
   8719e:	d202      	bcs.n	871a6 <__udivmoddi4+0x15a>
   871a0:	45a0      	cmp	r8, r4
   871a2:	f200 80b9 	bhi.w	87318 <__udivmoddi4+0x2cc>
   871a6:	4618      	mov	r0, r3
   871a8:	eba4 0408 	sub.w	r4, r4, r8
   871ac:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   871b0:	e79c      	b.n	870ec <__udivmoddi4+0xa0>
   871b2:	4629      	mov	r1, r5
   871b4:	4628      	mov	r0, r5
   871b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   871ba:	fa07 f70e 	lsl.w	r7, r7, lr
   871be:	f1ce 0320 	rsb	r3, lr, #32
   871c2:	fa26 f203 	lsr.w	r2, r6, r3
   871c6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   871ca:	fbb2 f1fc 	udiv	r1, r2, ip
   871ce:	fa1f f887 	uxth.w	r8, r7
   871d2:	fb0c 2211 	mls	r2, ip, r1, r2
   871d6:	fa06 f60e 	lsl.w	r6, r6, lr
   871da:	fa20 f303 	lsr.w	r3, r0, r3
   871de:	fb01 f908 	mul.w	r9, r1, r8
   871e2:	4333      	orrs	r3, r6
   871e4:	0c1e      	lsrs	r6, r3, #16
   871e6:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   871ea:	45b1      	cmp	r9, r6
   871ec:	fa00 f40e 	lsl.w	r4, r0, lr
   871f0:	d909      	bls.n	87206 <__udivmoddi4+0x1ba>
   871f2:	19f6      	adds	r6, r6, r7
   871f4:	f101 32ff 	add.w	r2, r1, #4294967295
   871f8:	f080 808c 	bcs.w	87314 <__udivmoddi4+0x2c8>
   871fc:	45b1      	cmp	r9, r6
   871fe:	f240 8089 	bls.w	87314 <__udivmoddi4+0x2c8>
   87202:	3902      	subs	r1, #2
   87204:	443e      	add	r6, r7
   87206:	eba6 0609 	sub.w	r6, r6, r9
   8720a:	fbb6 f0fc 	udiv	r0, r6, ip
   8720e:	fb0c 6210 	mls	r2, ip, r0, r6
   87212:	fb00 f908 	mul.w	r9, r0, r8
   87216:	b29e      	uxth	r6, r3
   87218:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   8721c:	45b1      	cmp	r9, r6
   8721e:	d907      	bls.n	87230 <__udivmoddi4+0x1e4>
   87220:	19f6      	adds	r6, r6, r7
   87222:	f100 33ff 	add.w	r3, r0, #4294967295
   87226:	d271      	bcs.n	8730c <__udivmoddi4+0x2c0>
   87228:	45b1      	cmp	r9, r6
   8722a:	d96f      	bls.n	8730c <__udivmoddi4+0x2c0>
   8722c:	3802      	subs	r0, #2
   8722e:	443e      	add	r6, r7
   87230:	eba6 0609 	sub.w	r6, r6, r9
   87234:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   87238:	e78f      	b.n	8715a <__udivmoddi4+0x10e>
   8723a:	f1c1 0720 	rsb	r7, r1, #32
   8723e:	fa22 f807 	lsr.w	r8, r2, r7
   87242:	408b      	lsls	r3, r1
   87244:	ea48 0303 	orr.w	r3, r8, r3
   87248:	fa26 f407 	lsr.w	r4, r6, r7
   8724c:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   87250:	fbb4 f9fe 	udiv	r9, r4, lr
   87254:	fa1f fc83 	uxth.w	ip, r3
   87258:	fb0e 4419 	mls	r4, lr, r9, r4
   8725c:	408e      	lsls	r6, r1
   8725e:	fa20 f807 	lsr.w	r8, r0, r7
   87262:	fb09 fa0c 	mul.w	sl, r9, ip
   87266:	ea48 0806 	orr.w	r8, r8, r6
   8726a:	ea4f 4618 	mov.w	r6, r8, lsr #16
   8726e:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   87272:	45a2      	cmp	sl, r4
   87274:	fa02 f201 	lsl.w	r2, r2, r1
   87278:	fa00 f601 	lsl.w	r6, r0, r1
   8727c:	d908      	bls.n	87290 <__udivmoddi4+0x244>
   8727e:	18e4      	adds	r4, r4, r3
   87280:	f109 30ff 	add.w	r0, r9, #4294967295
   87284:	d244      	bcs.n	87310 <__udivmoddi4+0x2c4>
   87286:	45a2      	cmp	sl, r4
   87288:	d942      	bls.n	87310 <__udivmoddi4+0x2c4>
   8728a:	f1a9 0902 	sub.w	r9, r9, #2
   8728e:	441c      	add	r4, r3
   87290:	eba4 040a 	sub.w	r4, r4, sl
   87294:	fbb4 f0fe 	udiv	r0, r4, lr
   87298:	fb0e 4410 	mls	r4, lr, r0, r4
   8729c:	fb00 fc0c 	mul.w	ip, r0, ip
   872a0:	fa1f f888 	uxth.w	r8, r8
   872a4:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   872a8:	45a4      	cmp	ip, r4
   872aa:	d907      	bls.n	872bc <__udivmoddi4+0x270>
   872ac:	18e4      	adds	r4, r4, r3
   872ae:	f100 3eff 	add.w	lr, r0, #4294967295
   872b2:	d229      	bcs.n	87308 <__udivmoddi4+0x2bc>
   872b4:	45a4      	cmp	ip, r4
   872b6:	d927      	bls.n	87308 <__udivmoddi4+0x2bc>
   872b8:	3802      	subs	r0, #2
   872ba:	441c      	add	r4, r3
   872bc:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   872c0:	fba0 8902 	umull	r8, r9, r0, r2
   872c4:	eba4 0c0c 	sub.w	ip, r4, ip
   872c8:	45cc      	cmp	ip, r9
   872ca:	46c2      	mov	sl, r8
   872cc:	46ce      	mov	lr, r9
   872ce:	d315      	bcc.n	872fc <__udivmoddi4+0x2b0>
   872d0:	d012      	beq.n	872f8 <__udivmoddi4+0x2ac>
   872d2:	b155      	cbz	r5, 872ea <__udivmoddi4+0x29e>
   872d4:	ebb6 030a 	subs.w	r3, r6, sl
   872d8:	eb6c 060e 	sbc.w	r6, ip, lr
   872dc:	fa06 f707 	lsl.w	r7, r6, r7
   872e0:	40cb      	lsrs	r3, r1
   872e2:	431f      	orrs	r7, r3
   872e4:	40ce      	lsrs	r6, r1
   872e6:	602f      	str	r7, [r5, #0]
   872e8:	606e      	str	r6, [r5, #4]
   872ea:	2100      	movs	r1, #0
   872ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   872f0:	4610      	mov	r0, r2
   872f2:	e6f7      	b.n	870e4 <__udivmoddi4+0x98>
   872f4:	4689      	mov	r9, r1
   872f6:	e6de      	b.n	870b6 <__udivmoddi4+0x6a>
   872f8:	4546      	cmp	r6, r8
   872fa:	d2ea      	bcs.n	872d2 <__udivmoddi4+0x286>
   872fc:	ebb8 0a02 	subs.w	sl, r8, r2
   87300:	eb69 0e03 	sbc.w	lr, r9, r3
   87304:	3801      	subs	r0, #1
   87306:	e7e4      	b.n	872d2 <__udivmoddi4+0x286>
   87308:	4670      	mov	r0, lr
   8730a:	e7d7      	b.n	872bc <__udivmoddi4+0x270>
   8730c:	4618      	mov	r0, r3
   8730e:	e78f      	b.n	87230 <__udivmoddi4+0x1e4>
   87310:	4681      	mov	r9, r0
   87312:	e7bd      	b.n	87290 <__udivmoddi4+0x244>
   87314:	4611      	mov	r1, r2
   87316:	e776      	b.n	87206 <__udivmoddi4+0x1ba>
   87318:	3802      	subs	r0, #2
   8731a:	443c      	add	r4, r7
   8731c:	e744      	b.n	871a8 <__udivmoddi4+0x15c>
   8731e:	4608      	mov	r0, r1
   87320:	e706      	b.n	87130 <__udivmoddi4+0xe4>
   87322:	3a02      	subs	r2, #2
   87324:	443e      	add	r6, r7
   87326:	e72b      	b.n	87180 <__udivmoddi4+0x134>

00087328 <__aeabi_idiv0>:
   87328:	4770      	bx	lr
   8732a:	bf00      	nop
   8732c:	6c6c6548 	.word	0x6c6c6548
   87330:	6f77206f 	.word	0x6f77206f
   87334:	0d646c72 	.word	0x0d646c72
   87338:	0000000a 	.word	0x0000000a
   8733c:	00000000 	.word	0x00000000
   87340:	58323025 	.word	0x58323025
   87344:	3230252c 	.word	0x3230252c
   87348:	30252c58 	.word	0x30252c58
   8734c:	252c5832 	.word	0x252c5832
   87350:	2c583230 	.word	0x2c583230
   87354:	58323025 	.word	0x58323025
   87358:	3230252c 	.word	0x3230252c
   8735c:	30252c58 	.word	0x30252c58
   87360:	252c5832 	.word	0x252c5832
   87364:	0a583230 	.word	0x0a583230
   87368:	0000000d 	.word	0x0000000d
   8736c:	69766544 	.word	0x69766544
   87370:	49206563 	.word	0x49206563
   87374:	203d2044 	.word	0x203d2044
   87378:	30257830 	.word	0x30257830
   8737c:	0d0a5832 	.word	0x0d0a5832
   87380:	00000000 	.word	0x00000000

00087384 <_global_impure_ptr>:
   87384:	200701e8 00464e49 00666e69 004e414e     ... INF.inf.NAN.
   87394:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   873a4:	46454443 00000000 33323130 37363534     CDEF....01234567
   873b4:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   873c4:	0000296c 00000030                       l)..0...

000873cc <blanks.7223>:
   873cc:	20202020 20202020 20202020 20202020                     

000873dc <zeroes.7224>:
   873dc:	30303030 30303030 30303030 30303030     0000000000000000
   873ec:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   873fc:	00000000                                ....

00087400 <__mprec_bigtens>:
   87400:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   87410:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   87420:	7f73bf3c 75154fdd                       <.s..O.u

00087428 <__mprec_tens>:
   87428:	00000000 3ff00000 00000000 40240000     .......?......$@
   87438:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   87448:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   87458:	00000000 412e8480 00000000 416312d0     .......A......cA
   87468:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   87478:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   87488:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   87498:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   874a8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   874b8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   874c8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   874d8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   874e8:	79d99db4 44ea7843                       ...yCx.D

000874f0 <p05.6055>:
   874f0:	00000005 00000019 0000007d 00000043     ........}...C...
   87500:	49534f50 00000058 0000002e              POSIX.......

0008750c <_ctype_>:
   8750c:	20202000 20202020 28282020 20282828     .         ((((( 
   8751c:	20202020 20202020 20202020 20202020                     
   8752c:	10108820 10101010 10101010 10101010      ...............
   8753c:	04040410 04040404 10040404 10101010     ................
   8754c:	41411010 41414141 01010101 01010101     ..AAAAAA........
   8755c:	01010101 01010101 01010101 10101010     ................
   8756c:	42421010 42424242 02020202 02020202     ..BBBBBB........
   8757c:	02020202 02020202 02020202 10101010     ................
   8758c:	00000020 00000000 00000000 00000000      ...............
	...

00087610 <_init>:
   87610:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87612:	bf00      	nop
   87614:	bcf8      	pop	{r3, r4, r5, r6, r7}
   87616:	bc08      	pop	{r3}
   87618:	469e      	mov	lr, r3
   8761a:	4770      	bx	lr

0008761c <__init_array_start>:
   8761c:	0008420d 	.word	0x0008420d

00087620 <__frame_dummy_init_array_entry>:
   87620:	00080119                                ....

00087624 <_fini>:
   87624:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87626:	bf00      	nop
   87628:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8762a:	bc08      	pop	{r3}
   8762c:	469e      	mov	lr, r3
   8762e:	4770      	bx	lr

00087630 <__fini_array_start>:
   87630:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
	...

2007000c <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4a14      	ldr	r2, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b13      	ldr	r3, [r2, #48]	; 0x30
20070048:	f023 0303 	bic.w	r3, r3, #3
2007004c:	f043 0301 	orr.w	r3, r3, #1
20070050:	6313      	str	r3, [r2, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070054:	f013 0f08 	tst.w	r3, #8
20070058:	d0fb      	beq.n	20070052 <SystemInit+0x46>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005a:	4a12      	ldr	r2, [pc, #72]	; (200700a4 <SystemInit+0x98>)
2007005c:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
2007005e:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070060:	461a      	mov	r2, r3
20070062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070064:	f013 0f02 	tst.w	r3, #2
20070068:	d0fb      	beq.n	20070062 <SystemInit+0x56>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006a:	2211      	movs	r2, #17
2007006c:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
2007006e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070070:	461a      	mov	r2, r3
20070072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070074:	f013 0f08 	tst.w	r3, #8
20070078:	d0fb      	beq.n	20070072 <SystemInit+0x66>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007a:	2212      	movs	r2, #18
2007007c:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	461a      	mov	r2, r3
20070082:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070084:	f013 0f08 	tst.w	r3, #8
20070088:	d0fb      	beq.n	20070082 <SystemInit+0x76>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008a:	4a07      	ldr	r2, [pc, #28]	; (200700a8 <SystemInit+0x9c>)
2007008c:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
2007008e:	601a      	str	r2, [r3, #0]
20070090:	4770      	bx	lr
20070092:	bf00      	nop
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	200701dc 	.word	0x200701dc

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d915      	bls.n	200700e2 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b6:	4b1b      	ldr	r3, [pc, #108]	; (20070124 <system_init_flash+0x74>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d919      	bls.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700bc:	4b1a      	ldr	r3, [pc, #104]	; (20070128 <system_init_flash+0x78>)
200700be:	4298      	cmp	r0, r3
200700c0:	d91e      	bls.n	20070100 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700c2:	4b1a      	ldr	r3, [pc, #104]	; (2007012c <system_init_flash+0x7c>)
200700c4:	4298      	cmp	r0, r3
200700c6:	d923      	bls.n	20070110 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700c8:	4b19      	ldr	r3, [pc, #100]	; (20070130 <system_init_flash+0x80>)
200700ca:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700cc:	bf94      	ite	ls
200700ce:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700d2:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700d6:	4a17      	ldr	r2, [pc, #92]	; (20070134 <system_init_flash+0x84>)
200700d8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700da:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700de:	6013      	str	r3, [r2, #0]
200700e0:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e2:	2300      	movs	r3, #0
200700e4:	4a13      	ldr	r2, [pc, #76]	; (20070134 <system_init_flash+0x84>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f0:	f44f 7380 	mov.w	r3, #256	; 0x100
200700f4:	4a0f      	ldr	r2, [pc, #60]	; (20070134 <system_init_flash+0x84>)
200700f6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700fc:	6013      	str	r3, [r2, #0]
200700fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070100:	f44f 7300 	mov.w	r3, #512	; 0x200
20070104:	4a0b      	ldr	r2, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070106:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070108:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007010c:	6013      	str	r3, [r2, #0]
2007010e:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070110:	f44f 7340 	mov.w	r3, #768	; 0x300
20070114:	4a07      	ldr	r2, [pc, #28]	; (20070134 <system_init_flash+0x84>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	02faf07f 	.word	0x02faf07f
20070128:	03d08fff 	.word	0x03d08fff
2007012c:	04c4b3ff 	.word	0x04c4b3ff
20070130:	055d4a7f 	.word	0x055d4a7f
20070134:	400e0a00 	.word	0x400e0a00

20070138 <udi_api_cdc_comm>:
20070138:	00080161 000801ad 000801e1 000801dd     a...............
20070148:	00000000                                ....

2007014c <udi_api_cdc_data>:
2007014c:	00080519 000801bd 000801d9 000801dd     ................
2007015c:	000803e9                                ....

20070160 <udc_config>:
20070160:	200701b8 2007016c 00000000              ... l.. ....

2007016c <udc_config_fs>:
2007016c:	20070174 200701cc                       t.. ... 

20070174 <udc_desc_fs>:
20070174:	00430209 c0000102 00040932 02020100     ..C.....2.......
20070184:	24050001 04011000 05020224 01000624     ...$....$...$...
20070194:	03012405 83050701 10004003 00010409     .$.......@......
200701a4:	00000a02 81050700 00004002 02020507     .........@......
200701b4:	00000040                                @...

200701b8 <udc_device_desc>:
200701b8:	02000112 40000002 240403eb 00000100     .......@...$....
200701c8:	00000100                                ....

200701cc <udi_apis>:
200701cc:	20070138 2007014c                       8.. L.. 

200701d4 <udc_string_desc_languageid>:
200701d4:	04090304                                ....

200701d8 <g_interrupt_enabled>:
200701d8:	00000001                                ....

200701dc <SystemCoreClock>:
200701dc:	003d0900                                ..=.

200701e0 <_impure_ptr>:
200701e0:	200701e8 00000000                       ... ....

200701e8 <impure_data>:
200701e8:	00000000 200704d4 2007053c 200705a4     ....... <.. ... 
	...
20070290:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200702a0:	0005deec 0000000b 00000000 00000000     ................
	...

20070610 <__atexit_recursive_mutex>:
20070610:	20070f1c                                ... 

20070614 <__malloc_av_>:
	...
2007061c:	20070614 20070614 2007061c 2007061c     ... ... ... ... 
2007062c:	20070624 20070624 2007062c 2007062c     $.. $.. ,.. ,.. 
2007063c:	20070634 20070634 2007063c 2007063c     4.. 4.. <.. <.. 
2007064c:	20070644 20070644 2007064c 2007064c     D.. D.. L.. L.. 
2007065c:	20070654 20070654 2007065c 2007065c     T.. T.. \.. \.. 
2007066c:	20070664 20070664 2007066c 2007066c     d.. d.. l.. l.. 
2007067c:	20070674 20070674 2007067c 2007067c     t.. t.. |.. |.. 
2007068c:	20070684 20070684 2007068c 2007068c     ... ... ... ... 
2007069c:	20070694 20070694 2007069c 2007069c     ... ... ... ... 
200706ac:	200706a4 200706a4 200706ac 200706ac     ... ... ... ... 
200706bc:	200706b4 200706b4 200706bc 200706bc     ... ... ... ... 
200706cc:	200706c4 200706c4 200706cc 200706cc     ... ... ... ... 
200706dc:	200706d4 200706d4 200706dc 200706dc     ... ... ... ... 
200706ec:	200706e4 200706e4 200706ec 200706ec     ... ... ... ... 
200706fc:	200706f4 200706f4 200706fc 200706fc     ... ... ... ... 
2007070c:	20070704 20070704 2007070c 2007070c     ... ... ... ... 
2007071c:	20070714 20070714 2007071c 2007071c     ... ... ... ... 
2007072c:	20070724 20070724 2007072c 2007072c     $.. $.. ,.. ,.. 
2007073c:	20070734 20070734 2007073c 2007073c     4.. 4.. <.. <.. 
2007074c:	20070744 20070744 2007074c 2007074c     D.. D.. L.. L.. 
2007075c:	20070754 20070754 2007075c 2007075c     T.. T.. \.. \.. 
2007076c:	20070764 20070764 2007076c 2007076c     d.. d.. l.. l.. 
2007077c:	20070774 20070774 2007077c 2007077c     t.. t.. |.. |.. 
2007078c:	20070784 20070784 2007078c 2007078c     ... ... ... ... 
2007079c:	20070794 20070794 2007079c 2007079c     ... ... ... ... 
200707ac:	200707a4 200707a4 200707ac 200707ac     ... ... ... ... 
200707bc:	200707b4 200707b4 200707bc 200707bc     ... ... ... ... 
200707cc:	200707c4 200707c4 200707cc 200707cc     ... ... ... ... 
200707dc:	200707d4 200707d4 200707dc 200707dc     ... ... ... ... 
200707ec:	200707e4 200707e4 200707ec 200707ec     ... ... ... ... 
200707fc:	200707f4 200707f4 200707fc 200707fc     ... ... ... ... 
2007080c:	20070804 20070804 2007080c 2007080c     ... ... ... ... 
2007081c:	20070814 20070814 2007081c 2007081c     ... ... ... ... 
2007082c:	20070824 20070824 2007082c 2007082c     $.. $.. ,.. ,.. 
2007083c:	20070834 20070834 2007083c 2007083c     4.. 4.. <.. <.. 
2007084c:	20070844 20070844 2007084c 2007084c     D.. D.. L.. L.. 
2007085c:	20070854 20070854 2007085c 2007085c     T.. T.. \.. \.. 
2007086c:	20070864 20070864 2007086c 2007086c     d.. d.. l.. l.. 
2007087c:	20070874 20070874 2007087c 2007087c     t.. t.. |.. |.. 
2007088c:	20070884 20070884 2007088c 2007088c     ... ... ... ... 
2007089c:	20070894 20070894 2007089c 2007089c     ... ... ... ... 
200708ac:	200708a4 200708a4 200708ac 200708ac     ... ... ... ... 
200708bc:	200708b4 200708b4 200708bc 200708bc     ... ... ... ... 
200708cc:	200708c4 200708c4 200708cc 200708cc     ... ... ... ... 
200708dc:	200708d4 200708d4 200708dc 200708dc     ... ... ... ... 
200708ec:	200708e4 200708e4 200708ec 200708ec     ... ... ... ... 
200708fc:	200708f4 200708f4 200708fc 200708fc     ... ... ... ... 
2007090c:	20070904 20070904 2007090c 2007090c     ... ... ... ... 
2007091c:	20070914 20070914 2007091c 2007091c     ... ... ... ... 
2007092c:	20070924 20070924 2007092c 2007092c     $.. $.. ,.. ,.. 
2007093c:	20070934 20070934 2007093c 2007093c     4.. 4.. <.. <.. 
2007094c:	20070944 20070944 2007094c 2007094c     D.. D.. L.. L.. 
2007095c:	20070954 20070954 2007095c 2007095c     T.. T.. \.. \.. 
2007096c:	20070964 20070964 2007096c 2007096c     d.. d.. l.. l.. 
2007097c:	20070974 20070974 2007097c 2007097c     t.. t.. |.. |.. 
2007098c:	20070984 20070984 2007098c 2007098c     ... ... ... ... 
2007099c:	20070994 20070994 2007099c 2007099c     ... ... ... ... 
200709ac:	200709a4 200709a4 200709ac 200709ac     ... ... ... ... 
200709bc:	200709b4 200709b4 200709bc 200709bc     ... ... ... ... 
200709cc:	200709c4 200709c4 200709cc 200709cc     ... ... ... ... 
200709dc:	200709d4 200709d4 200709dc 200709dc     ... ... ... ... 
200709ec:	200709e4 200709e4 200709ec 200709ec     ... ... ... ... 
200709fc:	200709f4 200709f4 200709fc 200709fc     ... ... ... ... 
20070a0c:	20070a04 20070a04 20070a0c 20070a0c     ... ... ... ... 

20070a1c <__malloc_sbrk_base>:
20070a1c:	ffffffff                                ....

20070a20 <__malloc_trim_threshold>:
20070a20:	00020000                                ....

20070a24 <__global_locale>:
20070a24:	00000043 00000000 00000000 00000000     C...............
	...
20070a44:	00000043 00000000 00000000 00000000     C...............
	...
20070a64:	00000043 00000000 00000000 00000000     C...............
	...
20070a84:	00000043 00000000 00000000 00000000     C...............
	...
20070aa4:	00000043 00000000 00000000 00000000     C...............
	...
20070ac4:	00000043 00000000 00000000 00000000     C...............
	...
20070ae4:	00000043 00000000 00000000 00000000     C...............
	...
20070b04:	000866e5 00086285 00000000 0008750c     .f...b.......u..
20070b14:	00087508 00087380 00087380 00087380     .u...s...s...s..
20070b24:	00087380 00087380 00087380 00087380     .s...s...s...s..
20070b34:	00087380 00087380 ffffffff ffffffff     .s...s..........
20070b44:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20070b6c:	53410000 00494943 00000000 00000000     ..ASCII.........
	...
